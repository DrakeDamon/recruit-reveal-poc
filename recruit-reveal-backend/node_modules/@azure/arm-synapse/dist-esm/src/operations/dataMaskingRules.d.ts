import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { DataMaskingRules } from "../operationsInterfaces";
import { SynapseManagementClient } from "../synapseManagementClient";
import { DataMaskingRule, DataMaskingRulesListBySqlPoolOptionalParams, DataMaskingRulesCreateOrUpdateOptionalParams, DataMaskingRulesCreateOrUpdateResponse, DataMaskingRulesGetOptionalParams, DataMaskingRulesGetResponse } from "../models";
/** Class containing DataMaskingRules operations. */
export declare class DataMaskingRulesImpl implements DataMaskingRules {
    private readonly client;
    /**
     * Initialize a new instance of the class DataMaskingRules class.
     * @param client Reference to the service client
     */
    constructor(client: SynapseManagementClient);
    /**
     * Gets a list of Sql pool data masking rules.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name
     * @param options The options parameters.
     */
    listBySqlPool(resourceGroupName: string, workspaceName: string, sqlPoolName: string, options?: DataMaskingRulesListBySqlPoolOptionalParams): PagedAsyncIterableIterator<DataMaskingRule>;
    private listBySqlPoolPagingPage;
    private listBySqlPoolPagingAll;
    /**
     * Creates or updates a Sql pool data masking rule.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name
     * @param dataMaskingRuleName The name of the data masking rule.
     * @param parameters The required parameters for creating or updating a data masking rule.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, workspaceName: string, sqlPoolName: string, dataMaskingRuleName: string, parameters: DataMaskingRule, options?: DataMaskingRulesCreateOrUpdateOptionalParams): Promise<DataMaskingRulesCreateOrUpdateResponse>;
    /**
     * Gets the specific Sql pool data masking rule.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name
     * @param dataMaskingRuleName The name of the data masking rule.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, workspaceName: string, sqlPoolName: string, dataMaskingRuleName: string, options?: DataMaskingRulesGetOptionalParams): Promise<DataMaskingRulesGetResponse>;
    /**
     * Gets a list of Sql pool data masking rules.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name
     * @param options The options parameters.
     */
    private _listBySqlPool;
}
//# sourceMappingURL=dataMaskingRules.d.ts.map