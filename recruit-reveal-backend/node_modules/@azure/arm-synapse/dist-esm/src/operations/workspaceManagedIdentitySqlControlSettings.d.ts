import { WorkspaceManagedIdentitySqlControlSettings } from "../operationsInterfaces";
import { SynapseManagementClient } from "../synapseManagementClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { WorkspaceManagedIdentitySqlControlSettingsGetOptionalParams, WorkspaceManagedIdentitySqlControlSettingsGetResponse, ManagedIdentitySqlControlSettingsModel, WorkspaceManagedIdentitySqlControlSettingsCreateOrUpdateOptionalParams, WorkspaceManagedIdentitySqlControlSettingsCreateOrUpdateResponse } from "../models";
/** Class containing WorkspaceManagedIdentitySqlControlSettings operations. */
export declare class WorkspaceManagedIdentitySqlControlSettingsImpl implements WorkspaceManagedIdentitySqlControlSettings {
    private readonly client;
    /**
     * Initialize a new instance of the class WorkspaceManagedIdentitySqlControlSettings class.
     * @param client Reference to the service client
     */
    constructor(client: SynapseManagementClient);
    /**
     * Get Managed Identity Sql Control Settings
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, workspaceName: string, options?: WorkspaceManagedIdentitySqlControlSettingsGetOptionalParams): Promise<WorkspaceManagedIdentitySqlControlSettingsGetResponse>;
    /**
     * Create or update Managed Identity Sql Control Settings
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param managedIdentitySqlControlSettings Managed Identity Sql Control Settings
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, workspaceName: string, managedIdentitySqlControlSettings: ManagedIdentitySqlControlSettingsModel, options?: WorkspaceManagedIdentitySqlControlSettingsCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<WorkspaceManagedIdentitySqlControlSettingsCreateOrUpdateResponse>, WorkspaceManagedIdentitySqlControlSettingsCreateOrUpdateResponse>>;
    /**
     * Create or update Managed Identity Sql Control Settings
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param managedIdentitySqlControlSettings Managed Identity Sql Control Settings
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, workspaceName: string, managedIdentitySqlControlSettings: ManagedIdentitySqlControlSettingsModel, options?: WorkspaceManagedIdentitySqlControlSettingsCreateOrUpdateOptionalParams): Promise<WorkspaceManagedIdentitySqlControlSettingsCreateOrUpdateResponse>;
}
//# sourceMappingURL=workspaceManagedIdentitySqlControlSettings.d.ts.map