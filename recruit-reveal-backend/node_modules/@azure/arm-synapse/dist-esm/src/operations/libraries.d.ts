import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Libraries } from "../operationsInterfaces";
import { SynapseManagementClient } from "../synapseManagementClient";
import { LibraryResource, LibrariesListByWorkspaceOptionalParams } from "../models";
/** Class containing Libraries operations. */
export declare class LibrariesImpl implements Libraries {
    private readonly client;
    /**
     * Initialize a new instance of the class Libraries class.
     * @param client Reference to the service client
     */
    constructor(client: SynapseManagementClient);
    /**
     * List libraries in a workspace.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param options The options parameters.
     */
    listByWorkspace(resourceGroupName: string, workspaceName: string, options?: LibrariesListByWorkspaceOptionalParams): PagedAsyncIterableIterator<LibraryResource>;
    private listByWorkspacePagingPage;
    private listByWorkspacePagingAll;
    /**
     * List libraries in a workspace.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param options The options parameters.
     */
    private _listByWorkspace;
    /**
     * ListByWorkspaceNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param nextLink The nextLink from the previous successful call to the ListByWorkspace method.
     * @param options The options parameters.
     */
    private _listByWorkspaceNext;
}
//# sourceMappingURL=libraries.d.ts.map