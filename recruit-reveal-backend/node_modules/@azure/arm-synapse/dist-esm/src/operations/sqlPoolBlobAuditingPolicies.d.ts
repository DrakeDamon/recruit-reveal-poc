import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SqlPoolBlobAuditingPolicies } from "../operationsInterfaces";
import { SynapseManagementClient } from "../synapseManagementClient";
import { SqlPoolBlobAuditingPolicy, SqlPoolBlobAuditingPoliciesListBySqlPoolOptionalParams, SqlPoolBlobAuditingPoliciesGetOptionalParams, SqlPoolBlobAuditingPoliciesGetResponse, SqlPoolBlobAuditingPoliciesCreateOrUpdateOptionalParams, SqlPoolBlobAuditingPoliciesCreateOrUpdateResponse } from "../models";
/** Class containing SqlPoolBlobAuditingPolicies operations. */
export declare class SqlPoolBlobAuditingPoliciesImpl implements SqlPoolBlobAuditingPolicies {
    private readonly client;
    /**
     * Initialize a new instance of the class SqlPoolBlobAuditingPolicies class.
     * @param client Reference to the service client
     */
    constructor(client: SynapseManagementClient);
    /**
     * Lists auditing settings of a Sql pool.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name
     * @param options The options parameters.
     */
    listBySqlPool(resourceGroupName: string, workspaceName: string, sqlPoolName: string, options?: SqlPoolBlobAuditingPoliciesListBySqlPoolOptionalParams): PagedAsyncIterableIterator<SqlPoolBlobAuditingPolicy>;
    private listBySqlPoolPagingPage;
    private listBySqlPoolPagingAll;
    /**
     * Get a SQL pool's blob auditing policy.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name
     * @param options The options parameters.
     */
    get(resourceGroupName: string, workspaceName: string, sqlPoolName: string, options?: SqlPoolBlobAuditingPoliciesGetOptionalParams): Promise<SqlPoolBlobAuditingPoliciesGetResponse>;
    /**
     * Creates or updates a SQL pool's blob auditing policy.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name
     * @param parameters The database blob auditing policy.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, workspaceName: string, sqlPoolName: string, parameters: SqlPoolBlobAuditingPolicy, options?: SqlPoolBlobAuditingPoliciesCreateOrUpdateOptionalParams): Promise<SqlPoolBlobAuditingPoliciesCreateOrUpdateResponse>;
    /**
     * Lists auditing settings of a Sql pool.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name
     * @param options The options parameters.
     */
    private _listBySqlPool;
    /**
     * ListBySqlPoolNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name
     * @param nextLink The nextLink from the previous successful call to the ListBySqlPool method.
     * @param options The options parameters.
     */
    private _listBySqlPoolNext;
}
//# sourceMappingURL=sqlPoolBlobAuditingPolicies.d.ts.map