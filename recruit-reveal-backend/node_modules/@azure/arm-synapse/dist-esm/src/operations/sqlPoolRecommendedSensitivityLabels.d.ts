import { SqlPoolRecommendedSensitivityLabels } from "../operationsInterfaces";
import { SynapseManagementClient } from "../synapseManagementClient";
import { RecommendedSensitivityLabelUpdateList, SqlPoolRecommendedSensitivityLabelsUpdateOptionalParams } from "../models";
/** Class containing SqlPoolRecommendedSensitivityLabels operations. */
export declare class SqlPoolRecommendedSensitivityLabelsImpl implements SqlPoolRecommendedSensitivityLabels {
    private readonly client;
    /**
     * Initialize a new instance of the class SqlPoolRecommendedSensitivityLabels class.
     * @param client Reference to the service client
     */
    constructor(client: SynapseManagementClient);
    /**
     * Update recommended sensitivity labels states of a given SQL Pool using an operations batch.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name
     * @param parameters A list of recommended sensitivity label update operations.
     * @param options The options parameters.
     */
    update(resourceGroupName: string, workspaceName: string, sqlPoolName: string, parameters: RecommendedSensitivityLabelUpdateList, options?: SqlPoolRecommendedSensitivityLabelsUpdateOptionalParams): Promise<void>;
}
//# sourceMappingURL=sqlPoolRecommendedSensitivityLabels.d.ts.map