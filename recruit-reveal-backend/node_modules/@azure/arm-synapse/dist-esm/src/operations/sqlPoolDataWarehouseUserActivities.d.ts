import { SqlPoolDataWarehouseUserActivities } from "../operationsInterfaces";
import { SynapseManagementClient } from "../synapseManagementClient";
import { DataWarehouseUserActivityName, SqlPoolDataWarehouseUserActivitiesGetOptionalParams, SqlPoolDataWarehouseUserActivitiesGetResponse } from "../models";
/** Class containing SqlPoolDataWarehouseUserActivities operations. */
export declare class SqlPoolDataWarehouseUserActivitiesImpl implements SqlPoolDataWarehouseUserActivities {
    private readonly client;
    /**
     * Initialize a new instance of the class SqlPoolDataWarehouseUserActivities class.
     * @param client Reference to the service client
     */
    constructor(client: SynapseManagementClient);
    /**
     * Gets the user activities of a SQL pool which includes running and suspended queries
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name
     * @param dataWarehouseUserActivityName The activity name of the Sql pool.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, workspaceName: string, sqlPoolName: string, dataWarehouseUserActivityName: DataWarehouseUserActivityName, options?: SqlPoolDataWarehouseUserActivitiesGetOptionalParams): Promise<SqlPoolDataWarehouseUserActivitiesGetResponse>;
}
//# sourceMappingURL=sqlPoolDataWarehouseUserActivities.d.ts.map