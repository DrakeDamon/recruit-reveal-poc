/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
/** Known values of {@link AzureADOnlyAuthenticationName} that the service accepts. */
export var KnownAzureADOnlyAuthenticationName;
(function (KnownAzureADOnlyAuthenticationName) {
    KnownAzureADOnlyAuthenticationName["Default"] = "default";
})(KnownAzureADOnlyAuthenticationName || (KnownAzureADOnlyAuthenticationName = {}));
/** Known values of {@link StateValue} that the service accepts. */
export var KnownStateValue;
(function (KnownStateValue) {
    KnownStateValue["Consistent"] = "Consistent";
    KnownStateValue["InConsistent"] = "InConsistent";
    KnownStateValue["Updating"] = "Updating";
})(KnownStateValue || (KnownStateValue = {}));
/** Known values of {@link ProvisioningState} that the service accepts. */
export var KnownProvisioningState;
(function (KnownProvisioningState) {
    KnownProvisioningState["Provisioning"] = "Provisioning";
    KnownProvisioningState["Succeeded"] = "Succeeded";
    KnownProvisioningState["Deleting"] = "Deleting";
    KnownProvisioningState["Failed"] = "Failed";
    KnownProvisioningState["DeleteError"] = "DeleteError";
})(KnownProvisioningState || (KnownProvisioningState = {}));
/** Known values of {@link OperationStatus} that the service accepts. */
export var KnownOperationStatus;
(function (KnownOperationStatus) {
    KnownOperationStatus["InProgress"] = "InProgress";
    KnownOperationStatus["Succeeded"] = "Succeeded";
    KnownOperationStatus["Failed"] = "Failed";
    KnownOperationStatus["Canceled"] = "Canceled";
})(KnownOperationStatus || (KnownOperationStatus = {}));
/** Known values of {@link CreateMode} that the service accepts. */
export var KnownCreateMode;
(function (KnownCreateMode) {
    KnownCreateMode["Default"] = "Default";
    KnownCreateMode["PointInTimeRestore"] = "PointInTimeRestore";
    KnownCreateMode["Recovery"] = "Recovery";
    KnownCreateMode["Restore"] = "Restore";
})(KnownCreateMode || (KnownCreateMode = {}));
/** Known values of {@link StorageAccountType} that the service accepts. */
export var KnownStorageAccountType;
(function (KnownStorageAccountType) {
    KnownStorageAccountType["GRS"] = "GRS";
    KnownStorageAccountType["LRS"] = "LRS";
})(KnownStorageAccountType || (KnownStorageAccountType = {}));
/** Known values of {@link GeoBackupPolicyName} that the service accepts. */
export var KnownGeoBackupPolicyName;
(function (KnownGeoBackupPolicyName) {
    KnownGeoBackupPolicyName["Default"] = "Default";
})(KnownGeoBackupPolicyName || (KnownGeoBackupPolicyName = {}));
/** Known values of {@link DataWarehouseUserActivityName} that the service accepts. */
export var KnownDataWarehouseUserActivityName;
(function (KnownDataWarehouseUserActivityName) {
    KnownDataWarehouseUserActivityName["Current"] = "current";
})(KnownDataWarehouseUserActivityName || (KnownDataWarehouseUserActivityName = {}));
/** Known values of {@link ReplicationState} that the service accepts. */
export var KnownReplicationState;
(function (KnownReplicationState) {
    KnownReplicationState["Pending"] = "PENDING";
    KnownReplicationState["Seeding"] = "SEEDING";
    KnownReplicationState["CatchUP"] = "CATCH_UP";
    KnownReplicationState["Suspended"] = "SUSPENDED";
})(KnownReplicationState || (KnownReplicationState = {}));
/** Known values of {@link DayOfWeek} that the service accepts. */
export var KnownDayOfWeek;
(function (KnownDayOfWeek) {
    KnownDayOfWeek["Sunday"] = "Sunday";
    KnownDayOfWeek["Monday"] = "Monday";
    KnownDayOfWeek["Tuesday"] = "Tuesday";
    KnownDayOfWeek["Wednesday"] = "Wednesday";
    KnownDayOfWeek["Thursday"] = "Thursday";
    KnownDayOfWeek["Friday"] = "Friday";
    KnownDayOfWeek["Saturday"] = "Saturday";
})(KnownDayOfWeek || (KnownDayOfWeek = {}));
/** Known values of {@link TransparentDataEncryptionName} that the service accepts. */
export var KnownTransparentDataEncryptionName;
(function (KnownTransparentDataEncryptionName) {
    KnownTransparentDataEncryptionName["Current"] = "current";
})(KnownTransparentDataEncryptionName || (KnownTransparentDataEncryptionName = {}));
/** Known values of {@link ManagementOperationState} that the service accepts. */
export var KnownManagementOperationState;
(function (KnownManagementOperationState) {
    KnownManagementOperationState["Pending"] = "Pending";
    KnownManagementOperationState["InProgress"] = "InProgress";
    KnownManagementOperationState["Succeeded"] = "Succeeded";
    KnownManagementOperationState["Failed"] = "Failed";
    KnownManagementOperationState["CancelInProgress"] = "CancelInProgress";
    KnownManagementOperationState["Cancelled"] = "Cancelled";
})(KnownManagementOperationState || (KnownManagementOperationState = {}));
/** Known values of {@link ColumnDataType} that the service accepts. */
export var KnownColumnDataType;
(function (KnownColumnDataType) {
    KnownColumnDataType["Image"] = "image";
    KnownColumnDataType["Text"] = "text";
    KnownColumnDataType["Uniqueidentifier"] = "uniqueidentifier";
    KnownColumnDataType["Date"] = "date";
    KnownColumnDataType["Time"] = "time";
    KnownColumnDataType["Datetime2"] = "datetime2";
    KnownColumnDataType["Datetimeoffset"] = "datetimeoffset";
    KnownColumnDataType["Tinyint"] = "tinyint";
    KnownColumnDataType["Smallint"] = "smallint";
    KnownColumnDataType["Int"] = "int";
    KnownColumnDataType["Smalldatetime"] = "smalldatetime";
    KnownColumnDataType["Real"] = "real";
    KnownColumnDataType["Money"] = "money";
    KnownColumnDataType["Datetime"] = "datetime";
    KnownColumnDataType["Float"] = "float";
    KnownColumnDataType["SqlVariant"] = "sql_variant";
    KnownColumnDataType["Ntext"] = "ntext";
    KnownColumnDataType["Bit"] = "bit";
    KnownColumnDataType["Decimal"] = "decimal";
    KnownColumnDataType["Numeric"] = "numeric";
    KnownColumnDataType["Smallmoney"] = "smallmoney";
    KnownColumnDataType["Bigint"] = "bigint";
    KnownColumnDataType["Hierarchyid"] = "hierarchyid";
    KnownColumnDataType["Geometry"] = "geometry";
    KnownColumnDataType["Geography"] = "geography";
    KnownColumnDataType["Varbinary"] = "varbinary";
    KnownColumnDataType["Varchar"] = "varchar";
    KnownColumnDataType["Binary"] = "binary";
    KnownColumnDataType["Char"] = "char";
    KnownColumnDataType["Timestamp"] = "timestamp";
    KnownColumnDataType["Nvarchar"] = "nvarchar";
    KnownColumnDataType["Nchar"] = "nchar";
    KnownColumnDataType["Xml"] = "xml";
    KnownColumnDataType["Sysname"] = "sysname";
})(KnownColumnDataType || (KnownColumnDataType = {}));
/** Known values of {@link ConnectionPolicyName} that the service accepts. */
export var KnownConnectionPolicyName;
(function (KnownConnectionPolicyName) {
    KnownConnectionPolicyName["Default"] = "default";
})(KnownConnectionPolicyName || (KnownConnectionPolicyName = {}));
/** Known values of {@link VulnerabilityAssessmentName} that the service accepts. */
export var KnownVulnerabilityAssessmentName;
(function (KnownVulnerabilityAssessmentName) {
    KnownVulnerabilityAssessmentName["Default"] = "default";
})(KnownVulnerabilityAssessmentName || (KnownVulnerabilityAssessmentName = {}));
/** Known values of {@link VulnerabilityAssessmentScanTriggerType} that the service accepts. */
export var KnownVulnerabilityAssessmentScanTriggerType;
(function (KnownVulnerabilityAssessmentScanTriggerType) {
    KnownVulnerabilityAssessmentScanTriggerType["OnDemand"] = "OnDemand";
    KnownVulnerabilityAssessmentScanTriggerType["Recurring"] = "Recurring";
})(KnownVulnerabilityAssessmentScanTriggerType || (KnownVulnerabilityAssessmentScanTriggerType = {}));
/** Known values of {@link VulnerabilityAssessmentScanState} that the service accepts. */
export var KnownVulnerabilityAssessmentScanState;
(function (KnownVulnerabilityAssessmentScanState) {
    KnownVulnerabilityAssessmentScanState["Passed"] = "Passed";
    KnownVulnerabilityAssessmentScanState["Failed"] = "Failed";
    KnownVulnerabilityAssessmentScanState["FailedToRun"] = "FailedToRun";
    KnownVulnerabilityAssessmentScanState["InProgress"] = "InProgress";
})(KnownVulnerabilityAssessmentScanState || (KnownVulnerabilityAssessmentScanState = {}));
/** Known values of {@link SecurityAlertPolicyName} that the service accepts. */
export var KnownSecurityAlertPolicyName;
(function (KnownSecurityAlertPolicyName) {
    KnownSecurityAlertPolicyName["Default"] = "default";
})(KnownSecurityAlertPolicyName || (KnownSecurityAlertPolicyName = {}));
/** Known values of {@link BlobAuditingPolicyName} that the service accepts. */
export var KnownBlobAuditingPolicyName;
(function (KnownBlobAuditingPolicyName) {
    KnownBlobAuditingPolicyName["Default"] = "default";
})(KnownBlobAuditingPolicyName || (KnownBlobAuditingPolicyName = {}));
/** Known values of {@link SecurityAlertPolicyNameAutoGenerated} that the service accepts. */
export var KnownSecurityAlertPolicyNameAutoGenerated;
(function (KnownSecurityAlertPolicyNameAutoGenerated) {
    KnownSecurityAlertPolicyNameAutoGenerated["Default"] = "Default";
})(KnownSecurityAlertPolicyNameAutoGenerated || (KnownSecurityAlertPolicyNameAutoGenerated = {}));
/** Known values of {@link EncryptionProtectorName} that the service accepts. */
export var KnownEncryptionProtectorName;
(function (KnownEncryptionProtectorName) {
    KnownEncryptionProtectorName["Current"] = "current";
})(KnownEncryptionProtectorName || (KnownEncryptionProtectorName = {}));
/** Known values of {@link ServerKeyType} that the service accepts. */
export var KnownServerKeyType;
(function (KnownServerKeyType) {
    KnownServerKeyType["ServiceManaged"] = "ServiceManaged";
    KnownServerKeyType["AzureKeyVault"] = "AzureKeyVault";
})(KnownServerKeyType || (KnownServerKeyType = {}));
/** Known values of {@link WorkspacePublicNetworkAccess} that the service accepts. */
export var KnownWorkspacePublicNetworkAccess;
(function (KnownWorkspacePublicNetworkAccess) {
    KnownWorkspacePublicNetworkAccess["Enabled"] = "Enabled";
    KnownWorkspacePublicNetworkAccess["Disabled"] = "Disabled";
})(KnownWorkspacePublicNetworkAccess || (KnownWorkspacePublicNetworkAccess = {}));
/** Known values of {@link ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentityDesiredState} that the service accepts. */
export var KnownManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentityDesiredState;
(function (KnownManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentityDesiredState) {
    KnownManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentityDesiredState["Enabled"] = "Enabled";
    KnownManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentityDesiredState["Disabled"] = "Disabled";
})(KnownManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentityDesiredState || (KnownManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentityDesiredState = {}));
/** Known values of {@link ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentityActualState} that the service accepts. */
export var KnownManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentityActualState;
(function (KnownManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentityActualState) {
    KnownManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentityActualState["Enabling"] = "Enabling";
    KnownManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentityActualState["Enabled"] = "Enabled";
    KnownManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentityActualState["Disabling"] = "Disabling";
    KnownManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentityActualState["Disabled"] = "Disabled";
    KnownManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentityActualState["Unknown"] = "Unknown";
})(KnownManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentityActualState || (KnownManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentityActualState = {}));
/** Known values of {@link ConfigurationType} that the service accepts. */
export var KnownConfigurationType;
(function (KnownConfigurationType) {
    KnownConfigurationType["File"] = "File";
    KnownConfigurationType["Artifact"] = "Artifact";
})(KnownConfigurationType || (KnownConfigurationType = {}));
/** Known values of {@link NodeSize} that the service accepts. */
export var KnownNodeSize;
(function (KnownNodeSize) {
    KnownNodeSize["None"] = "None";
    KnownNodeSize["Small"] = "Small";
    KnownNodeSize["Medium"] = "Medium";
    KnownNodeSize["Large"] = "Large";
    KnownNodeSize["XLarge"] = "XLarge";
    KnownNodeSize["XXLarge"] = "XXLarge";
    KnownNodeSize["XXXLarge"] = "XXXLarge";
})(KnownNodeSize || (KnownNodeSize = {}));
/** Known values of {@link NodeSizeFamily} that the service accepts. */
export var KnownNodeSizeFamily;
(function (KnownNodeSizeFamily) {
    KnownNodeSizeFamily["None"] = "None";
    KnownNodeSizeFamily["MemoryOptimized"] = "MemoryOptimized";
    KnownNodeSizeFamily["HardwareAcceleratedFpga"] = "HardwareAcceleratedFPGA";
    KnownNodeSizeFamily["HardwareAcceleratedGPU"] = "HardwareAcceleratedGPU";
})(KnownNodeSizeFamily || (KnownNodeSizeFamily = {}));
/** Known values of {@link IntegrationRuntimeAutoUpdate} that the service accepts. */
export var KnownIntegrationRuntimeAutoUpdate;
(function (KnownIntegrationRuntimeAutoUpdate) {
    KnownIntegrationRuntimeAutoUpdate["On"] = "On";
    KnownIntegrationRuntimeAutoUpdate["Off"] = "Off";
})(KnownIntegrationRuntimeAutoUpdate || (KnownIntegrationRuntimeAutoUpdate = {}));
/** Known values of {@link IntegrationRuntimeType} that the service accepts. */
export var KnownIntegrationRuntimeType;
(function (KnownIntegrationRuntimeType) {
    KnownIntegrationRuntimeType["Managed"] = "Managed";
    KnownIntegrationRuntimeType["SelfHosted"] = "SelfHosted";
})(KnownIntegrationRuntimeType || (KnownIntegrationRuntimeType = {}));
/** Known values of {@link SsisObjectMetadataType} that the service accepts. */
export var KnownSsisObjectMetadataType;
(function (KnownSsisObjectMetadataType) {
    KnownSsisObjectMetadataType["Folder"] = "Folder";
    KnownSsisObjectMetadataType["Project"] = "Project";
    KnownSsisObjectMetadataType["Package"] = "Package";
    KnownSsisObjectMetadataType["Environment"] = "Environment";
})(KnownSsisObjectMetadataType || (KnownSsisObjectMetadataType = {}));
/** Known values of {@link SelfHostedIntegrationRuntimeNodeStatus} that the service accepts. */
export var KnownSelfHostedIntegrationRuntimeNodeStatus;
(function (KnownSelfHostedIntegrationRuntimeNodeStatus) {
    KnownSelfHostedIntegrationRuntimeNodeStatus["NeedRegistration"] = "NeedRegistration";
    KnownSelfHostedIntegrationRuntimeNodeStatus["Online"] = "Online";
    KnownSelfHostedIntegrationRuntimeNodeStatus["Limited"] = "Limited";
    KnownSelfHostedIntegrationRuntimeNodeStatus["Offline"] = "Offline";
    KnownSelfHostedIntegrationRuntimeNodeStatus["Upgrading"] = "Upgrading";
    KnownSelfHostedIntegrationRuntimeNodeStatus["Initializing"] = "Initializing";
    KnownSelfHostedIntegrationRuntimeNodeStatus["InitializeFailed"] = "InitializeFailed";
})(KnownSelfHostedIntegrationRuntimeNodeStatus || (KnownSelfHostedIntegrationRuntimeNodeStatus = {}));
/** Known values of {@link IntegrationRuntimeUpdateResult} that the service accepts. */
export var KnownIntegrationRuntimeUpdateResult;
(function (KnownIntegrationRuntimeUpdateResult) {
    KnownIntegrationRuntimeUpdateResult["None"] = "None";
    KnownIntegrationRuntimeUpdateResult["Succeed"] = "Succeed";
    KnownIntegrationRuntimeUpdateResult["Fail"] = "Fail";
})(KnownIntegrationRuntimeUpdateResult || (KnownIntegrationRuntimeUpdateResult = {}));
/** Known values of {@link IntegrationRuntimeState} that the service accepts. */
export var KnownIntegrationRuntimeState;
(function (KnownIntegrationRuntimeState) {
    KnownIntegrationRuntimeState["Initial"] = "Initial";
    KnownIntegrationRuntimeState["Stopped"] = "Stopped";
    KnownIntegrationRuntimeState["Started"] = "Started";
    KnownIntegrationRuntimeState["Starting"] = "Starting";
    KnownIntegrationRuntimeState["Stopping"] = "Stopping";
    KnownIntegrationRuntimeState["NeedRegistration"] = "NeedRegistration";
    KnownIntegrationRuntimeState["Online"] = "Online";
    KnownIntegrationRuntimeState["Limited"] = "Limited";
    KnownIntegrationRuntimeState["Offline"] = "Offline";
    KnownIntegrationRuntimeState["AccessDenied"] = "AccessDenied";
})(KnownIntegrationRuntimeState || (KnownIntegrationRuntimeState = {}));
/** Known values of {@link IntegrationRuntimeAuthKeyName} that the service accepts. */
export var KnownIntegrationRuntimeAuthKeyName;
(function (KnownIntegrationRuntimeAuthKeyName) {
    KnownIntegrationRuntimeAuthKeyName["AuthKey1"] = "authKey1";
    KnownIntegrationRuntimeAuthKeyName["AuthKey2"] = "authKey2";
})(KnownIntegrationRuntimeAuthKeyName || (KnownIntegrationRuntimeAuthKeyName = {}));
/** Known values of {@link Reason} that the service accepts. */
export var KnownReason;
(function (KnownReason) {
    KnownReason["Invalid"] = "Invalid";
    KnownReason["AlreadyExists"] = "AlreadyExists";
})(KnownReason || (KnownReason = {}));
/** Known values of {@link SkuName} that the service accepts. */
export var KnownSkuName;
(function (KnownSkuName) {
    KnownSkuName["ComputeOptimized"] = "Compute optimized";
    KnownSkuName["StorageOptimized"] = "Storage optimized";
})(KnownSkuName || (KnownSkuName = {}));
/** Known values of {@link SkuSize} that the service accepts. */
export var KnownSkuSize;
(function (KnownSkuSize) {
    KnownSkuSize["ExtraSmall"] = "Extra small";
    KnownSkuSize["Small"] = "Small";
    KnownSkuSize["Medium"] = "Medium";
    KnownSkuSize["Large"] = "Large";
})(KnownSkuSize || (KnownSkuSize = {}));
/** Known values of {@link State} that the service accepts. */
export var KnownState;
(function (KnownState) {
    KnownState["Creating"] = "Creating";
    KnownState["Unavailable"] = "Unavailable";
    KnownState["Running"] = "Running";
    KnownState["Deleting"] = "Deleting";
    KnownState["Deleted"] = "Deleted";
    KnownState["Stopping"] = "Stopping";
    KnownState["Stopped"] = "Stopped";
    KnownState["Starting"] = "Starting";
    KnownState["Updating"] = "Updating";
})(KnownState || (KnownState = {}));
/** Known values of {@link ResourceProvisioningState} that the service accepts. */
export var KnownResourceProvisioningState;
(function (KnownResourceProvisioningState) {
    KnownResourceProvisioningState["Running"] = "Running";
    KnownResourceProvisioningState["Creating"] = "Creating";
    KnownResourceProvisioningState["Deleting"] = "Deleting";
    KnownResourceProvisioningState["Succeeded"] = "Succeeded";
    KnownResourceProvisioningState["Failed"] = "Failed";
    KnownResourceProvisioningState["Moving"] = "Moving";
    KnownResourceProvisioningState["Canceled"] = "Canceled";
})(KnownResourceProvisioningState || (KnownResourceProvisioningState = {}));
/** Known values of {@link LanguageExtensionName} that the service accepts. */
export var KnownLanguageExtensionName;
(function (KnownLanguageExtensionName) {
    KnownLanguageExtensionName["Python"] = "PYTHON";
    KnownLanguageExtensionName["R"] = "R";
})(KnownLanguageExtensionName || (KnownLanguageExtensionName = {}));
/** Known values of {@link CreatedByType} that the service accepts. */
export var KnownCreatedByType;
(function (KnownCreatedByType) {
    KnownCreatedByType["User"] = "User";
    KnownCreatedByType["Application"] = "Application";
    KnownCreatedByType["ManagedIdentity"] = "ManagedIdentity";
    KnownCreatedByType["Key"] = "Key";
})(KnownCreatedByType || (KnownCreatedByType = {}));
/** Known values of {@link AzureScaleType} that the service accepts. */
export var KnownAzureScaleType;
(function (KnownAzureScaleType) {
    KnownAzureScaleType["Automatic"] = "automatic";
    KnownAzureScaleType["Manual"] = "manual";
    KnownAzureScaleType["None"] = "none";
})(KnownAzureScaleType || (KnownAzureScaleType = {}));
/** Known values of {@link DefaultPrincipalsModificationKind} that the service accepts. */
export var KnownDefaultPrincipalsModificationKind;
(function (KnownDefaultPrincipalsModificationKind) {
    KnownDefaultPrincipalsModificationKind["Union"] = "Union";
    KnownDefaultPrincipalsModificationKind["Replace"] = "Replace";
    KnownDefaultPrincipalsModificationKind["None"] = "None";
})(KnownDefaultPrincipalsModificationKind || (KnownDefaultPrincipalsModificationKind = {}));
/** Known values of {@link Kind} that the service accepts. */
export var KnownKind;
(function (KnownKind) {
    KnownKind["ReadWrite"] = "ReadWrite";
    KnownKind["ReadOnlyFollowing"] = "ReadOnlyFollowing";
})(KnownKind || (KnownKind = {}));
/** Known values of {@link DataConnectionKind} that the service accepts. */
export var KnownDataConnectionKind;
(function (KnownDataConnectionKind) {
    KnownDataConnectionKind["EventHub"] = "EventHub";
    KnownDataConnectionKind["EventGrid"] = "EventGrid";
    KnownDataConnectionKind["IotHub"] = "IotHub";
})(KnownDataConnectionKind || (KnownDataConnectionKind = {}));
/** Known values of {@link ClusterPrincipalRole} that the service accepts. */
export var KnownClusterPrincipalRole;
(function (KnownClusterPrincipalRole) {
    KnownClusterPrincipalRole["AllDatabasesAdmin"] = "AllDatabasesAdmin";
    KnownClusterPrincipalRole["AllDatabasesViewer"] = "AllDatabasesViewer";
})(KnownClusterPrincipalRole || (KnownClusterPrincipalRole = {}));
/** Known values of {@link PrincipalType} that the service accepts. */
export var KnownPrincipalType;
(function (KnownPrincipalType) {
    KnownPrincipalType["App"] = "App";
    KnownPrincipalType["Group"] = "Group";
    KnownPrincipalType["User"] = "User";
})(KnownPrincipalType || (KnownPrincipalType = {}));
/** Known values of {@link DatabasePrincipalRole} that the service accepts. */
export var KnownDatabasePrincipalRole;
(function (KnownDatabasePrincipalRole) {
    KnownDatabasePrincipalRole["Admin"] = "Admin";
    KnownDatabasePrincipalRole["Ingestor"] = "Ingestor";
    KnownDatabasePrincipalRole["Monitor"] = "Monitor";
    KnownDatabasePrincipalRole["User"] = "User";
    KnownDatabasePrincipalRole["UnrestrictedViewer"] = "UnrestrictedViewer";
    KnownDatabasePrincipalRole["Viewer"] = "Viewer";
})(KnownDatabasePrincipalRole || (KnownDatabasePrincipalRole = {}));
/** Known values of {@link DataFlowComputeType} that the service accepts. */
export var KnownDataFlowComputeType;
(function (KnownDataFlowComputeType) {
    KnownDataFlowComputeType["General"] = "General";
    KnownDataFlowComputeType["MemoryOptimized"] = "MemoryOptimized";
    KnownDataFlowComputeType["ComputeOptimized"] = "ComputeOptimized";
})(KnownDataFlowComputeType || (KnownDataFlowComputeType = {}));
/** Known values of {@link IntegrationRuntimeSsisCatalogPricingTier} that the service accepts. */
export var KnownIntegrationRuntimeSsisCatalogPricingTier;
(function (KnownIntegrationRuntimeSsisCatalogPricingTier) {
    KnownIntegrationRuntimeSsisCatalogPricingTier["Basic"] = "Basic";
    KnownIntegrationRuntimeSsisCatalogPricingTier["Standard"] = "Standard";
    KnownIntegrationRuntimeSsisCatalogPricingTier["Premium"] = "Premium";
    KnownIntegrationRuntimeSsisCatalogPricingTier["PremiumRS"] = "PremiumRS";
})(KnownIntegrationRuntimeSsisCatalogPricingTier || (KnownIntegrationRuntimeSsisCatalogPricingTier = {}));
/** Known values of {@link IntegrationRuntimeLicenseType} that the service accepts. */
export var KnownIntegrationRuntimeLicenseType;
(function (KnownIntegrationRuntimeLicenseType) {
    KnownIntegrationRuntimeLicenseType["BasePrice"] = "BasePrice";
    KnownIntegrationRuntimeLicenseType["LicenseIncluded"] = "LicenseIncluded";
})(KnownIntegrationRuntimeLicenseType || (KnownIntegrationRuntimeLicenseType = {}));
/** Known values of {@link IntegrationRuntimeEntityReferenceType} that the service accepts. */
export var KnownIntegrationRuntimeEntityReferenceType;
(function (KnownIntegrationRuntimeEntityReferenceType) {
    KnownIntegrationRuntimeEntityReferenceType["IntegrationRuntimeReference"] = "IntegrationRuntimeReference";
    KnownIntegrationRuntimeEntityReferenceType["LinkedServiceReference"] = "LinkedServiceReference";
})(KnownIntegrationRuntimeEntityReferenceType || (KnownIntegrationRuntimeEntityReferenceType = {}));
/** Known values of {@link IntegrationRuntimeEdition} that the service accepts. */
export var KnownIntegrationRuntimeEdition;
(function (KnownIntegrationRuntimeEdition) {
    KnownIntegrationRuntimeEdition["Standard"] = "Standard";
    KnownIntegrationRuntimeEdition["Enterprise"] = "Enterprise";
})(KnownIntegrationRuntimeEdition || (KnownIntegrationRuntimeEdition = {}));
/** Known values of {@link ManagedIntegrationRuntimeNodeStatus} that the service accepts. */
export var KnownManagedIntegrationRuntimeNodeStatus;
(function (KnownManagedIntegrationRuntimeNodeStatus) {
    KnownManagedIntegrationRuntimeNodeStatus["Starting"] = "Starting";
    KnownManagedIntegrationRuntimeNodeStatus["Available"] = "Available";
    KnownManagedIntegrationRuntimeNodeStatus["Recycling"] = "Recycling";
    KnownManagedIntegrationRuntimeNodeStatus["Unavailable"] = "Unavailable";
})(KnownManagedIntegrationRuntimeNodeStatus || (KnownManagedIntegrationRuntimeNodeStatus = {}));
/** Known values of {@link IntegrationRuntimeInternalChannelEncryptionMode} that the service accepts. */
export var KnownIntegrationRuntimeInternalChannelEncryptionMode;
(function (KnownIntegrationRuntimeInternalChannelEncryptionMode) {
    KnownIntegrationRuntimeInternalChannelEncryptionMode["NotSet"] = "NotSet";
    KnownIntegrationRuntimeInternalChannelEncryptionMode["SslEncrypted"] = "SslEncrypted";
    KnownIntegrationRuntimeInternalChannelEncryptionMode["NotEncrypted"] = "NotEncrypted";
})(KnownIntegrationRuntimeInternalChannelEncryptionMode || (KnownIntegrationRuntimeInternalChannelEncryptionMode = {}));
/** Known values of {@link PrincipalsModificationKind} that the service accepts. */
export var KnownPrincipalsModificationKind;
(function (KnownPrincipalsModificationKind) {
    KnownPrincipalsModificationKind["Union"] = "Union";
    KnownPrincipalsModificationKind["Replace"] = "Replace";
    KnownPrincipalsModificationKind["None"] = "None";
})(KnownPrincipalsModificationKind || (KnownPrincipalsModificationKind = {}));
/** Known values of {@link EventHubDataFormat} that the service accepts. */
export var KnownEventHubDataFormat;
(function (KnownEventHubDataFormat) {
    KnownEventHubDataFormat["Multijson"] = "MULTIJSON";
    KnownEventHubDataFormat["Json"] = "JSON";
    KnownEventHubDataFormat["CSV"] = "CSV";
    KnownEventHubDataFormat["TSV"] = "TSV";
    KnownEventHubDataFormat["Scsv"] = "SCSV";
    KnownEventHubDataFormat["Sohsv"] = "SOHSV";
    KnownEventHubDataFormat["PSV"] = "PSV";
    KnownEventHubDataFormat["TXT"] = "TXT";
    KnownEventHubDataFormat["RAW"] = "RAW";
    KnownEventHubDataFormat["Singlejson"] = "SINGLEJSON";
    KnownEventHubDataFormat["Avro"] = "AVRO";
    KnownEventHubDataFormat["Tsve"] = "TSVE";
    KnownEventHubDataFormat["Parquet"] = "PARQUET";
    KnownEventHubDataFormat["ORC"] = "ORC";
    KnownEventHubDataFormat["Apacheavro"] = "APACHEAVRO";
    KnownEventHubDataFormat["W3Clogfile"] = "W3CLOGFILE";
})(KnownEventHubDataFormat || (KnownEventHubDataFormat = {}));
/** Known values of {@link Compression} that the service accepts. */
export var KnownCompression;
(function (KnownCompression) {
    KnownCompression["None"] = "None";
    KnownCompression["GZip"] = "GZip";
})(KnownCompression || (KnownCompression = {}));
/** Known values of {@link IotHubDataFormat} that the service accepts. */
export var KnownIotHubDataFormat;
(function (KnownIotHubDataFormat) {
    KnownIotHubDataFormat["Multijson"] = "MULTIJSON";
    KnownIotHubDataFormat["Json"] = "JSON";
    KnownIotHubDataFormat["CSV"] = "CSV";
    KnownIotHubDataFormat["TSV"] = "TSV";
    KnownIotHubDataFormat["Scsv"] = "SCSV";
    KnownIotHubDataFormat["Sohsv"] = "SOHSV";
    KnownIotHubDataFormat["PSV"] = "PSV";
    KnownIotHubDataFormat["TXT"] = "TXT";
    KnownIotHubDataFormat["RAW"] = "RAW";
    KnownIotHubDataFormat["Singlejson"] = "SINGLEJSON";
    KnownIotHubDataFormat["Avro"] = "AVRO";
    KnownIotHubDataFormat["Tsve"] = "TSVE";
    KnownIotHubDataFormat["Parquet"] = "PARQUET";
    KnownIotHubDataFormat["ORC"] = "ORC";
    KnownIotHubDataFormat["Apacheavro"] = "APACHEAVRO";
    KnownIotHubDataFormat["W3Clogfile"] = "W3CLOGFILE";
})(KnownIotHubDataFormat || (KnownIotHubDataFormat = {}));
/** Known values of {@link EventGridDataFormat} that the service accepts. */
export var KnownEventGridDataFormat;
(function (KnownEventGridDataFormat) {
    KnownEventGridDataFormat["Multijson"] = "MULTIJSON";
    KnownEventGridDataFormat["Json"] = "JSON";
    KnownEventGridDataFormat["CSV"] = "CSV";
    KnownEventGridDataFormat["TSV"] = "TSV";
    KnownEventGridDataFormat["Scsv"] = "SCSV";
    KnownEventGridDataFormat["Sohsv"] = "SOHSV";
    KnownEventGridDataFormat["PSV"] = "PSV";
    KnownEventGridDataFormat["TXT"] = "TXT";
    KnownEventGridDataFormat["RAW"] = "RAW";
    KnownEventGridDataFormat["Singlejson"] = "SINGLEJSON";
    KnownEventGridDataFormat["Avro"] = "AVRO";
    KnownEventGridDataFormat["Tsve"] = "TSVE";
    KnownEventGridDataFormat["Parquet"] = "PARQUET";
    KnownEventGridDataFormat["ORC"] = "ORC";
    KnownEventGridDataFormat["Apacheavro"] = "APACHEAVRO";
    KnownEventGridDataFormat["W3Clogfile"] = "W3CLOGFILE";
})(KnownEventGridDataFormat || (KnownEventGridDataFormat = {}));
/** Known values of {@link BlobStorageEventType} that the service accepts. */
export var KnownBlobStorageEventType;
(function (KnownBlobStorageEventType) {
    KnownBlobStorageEventType["MicrosoftStorageBlobCreated"] = "Microsoft.Storage.BlobCreated";
    KnownBlobStorageEventType["MicrosoftStorageBlobRenamed"] = "Microsoft.Storage.BlobRenamed";
})(KnownBlobStorageEventType || (KnownBlobStorageEventType = {}));
//# sourceMappingURL=index.js.map