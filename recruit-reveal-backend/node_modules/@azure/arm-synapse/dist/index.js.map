{"version":3,"file":"index.js","sources":["../src/models/index.ts","../src/models/mappers.ts","../src/models/parameters.ts","../src/lroImpl.ts","../src/operations/azureADOnlyAuthentications.ts","../src/operations/operations.ts","../src/operations/ipFirewallRules.ts","../src/operations/keys.ts","../src/operations/privateEndpointConnections.ts","../src/operations/privateLinkResources.ts","../src/operations/privateLinkHubPrivateLinkResources.ts","../src/operations/privateLinkHubs.ts","../src/operations/privateEndpointConnectionsPrivateLinkHub.ts","../src/operations/sqlPools.ts","../src/operations/sqlPoolMetadataSyncConfigs.ts","../src/operations/sqlPoolOperationResults.ts","../src/operations/sqlPoolGeoBackupPolicies.ts","../src/operations/sqlPoolDataWarehouseUserActivities.ts","../src/operations/sqlPoolRestorePoints.ts","../src/operations/sqlPoolReplicationLinks.ts","../src/operations/sqlPoolMaintenanceWindows.ts","../src/operations/sqlPoolMaintenanceWindowOptions.ts","../src/operations/sqlPoolTransparentDataEncryptions.ts","../src/operations/sqlPoolBlobAuditingPolicies.ts","../src/operations/sqlPoolOperations.ts","../src/operations/sqlPoolUsages.ts","../src/operations/sqlPoolSensitivityLabels.ts","../src/operations/sqlPoolRecommendedSensitivityLabels.ts","../src/operations/sqlPoolSchemas.ts","../src/operations/sqlPoolTables.ts","../src/operations/sqlPoolTableColumns.ts","../src/operations/sqlPoolConnectionPolicies.ts","../src/operations/sqlPoolVulnerabilityAssessments.ts","../src/operations/sqlPoolVulnerabilityAssessmentScans.ts","../src/operations/sqlPoolSecurityAlertPolicies.ts","../src/operations/sqlPoolVulnerabilityAssessmentRuleBaselines.ts","../src/operations/extendedSqlPoolBlobAuditingPolicies.ts","../src/operations/dataMaskingPolicies.ts","../src/operations/dataMaskingRules.ts","../src/operations/sqlPoolColumns.ts","../src/operations/sqlPoolWorkloadGroup.ts","../src/operations/sqlPoolWorkloadClassifier.ts","../src/operations/workspaceManagedSqlServerBlobAuditingPolicies.ts","../src/operations/workspaceManagedSqlServerExtendedBlobAuditingPolicies.ts","../src/operations/workspaceManagedSqlServerSecurityAlertPolicy.ts","../src/operations/workspaceManagedSqlServerVulnerabilityAssessments.ts","../src/operations/workspaceManagedSqlServerEncryptionProtector.ts","../src/operations/workspaceManagedSqlServerUsages.ts","../src/operations/workspaceManagedSqlServerRecoverableSqlPools.ts","../src/operations/workspaces.ts","../src/operations/workspaceAadAdmins.ts","../src/operations/workspaceSqlAadAdmins.ts","../src/operations/workspaceManagedIdentitySqlControlSettings.ts","../src/operations/restorableDroppedSqlPools.ts","../src/operations/bigDataPools.ts","../src/operations/library.ts","../src/operations/libraries.ts","../src/operations/integrationRuntimes.ts","../src/operations/integrationRuntimeNodeIpAddressOperations.ts","../src/operations/integrationRuntimeObjectMetadata.ts","../src/operations/integrationRuntimeNodes.ts","../src/operations/integrationRuntimeCredentials.ts","../src/operations/integrationRuntimeConnectionInfos.ts","../src/operations/integrationRuntimeAuthKeysOperations.ts","../src/operations/integrationRuntimeMonitoringDataOperations.ts","../src/operations/integrationRuntimeStatusOperations.ts","../src/operations/sparkConfiguration.ts","../src/operations/sparkConfigurations.ts","../src/operations/kustoOperations.ts","../src/operations/kustoPools.ts","../src/operations/kustoPoolChildResource.ts","../src/operations/kustoPoolAttachedDatabaseConfigurations.ts","../src/operations/kustoPoolDatabases.ts","../src/operations/kustoPoolDataConnections.ts","../src/operations/kustoPoolPrincipalAssignments.ts","../src/operations/kustoPoolDatabasePrincipalAssignments.ts","../src/synapseManagementClient.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport type IntegrationRuntimeUnion =\n  | IntegrationRuntime\n  | ManagedIntegrationRuntime\n  | SelfHostedIntegrationRuntime;\nexport type SsisObjectMetadataUnion =\n  | SsisObjectMetadata\n  | SsisFolder\n  | SsisProject\n  | SsisPackage\n  | SsisEnvironment;\nexport type IntegrationRuntimeStatusUnion =\n  | IntegrationRuntimeStatus\n  | ManagedIntegrationRuntimeStatus\n  | SelfHostedIntegrationRuntimeStatus;\nexport type SecretBaseUnion = SecretBase | SecureString;\nexport type CustomSetupBaseUnion =\n  | CustomSetupBase\n  | CmdkeySetup\n  | EnvironmentVariableSetup\n  | ComponentSetup;\nexport type LinkedIntegrationRuntimeTypeUnion =\n  | LinkedIntegrationRuntimeType\n  | LinkedIntegrationRuntimeKeyAuthorization\n  | LinkedIntegrationRuntimeRbacAuthorization;\nexport type DatabaseUnion =\n  | Database\n  | ReadWriteDatabase\n  | ReadOnlyFollowingDatabase;\nexport type DataConnectionUnion =\n  | DataConnection\n  | EventHubDataConnection\n  | IotHubDataConnection\n  | EventGridDataConnection;\n\n/** Common fields that are returned in the response for all Azure Resource Manager resources */\nexport interface Resource {\n  /**\n   * Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The name of the resource\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n}\n\n/** Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.). */\nexport interface ErrorResponse {\n  /** The error object. */\n  error?: ErrorDetail;\n}\n\n/** The error detail. */\nexport interface ErrorDetail {\n  /**\n   * The error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * The error message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n  /**\n   * The error target.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly target?: string;\n  /**\n   * The error details.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly details?: ErrorDetail[];\n  /**\n   * The error additional info.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly additionalInfo?: ErrorAdditionalInfo[];\n}\n\n/** The resource management error additional info. */\nexport interface ErrorAdditionalInfo {\n  /**\n   * The additional info type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The additional info.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly info?: Record<string, unknown>;\n}\n\n/** A list of active directory only authentications. */\nexport interface AzureADOnlyAuthenticationListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: AzureADOnlyAuthentication[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A request about whether a workspace name is available */\nexport interface CheckNameAvailabilityRequest {\n  /** Workspace name */\n  name?: string;\n  /** Type: workspace */\n  type?: string;\n}\n\n/** A response saying whether the workspace name is available */\nexport interface CheckNameAvailabilityResponse {\n  /** Validation message */\n  message?: string;\n  /** Whether the workspace name is available */\n  available?: boolean;\n  /** Reason the workspace name is or is not available */\n  reason?: string;\n  /** Workspace name */\n  name?: string;\n}\n\n/** List of IP firewall rules */\nexport interface IpFirewallRuleInfoListResult {\n  /** Link to next page of results */\n  nextLink?: string;\n  /** List of IP firewall rules */\n  value?: IpFirewallRuleInfo[];\n}\n\n/** IP firewall rule properties */\nexport interface IpFirewallRuleProperties {\n  /** The end IP address of the firewall rule. Must be IPv4 format. Must be greater than or equal to startIpAddress */\n  endIpAddress?: string;\n  /**\n   * Resource provisioning state\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** The start IP address of the firewall rule. Must be IPv4 format */\n  startIpAddress?: string;\n}\n\n/** Replace all IP firewall rules request */\nexport interface ReplaceAllIpFirewallRulesRequest {\n  /** IP firewall rule properties */\n  ipFirewallRules?: { [propertyName: string]: IpFirewallRuleProperties };\n}\n\n/** An existing operation for replacing the firewall rules */\nexport interface ReplaceAllFirewallRulesOperationResponse {\n  /** The operation ID */\n  operationId?: string;\n}\n\n/** List of keys */\nexport interface KeyInfoListResult {\n  /** Link to the next page of results */\n  nextLink?: string;\n  /** List of keys */\n  value?: Key[];\n}\n\n/** An operation that is available in this resource provider */\nexport interface AvailableRpOperation {\n  /** Display properties of the operation */\n  display?: AvailableRpOperationDisplayInfo;\n  /** Whether this operation is a data action */\n  isDataAction?: string;\n  /** Operation name */\n  name?: string;\n  /** Operation origin */\n  origin?: string;\n  /** Operation service specification */\n  serviceSpecification?: OperationMetaServiceSpecification;\n}\n\n/** Description of an available operation */\nexport interface AvailableRpOperationDisplayInfo {\n  /** Operation description */\n  description?: string;\n  /** Resource type */\n  resource?: string;\n  /** Resource provider name */\n  provider?: string;\n  /** Operation name */\n  operation?: string;\n}\n\n/** What is this? */\nexport interface OperationMetaServiceSpecification {\n  /** Service metric specifications */\n  metricSpecifications?: OperationMetaMetricSpecification[];\n  /** Service log specifications */\n  logSpecifications?: OperationMetaLogSpecification[];\n}\n\n/** What is this? */\nexport interface OperationMetaMetricSpecification {\n  /** The source MDM namespace */\n  sourceMdmNamespace?: string;\n  /** Metric display name */\n  displayName?: string;\n  /** Metric unique name */\n  name?: string;\n  /** Metric aggregation type */\n  aggregationType?: string;\n  /** Metric description */\n  displayDescription?: string;\n  /** The source MDM account */\n  sourceMdmAccount?: string;\n  /** Whether the regional MDM account is enabled */\n  enableRegionalMdmAccount?: boolean;\n  /** Metric units */\n  unit?: string;\n  /** Metric dimensions */\n  dimensions?: OperationMetaMetricDimensionSpecification[];\n  /** Whether the metric supports instance-level aggregation */\n  supportsInstanceLevelAggregation?: boolean;\n  /** Metric filter */\n  metricFilterPattern?: string;\n}\n\n/** What is this? */\nexport interface OperationMetaMetricDimensionSpecification {\n  /** Dimension display name */\n  displayName?: string;\n  /** Dimension unique name */\n  name?: string;\n  /** Whether this metric should be exported for Shoebox */\n  toBeExportedForShoebox?: boolean;\n}\n\n/** What is this? */\nexport interface OperationMetaLogSpecification {\n  /** Log display name */\n  displayName?: string;\n  /** Time range the log covers */\n  blobDuration?: string;\n  /** Log unique name */\n  name?: string;\n}\n\n/** An operation */\nexport interface OperationResource {\n  /** Operation ID */\n  id?: string;\n  /** Operation name */\n  name?: string;\n  /** Operation status */\n  status?: OperationStatus;\n  /** Operation properties */\n  properties?: Record<string, unknown>;\n  /** Errors from the operation */\n  error?: ErrorDetail;\n  /** Operation start time */\n  startTime?: Date;\n  /** Operation start time */\n  endTime?: Date;\n  /** Completion percentage of the operation */\n  percentComplete?: number;\n}\n\n/** Properties of a private endpoint connection. */\nexport interface PrivateEndpointConnectionProperties {\n  /** The private endpoint which the connection belongs to. */\n  privateEndpoint?: PrivateEndpoint;\n  /** Connection state of the private endpoint connection. */\n  privateLinkServiceConnectionState?: PrivateLinkServiceConnectionState;\n  /**\n   * Provisioning state of the private endpoint connection.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n}\n\n/** Private endpoint details */\nexport interface PrivateEndpoint {\n  /**\n   * Resource id of the private endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n}\n\n/** Connection state details of the private endpoint */\nexport interface PrivateLinkServiceConnectionState {\n  /** The private link service connection status. */\n  status?: string;\n  /** The private link service connection description. */\n  description?: string;\n  /**\n   * The actions required for private link service connection.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly actionsRequired?: string;\n}\n\n/** A list of private endpoint connections */\nexport interface PrivateEndpointConnectionList {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: PrivateEndpointConnection[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of private link resources */\nexport interface PrivateLinkResourceListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: PrivateLinkResource[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Properties of a private link resource. */\nexport interface PrivateLinkResourceProperties {\n  /**\n   * The private link resource group id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly groupId?: string;\n  /**\n   * The private link resource required member names.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requiredMembers?: string[];\n  /**\n   * Required DNS zone names of the the private link resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requiredZoneNames?: string[];\n}\n\n/** List of privateLinkHubs */\nexport interface PrivateLinkHubInfoListResult {\n  /** Link to the next page of results */\n  nextLink?: string;\n  /** List of privateLinkHubs */\n  value?: PrivateLinkHub[];\n}\n\n/** Private Endpoint Connection For Private Link Hub - Basic */\nexport interface PrivateEndpointConnectionForPrivateLinkHubBasic {\n  /**\n   * identifier\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /** The private endpoint which the connection belongs to. */\n  privateEndpoint?: PrivateEndpoint;\n  /** Connection state of the private endpoint connection. */\n  privateLinkServiceConnectionState?: PrivateLinkServiceConnectionState;\n  /**\n   * Provisioning state of the private endpoint connection.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n}\n\n/** PrivateLinkHub patch details */\nexport interface PrivateLinkHubPatchInfo {\n  /** Resource tags */\n  tags?: { [propertyName: string]: string };\n}\n\nexport interface PrivateEndpointConnectionForPrivateLinkHubResourceCollectionResponse {\n  value?: PrivateEndpointConnectionForPrivateLinkHub[];\n  nextLink?: string;\n}\n\nexport interface PrivateEndpointConnectionForPrivateLinkHubBasicAutoGenerated {\n  id?: string;\n  /** Properties of a private endpoint connection. */\n  properties?: PrivateEndpointConnectionProperties;\n}\n\n/** SQL pool SKU */\nexport interface Sku {\n  /** The service tier */\n  tier?: string;\n  /** The SKU name */\n  name?: string;\n  /** If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted. */\n  capacity?: number;\n}\n\n/** A SQL Analytics pool patch info */\nexport interface SqlPoolPatchInfo {\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n  /** The geo-location where the resource lives */\n  location?: string;\n  /** SQL pool SKU */\n  sku?: Sku;\n  /** Maximum size in bytes */\n  maxSizeBytes?: number;\n  /** Collation mode */\n  collation?: string;\n  /** Source database to create from */\n  sourceDatabaseId?: string;\n  /** Backup database to restore from */\n  recoverableDatabaseId?: string;\n  /** Resource state */\n  provisioningState?: string;\n  /**\n   * Resource status\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: string;\n  /** Snapshot time to restore */\n  restorePointInTime?: Date;\n  /**\n   * Specifies the mode of sql pool creation.\n   *\n   * Default: regular sql pool creation.\n   *\n   * PointInTimeRestore: Creates a sql pool by restoring a point in time backup of an existing sql pool. sourceDatabaseId must be specified as the resource ID of the existing sql pool, and restorePointInTime must be specified.\n   *\n   * Recovery: Creates a sql pool by a geo-replicated backup. sourceDatabaseId  must be specified as the recoverableDatabaseId to restore.\n   *\n   * Restore: Creates a sql pool by restoring a backup of a deleted sql  pool. SourceDatabaseId should be the sql pool's original resource ID. SourceDatabaseId and sourceDatabaseDeletionDate must be specified.\n   */\n  createMode?: CreateMode;\n  /**\n   * Date the SQL pool was created\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly creationDate?: Date;\n  /** The storage account type used to store backups for this sql pool. */\n  storageAccountType?: StorageAccountType;\n  /** Specifies the time that the sql pool was deleted */\n  sourceDatabaseDeletionDate?: Date;\n}\n\n/** List of SQL pools */\nexport interface SqlPoolInfoListResult {\n  /** Link to the next page of results */\n  nextLink?: string;\n  /** List of SQL pools */\n  value?: SqlPool[];\n}\n\n/** Contains the information necessary to perform a resource move (rename). */\nexport interface ResourceMoveDefinition {\n  /** The target ID for the resource */\n  id: string;\n}\n\n/** The response to a list geo backup policies request. */\nexport interface GeoBackupPolicyListResult {\n  /** The list of geo backup policies. */\n  value?: GeoBackupPolicy[];\n}\n\n/** A list of long term retention backups. */\nexport interface RestorePointListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: RestorePoint[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Contains the information necessary to perform a create Sql pool restore point operation. */\nexport interface CreateSqlPoolRestorePointDefinition {\n  /** The restore point label to apply */\n  restorePointLabel: string;\n}\n\n/** Represents the response to a List Sql pool replication link request. */\nexport interface ReplicationLinkListResult {\n  /** The list of Sql pool replication links housed in the Sql pool. */\n  value?: ReplicationLink[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Maintenance window time range. */\nexport interface MaintenanceWindowTimeRange {\n  /** Day of maintenance window. */\n  dayOfWeek?: DayOfWeek;\n  /** Start time minutes offset from 12am. */\n  startTime?: string;\n  /** Duration of maintenance window in minutes. */\n  duration?: string;\n}\n\n/** A list of transparent data encryption configurations. */\nexport interface TransparentDataEncryptionListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: TransparentDataEncryption[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The response to a list Sql pool operations request */\nexport interface SqlPoolBlobAuditingPolicySqlPoolOperationListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: SqlPoolOperation[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The response to a list Sql pool usages request. */\nexport interface SqlPoolUsageListResult {\n  /** The list of usages for the Sql pool. */\n  value: SqlPoolUsage[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The Sql pool usages. */\nexport interface SqlPoolUsage {\n  /**\n   * The name of the usage metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The name of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceName?: string;\n  /**\n   * The usage metric display name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly displayName?: string;\n  /**\n   * The current value of the usage metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentValue?: number;\n  /**\n   * The current limit of the usage metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly limit?: number;\n  /**\n   * The units of the usage metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unit?: string;\n  /**\n   * The next reset time for the usage metric (ISO8601 format).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextResetTime?: Date;\n}\n\n/** A list of sensitivity labels. */\nexport interface SensitivityLabelListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: SensitivityLabel[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of sensitivity label update operations. */\nexport interface SensitivityLabelUpdateList {\n  operations?: SensitivityLabelUpdate[];\n}\n\n/** A list of recommended sensitivity label update operations. */\nexport interface RecommendedSensitivityLabelUpdateList {\n  operations?: RecommendedSensitivityLabelUpdate[];\n}\n\n/** A list of Sql pool schemas. */\nexport interface SqlPoolSchemaListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: SqlPoolSchema[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of Sql pool tables. */\nexport interface SqlPoolTableListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: SqlPoolTable[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of Sql pool columns. */\nexport interface SqlPoolColumnListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: SqlPoolColumn[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of the Sql pool's vulnerability assessments. */\nexport interface SqlPoolVulnerabilityAssessmentListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: SqlPoolVulnerabilityAssessment[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Properties of a Vulnerability Assessment recurring scans. */\nexport interface VulnerabilityAssessmentRecurringScansProperties {\n  /** Recurring scans state. */\n  isEnabled?: boolean;\n  /** Specifies that the schedule scan notification will be is sent to the subscription administrators. */\n  emailSubscriptionAdmins?: boolean;\n  /** Specifies an array of e-mail addresses to which the scan notification is sent. */\n  emails?: string[];\n}\n\n/** A list of vulnerability assessment scan records. */\nexport interface VulnerabilityAssessmentScanRecordListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: VulnerabilityAssessmentScanRecord[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Properties of a vulnerability assessment scan error. */\nexport interface VulnerabilityAssessmentScanError {\n  /**\n   * The error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * The error message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n}\n\n/** A list of SQL pool security alert policies. */\nexport interface ListSqlPoolSecurityAlertPolicies {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: SqlPoolSecurityAlertPolicy[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Properties for an Sql pool vulnerability assessment rule baseline's result. */\nexport interface SqlPoolVulnerabilityAssessmentRuleBaselineItem {\n  /** The rule baseline result */\n  result: string[];\n}\n\n/** A list of sql pool extended auditing settings. */\nexport interface ExtendedSqlPoolBlobAuditingPolicyListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ExtendedSqlPoolBlobAuditingPolicy[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The response to a list data masking rules request. */\nexport interface DataMaskingRuleListResult {\n  /** The list of Sql pool data masking rules. */\n  value?: DataMaskingRule[];\n}\n\n/** A list of Sql pool auditing settings. */\nexport interface SqlPoolBlobAuditingPolicyListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: SqlPoolBlobAuditingPolicy[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of workload groups. */\nexport interface WorkloadGroupListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: WorkloadGroup[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of workload classifiers for a workload group. */\nexport interface WorkloadClassifierListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: WorkloadClassifier[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of server auditing settings. */\nexport interface ServerBlobAuditingPolicyListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ServerBlobAuditingPolicy[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of server extended auditing settings. */\nexport interface ExtendedServerBlobAuditingPolicyListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ExtendedServerBlobAuditingPolicy[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of the workspace managed sql server's security alert policies. */\nexport interface ServerSecurityAlertPolicyListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ServerSecurityAlertPolicy[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of the server's vulnerability assessments. */\nexport interface ServerVulnerabilityAssessmentListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ServerVulnerabilityAssessment[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of server encryption protectors. */\nexport interface EncryptionProtectorListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: EncryptionProtector[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Represents the response to a list server metrics request. */\nexport interface ServerUsageListResult {\n  /** The list of server metrics for the server. */\n  value: ServerUsage[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Represents server metrics. */\nexport interface ServerUsage {\n  /**\n   * Name of the server usage metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The name of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceName?: string;\n  /**\n   * The metric display name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly displayName?: string;\n  /**\n   * The current value of the metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentValue?: number;\n  /**\n   * The current limit of the metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly limit?: number;\n  /**\n   * The units of the metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unit?: string;\n  /**\n   * The next reset time for the metric (ISO8601 format).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextResetTime?: Date;\n}\n\n/** The response to a list recoverable sql pools request */\nexport interface RecoverableSqlPoolListResult {\n  /**\n   * A list of recoverable sql pool\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: RecoverableSqlPool[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** List of workspaces */\nexport interface WorkspaceInfoListResult {\n  /** Link to the next page of results */\n  nextLink?: string;\n  /** List of workspaces */\n  value?: Workspace[];\n}\n\n/** Details of the data lake storage account associated with the workspace */\nexport interface DataLakeStorageAccountDetails {\n  /** Account URL */\n  accountUrl?: string;\n  /** Filesystem name */\n  filesystem?: string;\n  /** ARM resource Id of this storage account */\n  resourceId?: string;\n  /** Create managed private endpoint to this storage account or not */\n  createManagedPrivateEndpoint?: boolean;\n}\n\n/** Virtual Network Profile */\nexport interface VirtualNetworkProfile {\n  /** Subnet ID used for computes in workspace */\n  computeSubnetId?: string;\n}\n\n/** Details of the encryption associated with the workspace */\nexport interface EncryptionDetails {\n  /**\n   * Double Encryption enabled\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly doubleEncryptionEnabled?: boolean;\n  /** Customer Managed Key Details */\n  cmk?: CustomerManagedKeyDetails;\n}\n\n/** Details of the customer managed key associated with the workspace */\nexport interface CustomerManagedKeyDetails {\n  /**\n   * The customer managed key status on the workspace\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: string;\n  /** The key object of the workspace */\n  key?: WorkspaceKeyDetails;\n  /** Key encryption key */\n  kekIdentity?: KekIdentityProperties;\n}\n\n/** Details of the customer managed key associated with the workspace */\nexport interface WorkspaceKeyDetails {\n  /** Workspace Key sub-resource name */\n  name?: string;\n  /** Workspace Key sub-resource key vault url */\n  keyVaultUrl?: string;\n}\n\n/** Key encryption key properties */\nexport interface KekIdentityProperties {\n  /** User assigned identity resource Id */\n  userAssignedIdentity?: string;\n  /** Boolean specifying whether to use system assigned identity or not */\n  useSystemAssignedIdentity?: any;\n}\n\n/** Managed Virtual Network Settings */\nexport interface ManagedVirtualNetworkSettings {\n  /** Prevent Data Exfiltration */\n  preventDataExfiltration?: boolean;\n  /** Linked Access Check On Target Resource */\n  linkedAccessCheckOnTargetResource?: boolean;\n  /** Allowed Aad Tenant Ids For Linking */\n  allowedAadTenantIdsForLinking?: string[];\n}\n\n/** Git integration settings */\nexport interface WorkspaceRepositoryConfiguration {\n  /** Type of workspace repositoryID configuration. Example WorkspaceVSTSConfiguration, WorkspaceGitHubConfiguration */\n  type?: string;\n  /** GitHub Enterprise host name. For example: https://github.mydomain.com */\n  hostName?: string;\n  /** Account name */\n  accountName?: string;\n  /** VSTS project name */\n  projectName?: string;\n  /** Repository name */\n  repositoryName?: string;\n  /** Collaboration branch */\n  collaborationBranch?: string;\n  /** Root folder to use in the repository */\n  rootFolder?: string;\n  /** The last commit ID */\n  lastCommitId?: string;\n  /** The VSTS tenant ID */\n  tenantId?: string;\n}\n\n/** Purview Configuration */\nexport interface PurviewConfiguration {\n  /** Purview Resource ID */\n  purviewResourceId?: string;\n}\n\n/** Initial workspace AAD admin properties for a CSP subscription */\nexport interface CspWorkspaceAdminProperties {\n  /** AAD object ID of initial workspace admin */\n  initialWorkspaceAdminObjectId?: string;\n}\n\n/** The workspace managed identity */\nexport interface ManagedIdentity {\n  /**\n   * The principal ID of the workspace managed identity\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalId?: string;\n  /**\n   * The tenant ID of the workspace managed identity\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /** The type of managed identity for the workspace */\n  type?: ResourceIdentityType;\n  /** The user assigned managed identities. */\n  userAssignedIdentities?: {\n    [propertyName: string]: UserAssignedManagedIdentity;\n  };\n}\n\n/** User Assigned Managed Identity */\nexport interface UserAssignedManagedIdentity {\n  /**\n   * The client ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly clientId?: string;\n  /**\n   * The principal ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalId?: string;\n}\n\n/** Workspace patch details */\nexport interface WorkspacePatchInfo {\n  /** Resource tags */\n  tags?: { [propertyName: string]: string };\n  /** The identity of the workspace */\n  identity?: ManagedIdentity;\n  /** SQL administrator login password */\n  sqlAdministratorLoginPassword?: string;\n  /** Managed Virtual Network Settings */\n  managedVirtualNetworkSettings?: ManagedVirtualNetworkSettings;\n  /** Git integration settings */\n  workspaceRepositoryConfiguration?: WorkspaceRepositoryConfiguration;\n  /** Purview Configuration */\n  purviewConfiguration?: PurviewConfiguration;\n  /**\n   * Resource provisioning state\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /** The encryption details of the workspace */\n  encryption?: EncryptionDetails;\n  /** Enable or Disable public network access to workspace */\n  publicNetworkAccess?: WorkspacePublicNetworkAccess;\n}\n\n/** Grant sql control to managed identity */\nexport interface ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentity {\n  /** Desired state */\n  desiredState?: ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentityDesiredState;\n  /**\n   * Actual state\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly actualState?: ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentityActualState;\n}\n\n/** The response to a list restorable dropped Sql pools request */\nexport interface RestorableDroppedSqlPoolListResult {\n  /** A list of restorable dropped Sql pools */\n  value: RestorableDroppedSqlPool[];\n}\n\n/** Auto-scaling properties of a Big Data pool powered by Apache Spark */\nexport interface AutoScaleProperties {\n  /** The minimum number of nodes the Big Data pool can support. */\n  minNodeCount?: number;\n  /** Whether automatic scaling is enabled for the Big Data pool. */\n  enabled?: boolean;\n  /** The maximum number of nodes the Big Data pool can support. */\n  maxNodeCount?: number;\n}\n\n/** Auto-pausing properties of a Big Data pool powered by Apache Spark */\nexport interface AutoPauseProperties {\n  /** Number of minutes of idle time before the Big Data pool is automatically paused. */\n  delayInMinutes?: number;\n  /** Whether auto-pausing is enabled for the Big Data pool. */\n  enabled?: boolean;\n}\n\n/** Dynamic Executor Allocation Properties */\nexport interface DynamicExecutorAllocation {\n  /** Indicates whether Dynamic Executor Allocation is enabled or not. */\n  enabled?: boolean;\n  /** The minimum number of executors alloted */\n  minExecutors?: number;\n  /** The maximum number of executors alloted */\n  maxExecutors?: number;\n}\n\n/** Library requirements for a Big Data pool powered by Apache Spark */\nexport interface LibraryRequirements {\n  /**\n   * The last update time of the library requirements file.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly time?: Date;\n  /** The library requirements. */\n  content?: string;\n  /** The filename of the library requirements file. */\n  filename?: string;\n}\n\n/** Library/package information of a Big Data pool powered by Apache Spark */\nexport interface LibraryInfo {\n  /** Name of the library. */\n  name?: string;\n  /** Storage blob path of library. */\n  path?: string;\n  /** Storage blob container name. */\n  containerName?: string;\n  /** The last update time of the library. */\n  uploadedTimestamp?: Date;\n  /** Type of the library. */\n  type?: string;\n  /**\n   * Provisioning status of the library/package.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningStatus?: string;\n  /**\n   * Creator Id of the library/package.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly creatorId?: string;\n}\n\n/** SparkConfig Properties for a Big Data pool powered by Apache Spark */\nexport interface SparkConfigProperties {\n  /**\n   * The last update time of the spark config properties file.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly time?: Date;\n  /** The spark config properties. */\n  content?: string;\n  /** The filename of the spark config properties file. */\n  filename?: string;\n  /** The type of the spark config properties file. */\n  configurationType?: ConfigurationType;\n}\n\n/** Properties patch for a Big Data pool */\nexport interface BigDataPoolPatchInfo {\n  /** Updated tags for the Big Data pool */\n  tags?: { [propertyName: string]: string };\n}\n\n/** Collection of Big Data pool information */\nexport interface BigDataPoolResourceInfoListResult {\n  /** Link to the next page of results */\n  nextLink?: string;\n  /** List of Big Data pools */\n  value?: BigDataPoolResourceInfo[];\n}\n\n/** A list of Library resources. */\nexport interface LibraryListResponse {\n  /** List of Library. */\n  value: LibraryResource[];\n  /** The link to the next page of results, if any remaining results exist. */\n  nextLink?: string;\n}\n\n/** Update integration runtime request. */\nexport interface UpdateIntegrationRuntimeRequest {\n  /** Enables or disables the auto-update feature of the self-hosted integration runtime. See https://go.microsoft.com/fwlink/?linkid=854189. */\n  autoUpdate?: IntegrationRuntimeAutoUpdate;\n  /** The time offset (in hours) in the day, e.g., PT03H is 3 hours. The integration runtime auto update will happen on that time. */\n  updateDelayOffset?: string;\n}\n\n/** Azure Synapse nested object which serves as a compute resource for activities. */\nexport interface IntegrationRuntime {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Managed\" | \"SelfHosted\";\n  /** Describes unknown properties. The value of an unknown property can be of \"any\" type. */\n  [property: string]: any;\n  /** Integration runtime description. */\n  description?: string;\n}\n\n/** The IP address of self-hosted integration runtime node. */\nexport interface IntegrationRuntimeNodeIpAddress {\n  /**\n   * The IP address of self-hosted integration runtime node.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly ipAddress?: string;\n}\n\n/** The request payload of get SSIS object metadata. */\nexport interface GetSsisObjectMetadataRequest {\n  /** Metadata path. */\n  metadataPath?: string;\n}\n\n/** A list of SSIS object metadata. */\nexport interface SsisObjectMetadataListResponse {\n  /** List of SSIS object metadata. */\n  value?: SsisObjectMetadataUnion[];\n  /** The link to the next page of results, if any remaining results exist. */\n  nextLink?: string;\n}\n\n/** SSIS object metadata. */\nexport interface SsisObjectMetadata {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Folder\" | \"Project\" | \"Package\" | \"Environment\";\n  /** Metadata id. */\n  id?: number;\n  /** Metadata name. */\n  name?: string;\n  /** Metadata description. */\n  description?: string;\n}\n\n/** Properties of Self-hosted integration runtime node. */\nexport interface SelfHostedIntegrationRuntimeNode {\n  /** Describes unknown properties. The value of an unknown property can be of \"any\" type. */\n  [property: string]: any;\n  /**\n   * Name of the integration runtime node.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nodeName?: string;\n  /**\n   * Machine name of the integration runtime node.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly machineName?: string;\n  /**\n   * URI for the host machine of the integration runtime.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly hostServiceUri?: string;\n  /**\n   * Status of the integration runtime node.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: SelfHostedIntegrationRuntimeNodeStatus;\n  /**\n   * The integration runtime capabilities dictionary\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly capabilities?: { [propertyName: string]: string };\n  /**\n   * Status of the integration runtime node version.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly versionStatus?: string;\n  /**\n   * Version of the integration runtime node.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly version?: string;\n  /**\n   * The time at which the integration runtime node was registered in ISO8601 format.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly registerTime?: Date;\n  /**\n   * The most recent time at which the integration runtime was connected in ISO8601 format.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastConnectTime?: Date;\n  /**\n   * The time at which the integration runtime will expire in ISO8601 format.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly expiryTime?: Date;\n  /**\n   * The time the node last started up.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastStartTime?: Date;\n  /**\n   * The integration runtime node last stop time.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastStopTime?: Date;\n  /**\n   * The result of the last integration runtime node update.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastUpdateResult?: IntegrationRuntimeUpdateResult;\n  /**\n   * The last time for the integration runtime node update start.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastStartUpdateTime?: Date;\n  /**\n   * The last time for the integration runtime node update end.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastEndUpdateTime?: Date;\n  /**\n   * Indicates whether this node is the active dispatcher for integration runtime requests.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isActiveDispatcher?: boolean;\n  /**\n   * Maximum concurrent jobs on the integration runtime node.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly concurrentJobsLimit?: number;\n  /**\n   * The maximum concurrent jobs in this integration runtime.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly maxConcurrentJobs?: number;\n}\n\n/** Update integration runtime node request. */\nexport interface UpdateIntegrationRuntimeNodeRequest {\n  /** The number of concurrent jobs permitted to run on the integration runtime node. Values between 1 and maxConcurrentJobs(inclusive) are allowed. */\n  concurrentJobsLimit?: number;\n}\n\n/** A list of integration runtime resources. */\nexport interface IntegrationRuntimeListResponse {\n  /** List of integration runtimes. */\n  value: IntegrationRuntimeResource[];\n  /** The link to the next page of results, if any remaining results exist. */\n  nextLink?: string;\n}\n\n/** Connection information for encrypting the on-premises data source credentials. */\nexport interface IntegrationRuntimeConnectionInfo {\n  /** Describes unknown properties. The value of an unknown property can be of \"any\" type. */\n  [property: string]: any;\n  /**\n   * The token generated in service. Callers use this token to authenticate to integration runtime.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serviceToken?: string;\n  /**\n   * The integration runtime SSL certificate thumbprint. Click-Once application uses it to do server validation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly identityCertThumbprint?: string;\n  /**\n   * The on-premises integration runtime host URL.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly hostServiceUri?: string;\n  /**\n   * The integration runtime version.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly version?: string;\n  /**\n   * The public key for encrypting a credential when transferring the credential to the integration runtime.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly publicKey?: string;\n  /**\n   * Whether the identity certificate is expired.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isIdentityCertExprired?: boolean;\n}\n\n/** Integration runtime status response. */\nexport interface IntegrationRuntimeStatusResponse {\n  /**\n   * The integration runtime name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /** Integration runtime properties. */\n  properties: IntegrationRuntimeStatusUnion;\n}\n\n/** Integration runtime status. */\nexport interface IntegrationRuntimeStatus {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Managed\" | \"SelfHosted\";\n  /** Describes unknown properties. The value of an unknown property can be of \"any\" type. */\n  [property: string]: any;\n  /**\n   * The workspace name which the integration runtime belong to.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly dataFactoryName?: string;\n  /**\n   * The state of integration runtime.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: IntegrationRuntimeState;\n}\n\n/** Parameters to regenerate the authentication key. */\nexport interface IntegrationRuntimeRegenerateKeyParameters {\n  /** The name of the authentication key to regenerate. */\n  keyName?: IntegrationRuntimeAuthKeyName;\n}\n\n/** The integration runtime authentication keys. */\nexport interface IntegrationRuntimeAuthKeys {\n  /** The primary integration runtime authentication key. */\n  authKey1?: string;\n  /** The secondary integration runtime authentication key. */\n  authKey2?: string;\n}\n\n/** Get monitoring data response. */\nexport interface IntegrationRuntimeMonitoringData {\n  /** Integration runtime name. */\n  name?: string;\n  /** Integration runtime node monitoring data. */\n  nodes?: IntegrationRuntimeNodeMonitoringData[];\n}\n\n/** Monitoring data for integration runtime node. */\nexport interface IntegrationRuntimeNodeMonitoringData {\n  /** Describes unknown properties. The value of an unknown property can be of \"any\" type. */\n  [property: string]: any;\n  /**\n   * Name of the integration runtime node.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nodeName?: string;\n  /**\n   * Available memory (MB) on the integration runtime node.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly availableMemoryInMB?: number;\n  /**\n   * CPU percentage on the integration runtime node.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly cpuUtilization?: number;\n  /**\n   * Maximum concurrent jobs on the integration runtime node.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly concurrentJobsLimit?: number;\n  /**\n   * The number of jobs currently running on the integration runtime node.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly concurrentJobsRunning?: number;\n  /**\n   * The maximum concurrent jobs in this integration runtime.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly maxConcurrentJobs?: number;\n  /**\n   * Sent bytes on the integration runtime node.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sentBytes?: number;\n  /**\n   * Received bytes on the integration runtime node.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly receivedBytes?: number;\n}\n\n/** The status of the operation. */\nexport interface SsisObjectMetadataStatusResponse {\n  /** The status of the operation. */\n  status?: string;\n  /** The operation name. */\n  name?: string;\n  /** The operation properties. */\n  properties?: string;\n  /** The operation error message. */\n  error?: string;\n}\n\n/** Azure-SSIS integration runtime outbound network dependency endpoints. */\nexport interface IntegrationRuntimeOutboundNetworkDependenciesEndpointsResponse {\n  /** The list of outbound network dependency endpoints. */\n  value?: IntegrationRuntimeOutboundNetworkDependenciesCategoryEndpoint[];\n}\n\n/** Azure-SSIS integration runtime outbound network dependency endpoints for one category. */\nexport interface IntegrationRuntimeOutboundNetworkDependenciesCategoryEndpoint {\n  /** The category of outbound network dependency. */\n  category?: string;\n  /** The endpoints for outbound network dependency. */\n  endpoints?: IntegrationRuntimeOutboundNetworkDependenciesEndpoint[];\n}\n\n/** The endpoint for Azure-SSIS integration runtime outbound network dependency. */\nexport interface IntegrationRuntimeOutboundNetworkDependenciesEndpoint {\n  /** The domain name of endpoint. */\n  domainName?: string;\n  /** The details of endpoint. */\n  endpointDetails?: IntegrationRuntimeOutboundNetworkDependenciesEndpointDetails[];\n}\n\n/** The details of Azure-SSIS integration runtime outbound network dependency endpoint. */\nexport interface IntegrationRuntimeOutboundNetworkDependenciesEndpointDetails {\n  /** The port of endpoint. */\n  port?: number;\n}\n\n/** A list of SparkConfiguration resources. */\nexport interface SparkConfigurationListResponse {\n  /** List of SparkConfiguration. */\n  value: SparkConfigurationResource[];\n  /** The link to the next page of results, if any remaining results exist. */\n  nextLink?: string;\n}\n\n/** Result of the request to list REST API operations. It contains a list of operations and a URL nextLink to get the next set of results. */\nexport interface OperationListResult {\n  /** The list of operations supported by the resource provider. */\n  value?: Operation[];\n  /**\n   * The URL to get the next set of operation list results if there are any.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A REST API operation */\nexport interface Operation {\n  /** This is of the format {provider}/{resource}/{operation}. */\n  name?: string;\n  /** The object that describes the operation. */\n  display?: OperationDisplay;\n  /** The intended executor of the operation. */\n  origin?: string;\n  /** Any object */\n  properties?: Record<string, unknown>;\n}\n\n/** The object that describes the operation. */\nexport interface OperationDisplay {\n  /** Friendly name of the resource provider. */\n  provider?: string;\n  /** For example: read, write, delete. */\n  operation?: string;\n  /** The resource type on which the operation is performed. */\n  resource?: string;\n  /** The friendly name of the operation. */\n  description?: string;\n}\n\n/** The list of the SKU descriptions */\nexport interface SkuDescriptionList {\n  /**\n   * SKU descriptions\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: SkuDescription[];\n}\n\n/** The Kusto SKU description of given resource type */\nexport interface SkuDescription {\n  /**\n   * The resource type\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceType?: string;\n  /**\n   * The name of the SKU\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The size of the SKU\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly size?: string;\n  /**\n   * The set of locations that the SKU is available\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly locations?: string[];\n  /**\n   * Locations and zones\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly locationInfo?: SkuLocationInfoItem[];\n  /**\n   * The restrictions because of which SKU cannot be used\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly restrictions?: Record<string, unknown>[];\n}\n\n/** The locations and zones info for SKU. */\nexport interface SkuLocationInfoItem {\n  /** The available location of the SKU. */\n  location: string;\n  /** The available zone of the SKU. */\n  zones?: string[];\n}\n\n/** The object sent for a kusto pool check name availability request. */\nexport interface KustoPoolCheckNameRequest {\n  /** Kusto Pool name. */\n  name: string;\n  /** The type of resource, Microsoft.Synapse/workspaces/kustoPools. */\n  type: \"Microsoft.Synapse/workspaces/kustoPools\";\n}\n\n/** The result returned from a check name availability request. */\nexport interface CheckNameResult {\n  /** Specifies a Boolean value that indicates if the name is available. */\n  nameAvailable?: boolean;\n  /** The name that was checked. */\n  name?: string;\n  /** Message indicating an unavailable name due to a conflict, or a description of the naming rules that are violated. */\n  message?: string;\n  /** Message providing the reason why the given name is invalid. */\n  reason?: Reason;\n}\n\n/** The list Kusto pools operation response. */\nexport interface KustoPoolListResult {\n  /** The list of Kusto pools. */\n  value?: KustoPool[];\n}\n\n/** Azure SKU definition. */\nexport interface AzureSku {\n  /** SKU name. */\n  name: SkuName;\n  /** The number of instances of the cluster. */\n  capacity?: number;\n  /** SKU size. */\n  size: SkuSize;\n}\n\n/** A class that contains the optimized auto scale definition. */\nexport interface OptimizedAutoscale {\n  /** The version of the template defined, for instance 1. */\n  version: number;\n  /** A boolean value that indicate if the optimized autoscale feature is enabled or not. */\n  isEnabled: boolean;\n  /** Minimum allowed instances count. */\n  minimum: number;\n  /** Maximum allowed instances count. */\n  maximum: number;\n}\n\n/** The list of language extension objects. */\nexport interface LanguageExtensionsList {\n  /** The list of language extensions. */\n  value?: LanguageExtension[];\n}\n\n/** The language extension object. */\nexport interface LanguageExtension {\n  /** The language extension name. */\n  languageExtensionName?: LanguageExtensionName;\n}\n\n/** Metadata pertaining to creation and last modification of the resource. */\nexport interface SystemData {\n  /** The identity that created the resource. */\n  createdBy?: string;\n  /** The type of identity that created the resource. */\n  createdByType?: CreatedByType;\n  /** The timestamp of resource creation (UTC). */\n  createdAt?: Date;\n  /** The identity that last modified the resource. */\n  lastModifiedBy?: string;\n  /** The type of identity that last modified the resource. */\n  lastModifiedByType?: CreatedByType;\n  /** The timestamp of resource last modification (UTC) */\n  lastModifiedAt?: Date;\n}\n\n/** List of available SKUs for a Kusto Pool. */\nexport interface ListResourceSkusResult {\n  /** The collection of available SKUs for an existing resource. */\n  value?: AzureResourceSku[];\n}\n\n/** Azure resource SKU definition. */\nexport interface AzureResourceSku {\n  /** Resource Namespace and Type. */\n  resourceType?: string;\n  /** The SKU details. */\n  sku?: AzureSku;\n  /** The number of instances of the cluster. */\n  capacity?: AzureCapacity;\n}\n\n/** Azure capacity definition. */\nexport interface AzureCapacity {\n  /** Scale type. */\n  scaleType: AzureScaleType;\n  /** Minimum allowed capacity. */\n  minimum: number;\n  /** Maximum allowed capacity. */\n  maximum: number;\n  /** The default capacity that would be used. */\n  default: number;\n}\n\n/** The result returned from a database check name availability request. */\nexport interface DatabaseCheckNameRequest {\n  /** Resource name. */\n  name: string;\n  /** The type of resource, for instance Microsoft.Synapse/workspaces/kustoPools/databases. */\n  type: Type;\n}\n\n/** The list Kusto database principals operation response. */\nexport interface FollowerDatabaseListResult {\n  /** The list of follower database result. */\n  value?: FollowerDatabaseDefinition[];\n}\n\n/** A class representing follower database request. */\nexport interface FollowerDatabaseDefinition {\n  /** Resource id of the cluster that follows a database owned by this cluster. */\n  kustoPoolResourceId: string;\n  /** Resource name of the attached database configuration in the follower cluster. */\n  attachedDatabaseConfigurationName: string;\n  /**\n   * The database name owned by this cluster that was followed. * in case following all databases.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly databaseName?: string;\n}\n\n/** The list attached database configurations operation response. */\nexport interface AttachedDatabaseConfigurationListResult {\n  /** The list of attached database configurations. */\n  value?: AttachedDatabaseConfiguration[];\n}\n\n/** Tables that will be included and excluded in the follower database */\nexport interface TableLevelSharingProperties {\n  /** List of tables to include in the follower database */\n  tablesToInclude?: string[];\n  /** List of tables to exclude from the follower database */\n  tablesToExclude?: string[];\n  /** List of external tables to include in the follower database */\n  externalTablesToInclude?: string[];\n  /** List of external tables exclude from the follower database */\n  externalTablesToExclude?: string[];\n  /** List of materialized views to include in the follower database */\n  materializedViewsToInclude?: string[];\n  /** List of materialized views exclude from the follower database */\n  materializedViewsToExclude?: string[];\n}\n\n/** The list Kusto databases operation response. */\nexport interface DatabaseListResult {\n  /** The list of Kusto databases. */\n  value?: DatabaseUnion[];\n}\n\n/** A data connection check name availability request. */\nexport interface DataConnectionCheckNameRequest {\n  /** Data Connection name. */\n  name: string;\n  /** The type of resource, Microsoft.Synapse/workspaces/kustoPools/databases/dataConnections. */\n  type: \"Microsoft.Synapse/workspaces/kustoPools/databases/dataConnections\";\n}\n\n/** Class representing an data connection validation. */\nexport interface DataConnectionValidation {\n  /** The name of the data connection. */\n  dataConnectionName?: string;\n  /** The data connection properties to validate. */\n  properties?: DataConnectionUnion;\n}\n\n/** The list Kusto data connection validation result. */\nexport interface DataConnectionValidationListResult {\n  /** The list of Kusto data connection validation errors. */\n  value?: DataConnectionValidationResult[];\n}\n\n/** The result returned from a data connection validation request. */\nexport interface DataConnectionValidationResult {\n  /** A message which indicates a problem in data connection validation. */\n  errorMessage?: string;\n}\n\n/** The list Kusto data connections operation response. */\nexport interface DataConnectionListResult {\n  /** The list of Kusto data connections. */\n  value?: DataConnectionUnion[];\n}\n\n/** A principal assignment check name availability request. */\nexport interface ClusterPrincipalAssignmentCheckNameRequest {\n  /** Principal Assignment resource name. */\n  name: string;\n  /** The type of resource, Microsoft.Synapse/workspaces/kustoPools/principalAssignments. */\n  type: \"Microsoft.Synapse/workspaces/kustoPools/principalAssignments\";\n}\n\n/** The list Kusto cluster principal assignments operation response. */\nexport interface ClusterPrincipalAssignmentListResult {\n  /** The list of Kusto cluster principal assignments. */\n  value?: ClusterPrincipalAssignment[];\n}\n\n/** A principal assignment check name availability request. */\nexport interface DatabasePrincipalAssignmentCheckNameRequest {\n  /** Principal Assignment resource name. */\n  name: string;\n  /** The type of resource, Microsoft.Synapse/workspaces/kustoPools/databases/principalAssignments. */\n  type: \"Microsoft.Synapse/workspaces/kustoPools/databases/principalAssignments\";\n}\n\n/** The list Kusto database principal assignments operation response. */\nexport interface DatabasePrincipalAssignmentListResult {\n  /** The list of Kusto database principal assignments. */\n  value?: DatabasePrincipalAssignment[];\n}\n\n/** A database query. */\nexport interface TopQueries {\n  /**\n   * The function that is used to aggregate each query's metrics.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly aggregationFunction?: QueryAggregationFunction;\n  /**\n   * The execution type that is used to filter the query instances that are returned.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly executionType?: QueryExecutionType;\n  /**\n   * The duration of the interval (ISO8601 duration format).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly intervalType?: string;\n  /**\n   * The number of requested queries.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly numberOfTopQueries?: number;\n  /**\n   * The start time for queries that are returned (ISO8601 format)\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly observationStartTime?: Date;\n  /**\n   * The end time for queries that are returned (ISO8601 format)\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly observationEndTime?: Date;\n  /**\n   * The type of metric to use for ordering the top metrics.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly observedMetric?: QueryObservedMetricType;\n  /**\n   * The list of queries.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly queries?: QueryStatistic[];\n}\n\n/** A database query. */\nexport interface QueryStatistic {\n  /**\n   * The id of the query\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly queryId?: string;\n  /**\n   * The list of query intervals.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly intervals?: QueryInterval[];\n}\n\n/** A database query. */\nexport interface QueryInterval {\n  /**\n   * The start time of the measurement interval (ISO8601 format).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly intervalStartTime?: Date;\n  /**\n   * The number of times the query was executed during this interval.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly executionCount?: number;\n  /**\n   * The list of query metrics during this interval.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly metrics?: QueryMetric[];\n}\n\n/** A database query. */\nexport interface QueryMetric {\n  /**\n   * The name of the metric\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The name of the metric for display in user interface\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly displayName?: string;\n  /**\n   * The unit of measurement\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unit?: QueryMetricUnit;\n  /**\n   * The measured value\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: number;\n}\n\n/** Represents the response to a get top queries request. */\nexport interface TopQueriesListResult {\n  /** The list of top queries. */\n  value: TopQueries[];\n}\n\n/** The compute resource properties for managed integration runtime. */\nexport interface IntegrationRuntimeComputeProperties {\n  /** Describes unknown properties. The value of an unknown property can be of \"any\" type. */\n  [property: string]: any;\n  /** The location for managed integration runtime. The supported regions could be found on https://docs.microsoft.com/en-us/azure/data-factory/data-factory-data-movement-activities */\n  location?: string;\n  /** The node size requirement to managed integration runtime. */\n  nodeSize?: string;\n  /** The required number of nodes for managed integration runtime. */\n  numberOfNodes?: number;\n  /** Maximum parallel executions count per node for managed integration runtime. */\n  maxParallelExecutionsPerNode?: number;\n  /** Data flow properties for managed integration runtime. */\n  dataFlowProperties?: IntegrationRuntimeDataFlowProperties;\n  /** VNet properties for managed integration runtime. */\n  vNetProperties?: IntegrationRuntimeVNetProperties;\n}\n\n/** Data flow properties for managed integration runtime. */\nexport interface IntegrationRuntimeDataFlowProperties {\n  /** Describes unknown properties. The value of an unknown property can be of \"any\" type. */\n  [property: string]: any;\n  /** Compute type of the cluster which will execute data flow job. */\n  computeType?: DataFlowComputeType;\n  /** Core count of the cluster which will execute data flow job. Supported values are: 8, 16, 32, 48, 80, 144 and 272. */\n  coreCount?: number;\n  /** Time to live (in minutes) setting of the cluster which will execute data flow job. */\n  timeToLive?: number;\n  /** Cluster will not be recycled and it will be used in next data flow activity run until TTL (time to live) is reached if this is set as false. Default is true. */\n  cleanup?: boolean;\n}\n\n/** VNet properties for managed integration runtime. */\nexport interface IntegrationRuntimeVNetProperties {\n  /** Describes unknown properties. The value of an unknown property can be of \"any\" type. */\n  [property: string]: any;\n  /** The ID of the VNet that this integration runtime will join. */\n  vNetId?: string;\n  /** The name of the subnet this integration runtime will join. */\n  subnet?: string;\n  /** Resource IDs of the public IP addresses that this integration runtime will use. */\n  publicIPs?: string[];\n  /** The ID of subnet, to which this Azure-SSIS integration runtime will be joined. */\n  subnetId?: string;\n}\n\n/** SSIS properties for managed integration runtime. */\nexport interface IntegrationRuntimeSsisProperties {\n  /** Describes unknown properties. The value of an unknown property can be of \"any\" type. */\n  [property: string]: any;\n  /** Catalog information for managed dedicated integration runtime. */\n  catalogInfo?: IntegrationRuntimeSsisCatalogInfo;\n  /** License type for bringing your own license scenario. */\n  licenseType?: IntegrationRuntimeLicenseType;\n  /** Custom setup script properties for a managed dedicated integration runtime. */\n  customSetupScriptProperties?: IntegrationRuntimeCustomSetupScriptProperties;\n  /** Data proxy properties for a managed dedicated integration runtime. */\n  dataProxyProperties?: IntegrationRuntimeDataProxyProperties;\n  /** The edition for the SSIS Integration Runtime */\n  edition?: IntegrationRuntimeEdition;\n  /** Custom setup without script properties for a SSIS integration runtime. */\n  expressCustomSetupProperties?: CustomSetupBaseUnion[];\n}\n\n/** Catalog information for managed dedicated integration runtime. */\nexport interface IntegrationRuntimeSsisCatalogInfo {\n  /** Describes unknown properties. The value of an unknown property can be of \"any\" type. */\n  [property: string]: any;\n  /** The catalog database server URL. */\n  catalogServerEndpoint?: string;\n  /** The administrator user name of catalog database. */\n  catalogAdminUserName?: string;\n  /** The password of the administrator user account of the catalog database. */\n  catalogAdminPassword?: SecureString;\n  /** The pricing tier for the catalog database. The valid values could be found in https://azure.microsoft.com/en-us/pricing/details/sql-database/ */\n  catalogPricingTier?: IntegrationRuntimeSsisCatalogPricingTier;\n}\n\n/** The base definition of a secret type. */\nexport interface SecretBase {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"SecureString\";\n}\n\n/** Custom setup script properties for a managed dedicated integration runtime. */\nexport interface IntegrationRuntimeCustomSetupScriptProperties {\n  /** The URI of the Azure blob container that contains the custom setup script. */\n  blobContainerUri?: string;\n  /** The SAS token of the Azure blob container. */\n  sasToken?: SecureString;\n}\n\n/** Data proxy properties for a managed dedicated integration runtime. */\nexport interface IntegrationRuntimeDataProxyProperties {\n  /** The self-hosted integration runtime reference. */\n  connectVia?: EntityReference;\n  /** The staging linked service reference. */\n  stagingLinkedService?: EntityReference;\n  /** The path to contain the staged data in the Blob storage. */\n  path?: string;\n}\n\n/** The entity reference. */\nexport interface EntityReference {\n  /** The type of this referenced entity. */\n  type?: IntegrationRuntimeEntityReferenceType;\n  /** The name of this referenced entity. */\n  referenceName?: string;\n}\n\n/** The base definition of the custom setup. */\nexport interface CustomSetupBase {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"CmdkeySetup\" | \"EnvironmentVariableSetup\" | \"ComponentSetup\";\n}\n\n/** The base definition of a linked integration runtime. */\nexport interface LinkedIntegrationRuntimeType {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  authorizationType: \"Key\" | \"RBAC\";\n}\n\n/** Properties of integration runtime node. */\nexport interface ManagedIntegrationRuntimeNode {\n  /** Describes unknown properties. The value of an unknown property can be of \"any\" type. */\n  [property: string]: any;\n  /**\n   * The managed integration runtime node id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nodeId?: string;\n  /**\n   * The managed integration runtime node status.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: ManagedIntegrationRuntimeNodeStatus;\n  /** The errors that occurred on this integration runtime node. */\n  errors?: ManagedIntegrationRuntimeError[];\n}\n\n/** Error definition for managed integration runtime. */\nexport interface ManagedIntegrationRuntimeError {\n  /** Describes unknown properties. The value of an unknown property can be of \"any\" type. */\n  [property: string]: any;\n  /**\n   * The time when the error occurred.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly time?: Date;\n  /**\n   * Error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * Managed integration runtime error parameters.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly parameters?: string[];\n  /**\n   * Error message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n}\n\n/** Properties of managed integration runtime operation result. */\nexport interface ManagedIntegrationRuntimeOperationResult {\n  /** Describes unknown properties. The value of an unknown property can be of \"any\" type. */\n  [property: string]: any;\n  /**\n   * The operation type. Could be start or stop.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * The start time of the operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly startTime?: Date;\n  /**\n   * The operation result.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly result?: string;\n  /**\n   * The error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errorCode?: string;\n  /**\n   * Managed integration runtime error parameters.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly parameters?: string[];\n  /**\n   * The activity id for the operation request.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly activityId?: string;\n}\n\n/** The linked integration runtime information. */\nexport interface LinkedIntegrationRuntime {\n  /**\n   * The name of the linked integration runtime.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The subscription ID for which the linked integration runtime belong to.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly subscriptionId?: string;\n  /**\n   * The name of the workspace for which the linked integration runtime belong to.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly dataFactoryName?: string;\n  /**\n   * The location of the workspace for which the linked integration runtime belong to.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly dataFactoryLocation?: string;\n  /**\n   * The creating time of the linked integration runtime.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createTime?: Date;\n}\n\n/** Ssis environment reference. */\nexport interface SsisEnvironmentReference {\n  /** Environment reference id. */\n  id?: number;\n  /** Environment folder name. */\n  environmentFolderName?: string;\n  /** Environment name. */\n  environmentName?: string;\n  /** Reference type */\n  referenceType?: string;\n}\n\n/** Ssis parameter. */\nexport interface SsisParameter {\n  /** Parameter id. */\n  id?: number;\n  /** Parameter name. */\n  name?: string;\n  /** Parameter description. */\n  description?: string;\n  /** Parameter type. */\n  dataType?: string;\n  /** Whether parameter is required. */\n  required?: boolean;\n  /** Whether parameter is sensitive. */\n  sensitive?: boolean;\n  /** Design default value of parameter. */\n  designDefaultValue?: string;\n  /** Default value of parameter. */\n  defaultValue?: string;\n  /** Default sensitive value of parameter. */\n  sensitiveDefaultValue?: string;\n  /** Parameter value type. */\n  valueType?: string;\n  /** Parameter value set. */\n  valueSet?: boolean;\n  /** Parameter reference variable. */\n  variable?: string;\n}\n\n/** Ssis variable. */\nexport interface SsisVariable {\n  /** Variable id. */\n  id?: number;\n  /** Variable name. */\n  name?: string;\n  /** Variable description. */\n  description?: string;\n  /** Variable type. */\n  dataType?: string;\n  /** Whether variable is sensitive. */\n  sensitive?: boolean;\n  /** Variable value. */\n  value?: string;\n  /** Variable sensitive value. */\n  sensitiveValue?: string;\n}\n\n/** A class that contains database statistics information. */\nexport interface DatabaseStatistics {\n  /** The database size - the total size of compressed data and index in bytes. */\n  size?: number;\n}\n\n/** The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location */\nexport type ProxyResource = Resource & {};\n\n/** The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location' */\nexport type TrackedResource = Resource & {\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n  /** The geo-location where the resource lives */\n  location: string;\n};\n\n/** The resource model definition for an Azure Resource Manager resource with an etag. */\nexport type AzureEntityResource = Resource & {\n  /**\n   * Resource Etag.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n};\n\n/** Class representing an update to a Kusto kusto pool. */\nexport type KustoPoolUpdate = Resource & {\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n  /** The SKU of the kusto pool. */\n  sku?: AzureSku;\n  /**\n   * The state of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: State;\n  /**\n   * The provisioned state of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ResourceProvisioningState;\n  /**\n   * The Kusto Pool URI.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly uri?: string;\n  /**\n   * The Kusto Pool data ingestion URI.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly dataIngestionUri?: string;\n  /**\n   * The reason for the Kusto Pool's current state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly stateReason?: string;\n  /** Optimized auto scale definition. */\n  optimizedAutoscale?: OptimizedAutoscale;\n  /** A boolean value that indicates if the streaming ingest is enabled. */\n  enableStreamingIngest?: boolean;\n  /** A boolean value that indicates if the purge operations are enabled. */\n  enablePurge?: boolean;\n  /**\n   * List of the Kusto Pool's language extensions.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly languageExtensions?: LanguageExtensionsList;\n  /** The workspace unique identifier. */\n  workspaceUID?: string;\n};\n\nexport type PrivateEndpointConnectionForPrivateLinkHub = PrivateEndpointConnectionForPrivateLinkHubBasicAutoGenerated & {\n  name?: string;\n  type?: string;\n};\n\n/** Managed integration runtime, including managed elastic and managed dedicated integration runtimes. */\nexport type ManagedIntegrationRuntime = IntegrationRuntime & {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Managed\";\n  /**\n   * Integration runtime state, only valid for managed dedicated integration runtime.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: IntegrationRuntimeState;\n  /** The reference name of the managed virtual network. */\n  referenceName?: string;\n  /** The type of the managed virtual network. */\n  typeManagedVirtualNetworkType?: string;\n  /** The id of the managed virtual network. */\n  id?: string;\n  /** The compute resource for managed integration runtime. */\n  computeProperties?: IntegrationRuntimeComputeProperties;\n  /** SSIS properties for managed integration runtime. */\n  ssisProperties?: IntegrationRuntimeSsisProperties;\n};\n\n/** Self-hosted integration runtime. */\nexport type SelfHostedIntegrationRuntime = IntegrationRuntime & {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"SelfHosted\";\n  /** Linked integration runtime type from data factory */\n  linkedInfo?: LinkedIntegrationRuntimeTypeUnion;\n};\n\n/** Ssis folder. */\nexport type SsisFolder = SsisObjectMetadata & {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Folder\";\n};\n\n/** Ssis project. */\nexport type SsisProject = SsisObjectMetadata & {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Project\";\n  /** Folder id which contains project. */\n  folderId?: number;\n  /** Project version. */\n  version?: number;\n  /** Environment reference in project */\n  environmentRefs?: SsisEnvironmentReference[];\n  /** Parameters in project */\n  parameters?: SsisParameter[];\n};\n\n/** Ssis Package. */\nexport type SsisPackage = SsisObjectMetadata & {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Package\";\n  /** Folder id which contains package. */\n  folderId?: number;\n  /** Project version which contains package. */\n  projectVersion?: number;\n  /** Project id which contains package. */\n  projectId?: number;\n  /** Parameters in package */\n  parameters?: SsisParameter[];\n};\n\n/** Ssis environment. */\nexport type SsisEnvironment = SsisObjectMetadata & {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Environment\";\n  /** Folder id which contains environment. */\n  folderId?: number;\n  /** Variable in environment */\n  variables?: SsisVariable[];\n};\n\n/** Managed integration runtime status. */\nexport type ManagedIntegrationRuntimeStatus = IntegrationRuntimeStatus & {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Managed\";\n  /**\n   * The time at which the integration runtime was created, in ISO8601 format.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createTime?: Date;\n  /**\n   * The list of nodes for managed integration runtime.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nodes?: ManagedIntegrationRuntimeNode[];\n  /**\n   * The errors that occurred on this integration runtime.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly otherErrors?: ManagedIntegrationRuntimeError[];\n  /**\n   * The last operation result that occurred on this integration runtime.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastOperation?: ManagedIntegrationRuntimeOperationResult;\n};\n\n/** Self-hosted integration runtime status. */\nexport type SelfHostedIntegrationRuntimeStatus = IntegrationRuntimeStatus & {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"SelfHosted\";\n  /**\n   * The time at which the integration runtime was created, in ISO8601 format.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createTime?: Date;\n  /**\n   * The task queue id of the integration runtime.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly taskQueueId?: string;\n  /**\n   * The node communication Channel encryption mode\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nodeCommunicationChannelEncryptionMode?: string;\n  /**\n   * It is used to set the encryption mode for node-node communication channel (when more than 2 self-hosted integration runtime nodes exist).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly internalChannelEncryption?: IntegrationRuntimeInternalChannelEncryptionMode;\n  /**\n   * Version of the integration runtime.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly version?: string;\n  /** The list of nodes for this integration runtime. */\n  nodes?: SelfHostedIntegrationRuntimeNode[];\n  /**\n   * The date at which the integration runtime will be scheduled to update, in ISO8601 format.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly scheduledUpdateDate?: Date;\n  /**\n   * The time in the date scheduled by service to update the integration runtime, e.g., PT03H is 3 hours\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly updateDelayOffset?: string;\n  /**\n   * The local time zone offset in hours.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly localTimeZoneOffset?: string;\n  /**\n   * Object with additional information about integration runtime capabilities.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly capabilities?: { [propertyName: string]: string };\n  /**\n   * The URLs for the services used in integration runtime backend service.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serviceUrls?: string[];\n  /**\n   * Whether Self-hosted integration runtime auto update has been turned on.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly autoUpdate?: IntegrationRuntimeAutoUpdate;\n  /**\n   * Status of the integration runtime version.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly versionStatus?: string;\n  /** The list of linked integration runtimes that are created to share with this integration runtime. */\n  links?: LinkedIntegrationRuntime[];\n  /**\n   * The version that the integration runtime is going to update to.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly pushedVersion?: string;\n  /**\n   * The latest version on download center.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly latestVersion?: string;\n  /**\n   * The estimated time when the self-hosted integration runtime will be updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly autoUpdateETA?: Date;\n  /** The service region of the integration runtime */\n  serviceRegion?: string;\n  /** The newer versions on download center. */\n  newerVersions?: string[];\n};\n\n/** Azure Synapse secure string definition. The string value will be masked with asterisks '*' during Get or List API calls. */\nexport type SecureString = SecretBase & {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"SecureString\";\n  /** Value of secure string. */\n  value: string;\n};\n\n/** The custom setup of running cmdkey commands. */\nexport type CmdkeySetup = CustomSetupBase & {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"CmdkeySetup\";\n  /** The server name of data source access. */\n  targetName: Record<string, unknown>;\n  /** The user name of data source access. */\n  userName: Record<string, unknown>;\n  /** The password of data source access. */\n  password: SecretBaseUnion;\n};\n\n/** The custom setup of setting environment variable. */\nexport type EnvironmentVariableSetup = CustomSetupBase & {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"EnvironmentVariableSetup\";\n  /** The name of the environment variable. */\n  variableName: string;\n  /** The value of the environment variable. */\n  variableValue: string;\n};\n\n/** The custom setup of installing 3rd party components. */\nexport type ComponentSetup = CustomSetupBase & {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"ComponentSetup\";\n  /** The name of the 3rd party component. */\n  componentName: string;\n  /** The license key to activate the component. */\n  licenseKey?: SecretBaseUnion;\n};\n\n/** The key authorization type integration runtime. */\nexport type LinkedIntegrationRuntimeKeyAuthorization = LinkedIntegrationRuntimeType & {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  authorizationType: \"Key\";\n  /** The key used for authorization. */\n  key: SecureString;\n};\n\n/** The role based access control (RBAC) authorization type integration runtime. */\nexport type LinkedIntegrationRuntimeRbacAuthorization = LinkedIntegrationRuntimeType & {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  authorizationType: \"RBAC\";\n  /** The resource identifier of the integration runtime to be shared. */\n  resourceId: string;\n};\n\n/** Azure Active Directory Only Authentication Info */\nexport type AzureADOnlyAuthentication = ProxyResource & {\n  /** Azure Active Directory only Authentication enabled. */\n  azureADOnlyAuthentication?: boolean;\n  /**\n   * property configuration state\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: StateValue;\n  /**\n   * property configuration date\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly creationDate?: Date;\n};\n\n/** IP firewall rule */\nexport type IpFirewallRuleInfo = ProxyResource & {\n  /** The end IP address of the firewall rule. Must be IPv4 format. Must be greater than or equal to startIpAddress */\n  endIpAddress?: string;\n  /**\n   * Resource provisioning state\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** The start IP address of the firewall rule. Must be IPv4 format */\n  startIpAddress?: string;\n};\n\n/** A workspace key */\nexport type Key = ProxyResource & {\n  /** Used to activate the workspace after a customer managed key is provided. */\n  isActiveCMK?: boolean;\n  /** The Key Vault Url of the workspace key. */\n  keyVaultUrl?: string;\n};\n\n/** A private endpoint connection */\nexport type PrivateEndpointConnection = ProxyResource & {\n  /** The private endpoint which the connection belongs to. */\n  privateEndpoint?: PrivateEndpoint;\n  /** Connection state of the private endpoint connection. */\n  privateLinkServiceConnectionState?: PrivateLinkServiceConnectionState;\n  /**\n   * Provisioning state of the private endpoint connection.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n};\n\n/** A private link resource */\nexport type PrivateLinkResource = ProxyResource & {\n  /**\n   * The private link resource properties.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly properties?: PrivateLinkResourceProperties;\n};\n\n/** Configuration for metadata sync */\nexport type MetadataSyncConfig = ProxyResource & {\n  /** Indicates whether the metadata sync is enabled or disabled */\n  enabled?: boolean;\n  /** The Sync Interval in minutes. */\n  syncIntervalInMinutes?: number;\n};\n\n/** A database geo backup policy. */\nexport type GeoBackupPolicy = ProxyResource & {\n  /**\n   * Kind of geo backup policy.  This is metadata used for the Azure portal experience.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly kind?: string;\n  /**\n   * Backup policy location.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n  /** The state of the geo backup policy. */\n  state: GeoBackupPolicyState;\n  /**\n   * The storage type of the geo backup policy.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly storageType?: string;\n};\n\n/** User activities of a data warehouse */\nexport type DataWarehouseUserActivities = ProxyResource & {\n  /**\n   * Count of running and suspended queries.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly activeQueriesCount?: number;\n};\n\n/** Database restore points. */\nexport type RestorePoint = ProxyResource & {\n  /**\n   * Resource location.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n  /**\n   * The type of restore point\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly restorePointType?: RestorePointType;\n  /**\n   * The earliest time to which this database can be restored\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly earliestRestoreDate?: Date;\n  /**\n   * The time the backup was taken\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly restorePointCreationDate?: Date;\n  /**\n   * The label of restore point for backup request by user\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly restorePointLabel?: string;\n};\n\n/** Represents a Sql pool replication link. */\nexport type ReplicationLink = ProxyResource & {\n  /**\n   * Location of the workspace that contains this firewall rule.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n  /**\n   * Legacy value indicating whether termination is allowed.  Currently always returns true.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isTerminationAllowed?: boolean;\n  /**\n   * Replication mode of this replication link.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly replicationMode?: string;\n  /**\n   * The name of the workspace hosting the partner Sql pool.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly partnerServer?: string;\n  /**\n   * The name of the partner Sql pool.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly partnerDatabase?: string;\n  /**\n   * The Azure Region of the partner Sql pool.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly partnerLocation?: string;\n  /**\n   * The role of the Sql pool in the replication link.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly role?: ReplicationRole;\n  /**\n   * The role of the partner Sql pool in the replication link.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly partnerRole?: ReplicationRole;\n  /**\n   * The start time for the replication link.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly startTime?: Date;\n  /**\n   * The percentage of seeding complete for the replication link.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly percentComplete?: number;\n  /**\n   * The replication state for the replication link.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly replicationState?: ReplicationState;\n};\n\n/** Maintenance windows. */\nexport type MaintenanceWindows = ProxyResource & {\n  timeRanges?: MaintenanceWindowTimeRange[];\n};\n\n/** Maintenance window options. */\nexport type MaintenanceWindowOptions = ProxyResource & {\n  /** Whether maintenance windows are enabled for the database. */\n  isEnabled?: boolean;\n  /** Available maintenance cycles e.g. {Saturday, 0, 48*60}, {Wednesday, 0, 24*60}. */\n  maintenanceWindowCycles?: MaintenanceWindowTimeRange[];\n  /** Minimum duration of maintenance window. */\n  minDurationInMinutes?: number;\n  /** Default duration for maintenance window. */\n  defaultDurationInMinutes?: number;\n  /** Minimum number of maintenance windows cycles to be set on the database. */\n  minCycles?: number;\n  /** Time granularity in minutes for maintenance windows. */\n  timeGranularityInMinutes?: number;\n  /** Whether we allow multiple maintenance windows per cycle. */\n  allowMultipleMaintenanceWindowsPerCycle?: boolean;\n};\n\n/** Represents a Sql pool transparent data encryption configuration. */\nexport type TransparentDataEncryption = ProxyResource & {\n  /**\n   * Resource location.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n  /** The status of the database transparent data encryption. */\n  status?: TransparentDataEncryptionStatus;\n};\n\n/** A Sql pool blob auditing policy. */\nexport type SqlPoolBlobAuditingPolicy = ProxyResource & {\n  /**\n   * Resource kind.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly kind?: string;\n  /** Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required. */\n  state?: BlobAuditingPolicyState;\n  /** Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint is required. */\n  storageEndpoint?: string;\n  /** Specifies the identifier key of the auditing storage account. If state is Enabled and storageEndpoint is specified, storageAccountAccessKey is required. */\n  storageAccountAccessKey?: string;\n  /** Specifies the number of days to keep in the audit logs in the storage account. */\n  retentionDays?: number;\n  /**\n   * Specifies the Actions-Groups and Actions to audit.\n   *\n   * The recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\n   *\n   * BATCH_COMPLETED_GROUP,\n   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\n   * FAILED_DATABASE_AUTHENTICATION_GROUP.\n   *\n   * This above combination is also the set that is configured by default when enabling auditing from the Azure portal.\n   *\n   * The supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\n   *\n   * APPLICATION_ROLE_CHANGE_PASSWORD_GROUP\n   * BACKUP_RESTORE_GROUP\n   * DATABASE_LOGOUT_GROUP\n   * DATABASE_OBJECT_CHANGE_GROUP\n   * DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\n   * DATABASE_OBJECT_PERMISSION_CHANGE_GROUP\n   * DATABASE_OPERATION_GROUP\n   * DATABASE_PERMISSION_CHANGE_GROUP\n   * DATABASE_PRINCIPAL_CHANGE_GROUP\n   * DATABASE_PRINCIPAL_IMPERSONATION_GROUP\n   * DATABASE_ROLE_MEMBER_CHANGE_GROUP\n   * FAILED_DATABASE_AUTHENTICATION_GROUP\n   * SCHEMA_OBJECT_ACCESS_GROUP\n   * SCHEMA_OBJECT_CHANGE_GROUP\n   * SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\n   * SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\n   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\n   * USER_CHANGE_PASSWORD_GROUP\n   * BATCH_STARTED_GROUP\n   * BATCH_COMPLETED_GROUP\n   *\n   * These are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\n   *\n   * For more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\n   *\n   * For Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\n   * SELECT\n   * UPDATE\n   * INSERT\n   * DELETE\n   * EXECUTE\n   * RECEIVE\n   * REFERENCES\n   *\n   * The general form for defining an action to be audited is:\n   * {action} ON {object} BY {principal}\n   *\n   * Note that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\n   *\n   * For example:\n   * SELECT on dbo.myTable by public\n   * SELECT on DATABASE::myDatabase by public\n   * SELECT on SCHEMA::mySchema by public\n   *\n   * For more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)\n   */\n  auditActionsAndGroups?: string[];\n  /** Specifies the blob storage subscription Id. */\n  storageAccountSubscriptionId?: string;\n  /** Specifies whether storageAccountAccessKey value is the storage's secondary key. */\n  isStorageSecondaryKeyInUse?: boolean;\n  /**\n   * Specifies whether audit events are sent to Azure Monitor.\n   * In order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\n   *\n   * When using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\n   * Note that for server level audit you should use the 'master' database as {databaseName}.\n   *\n   * Diagnostic Settings URI format:\n   * PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\n   *\n   * For more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\n   * or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\n   *\n   */\n  isAzureMonitorTargetEnabled?: boolean;\n};\n\n/** A Sql pool operation. */\nexport type SqlPoolOperation = ProxyResource & {\n  /**\n   * The name of the Sql pool the operation is being performed on.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly databaseName?: string;\n  /**\n   * The name of operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly operation?: string;\n  /**\n   * The friendly name of operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly operationFriendlyName?: string;\n  /**\n   * The percentage of the operation completed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly percentComplete?: number;\n  /**\n   * The name of the server.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serverName?: string;\n  /**\n   * The operation start time.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly startTime?: Date;\n  /**\n   * The operation state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: ManagementOperationState;\n  /**\n   * The operation error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errorCode?: number;\n  /**\n   * The operation error description.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errorDescription?: string;\n  /**\n   * The operation error severity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errorSeverity?: number;\n  /**\n   * Whether or not the error is a user error.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isUserError?: boolean;\n  /**\n   * The estimated completion time of the operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly estimatedCompletionTime?: Date;\n  /**\n   * The operation description.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly description?: string;\n  /**\n   * Whether the operation can be cancelled.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isCancellable?: boolean;\n};\n\n/** A sensitivity label. */\nexport type SensitivityLabel = ProxyResource & {\n  /**\n   * managed by\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly managedBy?: string;\n  /**\n   * The schema name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly schemaName?: string;\n  /**\n   * The table name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tableName?: string;\n  /**\n   * The column name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly columnName?: string;\n  /** The label name. */\n  labelName?: string;\n  /** The label ID. */\n  labelId?: string;\n  /** The information type. */\n  informationType?: string;\n  /** The information type ID. */\n  informationTypeId?: string;\n  /**\n   * Is sensitivity recommendation disabled. Applicable for recommended sensitivity label only. Specifies whether the sensitivity recommendation on this column is disabled (dismissed) or not.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isDisabled?: boolean;\n  rank?: SensitivityLabelRank;\n};\n\n/** A sensitivity label update operation. */\nexport type SensitivityLabelUpdate = ProxyResource & {\n  op?: SensitivityLabelUpdateKind;\n  /** Schema name of the column to update. */\n  schema?: string;\n  /** Table name of the column to update. */\n  table?: string;\n  /** Column name to update. */\n  column?: string;\n  /** The sensitivity label information to apply on a column. */\n  sensitivityLabel?: SensitivityLabel;\n};\n\n/** A recommended sensitivity label update operation. */\nexport type RecommendedSensitivityLabelUpdate = ProxyResource & {\n  op?: RecommendedSensitivityLabelUpdateKind;\n  /** Schema name of the column to update. */\n  schema?: string;\n  /** Table name of the column to update. */\n  table?: string;\n  /** Column name to update. */\n  column?: string;\n};\n\n/** A Sql pool schema resource. */\nexport type SqlPoolSchema = ProxyResource & {};\n\n/** A Sql pool table resource. */\nexport type SqlPoolTable = ProxyResource & {};\n\n/** A Sql pool column resource. */\nexport type SqlPoolColumn = ProxyResource & {\n  /** The column data type. */\n  columnType?: ColumnDataType;\n  /**\n   * Indicates whether column value is computed or not\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isComputed?: boolean;\n};\n\n/** A Sql pool connection policy. */\nexport type SqlPoolConnectionPolicy = ProxyResource & {\n  /**\n   * Resource kind.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly kind?: string;\n  /**\n   * Resource location.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n  /** The state of security access. */\n  securityEnabledAccess?: string;\n  /** The fully qualified host name of the auditing proxy. */\n  proxyDnsName?: string;\n  /** The port number of the auditing proxy. */\n  proxyPort?: string;\n  /** The visibility of the auditing proxy. */\n  visibility?: string;\n  /** Whether server default is enabled or disabled. */\n  useServerDefault?: string;\n  /** The state of proxy redirection. */\n  redirectionState?: string;\n  /** The connection policy state. */\n  state?: string;\n};\n\n/** A Sql pool vulnerability assessment. */\nexport type SqlPoolVulnerabilityAssessment = ProxyResource & {\n  /** A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).  It is required if server level vulnerability assessment policy doesn't set */\n  storageContainerPath?: string;\n  /** A shared access signature (SAS Key) that has write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required. */\n  storageContainerSasKey?: string;\n  /** Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required. */\n  storageAccountAccessKey?: string;\n  /** The recurring scans settings */\n  recurringScans?: VulnerabilityAssessmentRecurringScansProperties;\n};\n\n/** A vulnerability assessment scan record. */\nexport type VulnerabilityAssessmentScanRecord = ProxyResource & {\n  /**\n   * The scan ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly scanId?: string;\n  /**\n   * The scan trigger type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly triggerType?: VulnerabilityAssessmentScanTriggerType;\n  /**\n   * The scan status.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: VulnerabilityAssessmentScanState;\n  /**\n   * The scan start time (UTC).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly startTime?: Date;\n  /**\n   * The scan end time (UTC).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly endTime?: Date;\n  /**\n   * The scan errors.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errors?: VulnerabilityAssessmentScanError[];\n  /**\n   * The scan results storage container path.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly storageContainerPath?: string;\n  /**\n   * The number of failed security checks.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly numberOfFailedSecurityChecks?: number;\n};\n\n/** A Sql pool Vulnerability Assessment scan export resource. */\nexport type SqlPoolVulnerabilityAssessmentScansExport = ProxyResource & {\n  /**\n   * Location of the exported report (e.g. https://myStorage.blob.core.windows.net/VaScans/scans/serverName/databaseName/scan_scanId.xlsx).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly exportedReportLocation?: string;\n};\n\n/** A Sql pool security alert policy. */\nexport type SqlPoolSecurityAlertPolicy = ProxyResource & {\n  /** Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific Sql pool. */\n  state?: SecurityAlertPolicyState;\n  /** Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action */\n  disabledAlerts?: string[];\n  /** Specifies an array of e-mail addresses to which the alert is sent. */\n  emailAddresses?: string[];\n  /** Specifies that the alert is sent to the account administrators. */\n  emailAccountAdmins?: boolean;\n  /** Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs. */\n  storageEndpoint?: string;\n  /** Specifies the identifier key of the Threat Detection audit storage account. */\n  storageAccountAccessKey?: string;\n  /** Specifies the number of days to keep in the Threat Detection audit logs. */\n  retentionDays?: number;\n  /**\n   * Specifies the UTC creation time of the policy.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly creationTime?: Date;\n};\n\n/** A Sql pool vulnerability assessment rule baseline. */\nexport type SqlPoolVulnerabilityAssessmentRuleBaseline = ProxyResource & {\n  /** The rule baseline result */\n  baselineResults?: SqlPoolVulnerabilityAssessmentRuleBaselineItem[];\n};\n\n/** An extended Sql pool blob auditing policy. */\nexport type ExtendedSqlPoolBlobAuditingPolicy = ProxyResource & {\n  /** Specifies condition of where clause when creating an audit. */\n  predicateExpression?: string;\n  /** Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required. */\n  state?: BlobAuditingPolicyState;\n  /** Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required. */\n  storageEndpoint?: string;\n  /**\n   * Specifies the identifier key of the auditing storage account.\n   * If state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\n   * Prerequisites for using managed identity authentication:\n   * 1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\n   * 2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\n   * For more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)\n   */\n  storageAccountAccessKey?: string;\n  /** Specifies the number of days to keep in the audit logs in the storage account. */\n  retentionDays?: number;\n  /**\n   * Specifies the Actions-Groups and Actions to audit.\n   *\n   * The recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\n   *\n   * BATCH_COMPLETED_GROUP,\n   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\n   * FAILED_DATABASE_AUTHENTICATION_GROUP.\n   *\n   * This above combination is also the set that is configured by default when enabling auditing from the Azure portal.\n   *\n   * The supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\n   *\n   * APPLICATION_ROLE_CHANGE_PASSWORD_GROUP\n   * BACKUP_RESTORE_GROUP\n   * DATABASE_LOGOUT_GROUP\n   * DATABASE_OBJECT_CHANGE_GROUP\n   * DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\n   * DATABASE_OBJECT_PERMISSION_CHANGE_GROUP\n   * DATABASE_OPERATION_GROUP\n   * DATABASE_PERMISSION_CHANGE_GROUP\n   * DATABASE_PRINCIPAL_CHANGE_GROUP\n   * DATABASE_PRINCIPAL_IMPERSONATION_GROUP\n   * DATABASE_ROLE_MEMBER_CHANGE_GROUP\n   * FAILED_DATABASE_AUTHENTICATION_GROUP\n   * SCHEMA_OBJECT_ACCESS_GROUP\n   * SCHEMA_OBJECT_CHANGE_GROUP\n   * SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\n   * SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\n   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\n   * USER_CHANGE_PASSWORD_GROUP\n   * BATCH_STARTED_GROUP\n   * BATCH_COMPLETED_GROUP\n   *\n   * These are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\n   *\n   * For more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\n   *\n   * For Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\n   * SELECT\n   * UPDATE\n   * INSERT\n   * DELETE\n   * EXECUTE\n   * RECEIVE\n   * REFERENCES\n   *\n   * The general form for defining an action to be audited is:\n   * {action} ON {object} BY {principal}\n   *\n   * Note that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\n   *\n   * For example:\n   * SELECT on dbo.myTable by public\n   * SELECT on DATABASE::myDatabase by public\n   * SELECT on SCHEMA::mySchema by public\n   *\n   * For more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)\n   */\n  auditActionsAndGroups?: string[];\n  /** Specifies the blob storage subscription Id. */\n  storageAccountSubscriptionId?: string;\n  /** Specifies whether storageAccountAccessKey value is the storage's secondary key. */\n  isStorageSecondaryKeyInUse?: boolean;\n  /**\n   * Specifies whether audit events are sent to Azure Monitor.\n   * In order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\n   *\n   * When using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\n   * Note that for server level audit you should use the 'master' database as {databaseName}.\n   *\n   * Diagnostic Settings URI format:\n   * PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\n   *\n   * For more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\n   * or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\n   *\n   */\n  isAzureMonitorTargetEnabled?: boolean;\n  /**\n   * Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\n   * The default minimum value is 1000 (1 second). The maximum is 2,147,483,647.\n   */\n  queueDelayMs?: number;\n};\n\nexport type DataMaskingPolicy = ProxyResource & {\n  /**\n   * The location of the data masking policy.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n  /**\n   * The kind of data masking policy. Metadata, used for Azure portal.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly kind?: string;\n  /**\n   * Fully qualified resource ID of the sql pool\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly managedBy?: string;\n  /** The state of the data masking policy. */\n  dataMaskingState?: DataMaskingState;\n  /** The list of the exempt principals. Specifies the semicolon-separated list of database users for which the data masking policy does not apply. The specified users receive data results without masking for all of the database queries. */\n  exemptPrincipals?: string;\n  /**\n   * The list of the application principals. This is a legacy parameter and is no longer used.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly applicationPrincipals?: string;\n  /**\n   * The masking level. This is a legacy parameter and is no longer used.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly maskingLevel?: string;\n};\n\n/** Represents a Sql pool data masking rule. */\nexport type DataMaskingRule = ProxyResource & {\n  /**\n   * The location of the data masking rule.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n  /**\n   * The kind of Data Masking Rule. Metadata, used for Azure portal.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly kind?: string;\n  /**\n   * The rule Id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly idPropertiesId?: string;\n  /** The alias name. This is a legacy parameter and is no longer used. */\n  aliasName?: string;\n  /** The rule state. Used to delete a rule. To delete an existing rule, specify the schemaName, tableName, columnName, maskingFunction, and specify ruleState as disabled. However, if the rule doesn't already exist, the rule will be created with ruleState set to enabled, regardless of the provided value of ruleState. */\n  ruleState?: DataMaskingRuleState;\n  /** The schema name on which the data masking rule is applied. */\n  schemaName?: string;\n  /** The table name on which the data masking rule is applied. */\n  tableName?: string;\n  /** The column name on which the data masking rule is applied. */\n  columnName?: string;\n  /** The masking function that is used for the data masking rule. */\n  maskingFunction?: DataMaskingFunction;\n  /** The numberFrom property of the masking rule. Required if maskingFunction is set to Number, otherwise this parameter will be ignored. */\n  numberFrom?: string;\n  /** The numberTo property of the data masking rule. Required if maskingFunction is set to Number, otherwise this parameter will be ignored. */\n  numberTo?: string;\n  /** If maskingFunction is set to Text, the number of characters to show unmasked in the beginning of the string. Otherwise, this parameter will be ignored. */\n  prefixSize?: string;\n  /** If maskingFunction is set to Text, the number of characters to show unmasked at the end of the string. Otherwise, this parameter will be ignored. */\n  suffixSize?: string;\n  /** If maskingFunction is set to Text, the character to use for masking the unexposed part of the string. Otherwise, this parameter will be ignored. */\n  replacementString?: string;\n};\n\n/** Workload group operations for a sql pool */\nexport type WorkloadGroup = ProxyResource & {\n  /** The workload group minimum percentage resource. */\n  minResourcePercent?: number;\n  /** The workload group cap percentage resource. */\n  maxResourcePercent?: number;\n  /** The workload group request minimum grant percentage. */\n  minResourcePercentPerRequest?: number;\n  /** The workload group request maximum grant percentage. */\n  maxResourcePercentPerRequest?: number;\n  /** The workload group importance level. */\n  importance?: string;\n  /** The workload group query execution timeout. */\n  queryExecutionTimeout?: number;\n};\n\n/** Workload classifier operations for a data warehouse */\nexport type WorkloadClassifier = ProxyResource & {\n  /** The workload classifier member name. */\n  memberName?: string;\n  /** The workload classifier label. */\n  label?: string;\n  /** The workload classifier context. */\n  context?: string;\n  /** The workload classifier start time for classification. */\n  startTime?: string;\n  /** The workload classifier end time for classification. */\n  endTime?: string;\n  /** The workload classifier importance. */\n  importance?: string;\n};\n\n/** A server blob auditing policy. */\nexport type ServerBlobAuditingPolicy = ProxyResource & {\n  /** Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required. */\n  state?: BlobAuditingPolicyState;\n  /** Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required. */\n  storageEndpoint?: string;\n  /**\n   * Specifies the identifier key of the auditing storage account.\n   * If state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\n   * Prerequisites for using managed identity authentication:\n   * 1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\n   * 2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\n   * For more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)\n   */\n  storageAccountAccessKey?: string;\n  /** Specifies the number of days to keep in the audit logs in the storage account. */\n  retentionDays?: number;\n  /**\n   * Specifies the Actions-Groups and Actions to audit.\n   *\n   * The recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\n   *\n   * BATCH_COMPLETED_GROUP,\n   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\n   * FAILED_DATABASE_AUTHENTICATION_GROUP.\n   *\n   * This above combination is also the set that is configured by default when enabling auditing from the Azure portal.\n   *\n   * The supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\n   *\n   * APPLICATION_ROLE_CHANGE_PASSWORD_GROUP\n   * BACKUP_RESTORE_GROUP\n   * DATABASE_LOGOUT_GROUP\n   * DATABASE_OBJECT_CHANGE_GROUP\n   * DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\n   * DATABASE_OBJECT_PERMISSION_CHANGE_GROUP\n   * DATABASE_OPERATION_GROUP\n   * DATABASE_PERMISSION_CHANGE_GROUP\n   * DATABASE_PRINCIPAL_CHANGE_GROUP\n   * DATABASE_PRINCIPAL_IMPERSONATION_GROUP\n   * DATABASE_ROLE_MEMBER_CHANGE_GROUP\n   * FAILED_DATABASE_AUTHENTICATION_GROUP\n   * SCHEMA_OBJECT_ACCESS_GROUP\n   * SCHEMA_OBJECT_CHANGE_GROUP\n   * SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\n   * SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\n   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\n   * USER_CHANGE_PASSWORD_GROUP\n   * BATCH_STARTED_GROUP\n   * BATCH_COMPLETED_GROUP\n   *\n   * These are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\n   *\n   * For more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\n   *\n   * For Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\n   * SELECT\n   * UPDATE\n   * INSERT\n   * DELETE\n   * EXECUTE\n   * RECEIVE\n   * REFERENCES\n   *\n   * The general form for defining an action to be audited is:\n   * {action} ON {object} BY {principal}\n   *\n   * Note that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\n   *\n   * For example:\n   * SELECT on dbo.myTable by public\n   * SELECT on DATABASE::myDatabase by public\n   * SELECT on SCHEMA::mySchema by public\n   *\n   * For more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)\n   */\n  auditActionsAndGroups?: string[];\n  /** Specifies the blob storage subscription Id. */\n  storageAccountSubscriptionId?: string;\n  /** Specifies whether storageAccountAccessKey value is the storage's secondary key. */\n  isStorageSecondaryKeyInUse?: boolean;\n  /**\n   * Specifies whether audit events are sent to Azure Monitor.\n   * In order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\n   *\n   * When using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\n   * Note that for server level audit you should use the 'master' database as {databaseName}.\n   *\n   * Diagnostic Settings URI format:\n   * PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\n   *\n   * For more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\n   * or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\n   *\n   */\n  isAzureMonitorTargetEnabled?: boolean;\n  /**\n   * Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\n   * The default minimum value is 1000 (1 second). The maximum is 2,147,483,647.\n   */\n  queueDelayMs?: number;\n  /**\n   * Specifies the state of devops audit. If state is Enabled, devops logs will be sent to Azure Monitor.\n   * In order to send the events to Azure Monitor, specify 'State' as 'Enabled', 'IsAzureMonitorTargetEnabled' as true and 'IsDevopsAuditEnabled' as true\n   *\n   * When using REST API to configure auditing, Diagnostic Settings with 'DevOpsOperationsAudit' diagnostic logs category on the master database should also be created.\n   *\n   * Diagnostic Settings URI format:\n   * PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/master/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\n   *\n   * For more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\n   * or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\n   *\n   */\n  isDevopsAuditEnabled?: boolean;\n};\n\n/** An extended server blob auditing policy. */\nexport type ExtendedServerBlobAuditingPolicy = ProxyResource & {\n  /** Specifies condition of where clause when creating an audit. */\n  predicateExpression?: string;\n  /** Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required. */\n  state?: BlobAuditingPolicyState;\n  /** Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required. */\n  storageEndpoint?: string;\n  /**\n   * Specifies the identifier key of the auditing storage account.\n   * If state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\n   * Prerequisites for using managed identity authentication:\n   * 1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\n   * 2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\n   * For more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)\n   */\n  storageAccountAccessKey?: string;\n  /** Specifies the number of days to keep in the audit logs in the storage account. */\n  retentionDays?: number;\n  /**\n   * Specifies the Actions-Groups and Actions to audit.\n   *\n   * The recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\n   *\n   * BATCH_COMPLETED_GROUP,\n   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\n   * FAILED_DATABASE_AUTHENTICATION_GROUP.\n   *\n   * This above combination is also the set that is configured by default when enabling auditing from the Azure portal.\n   *\n   * The supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\n   *\n   * APPLICATION_ROLE_CHANGE_PASSWORD_GROUP\n   * BACKUP_RESTORE_GROUP\n   * DATABASE_LOGOUT_GROUP\n   * DATABASE_OBJECT_CHANGE_GROUP\n   * DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\n   * DATABASE_OBJECT_PERMISSION_CHANGE_GROUP\n   * DATABASE_OPERATION_GROUP\n   * DATABASE_PERMISSION_CHANGE_GROUP\n   * DATABASE_PRINCIPAL_CHANGE_GROUP\n   * DATABASE_PRINCIPAL_IMPERSONATION_GROUP\n   * DATABASE_ROLE_MEMBER_CHANGE_GROUP\n   * FAILED_DATABASE_AUTHENTICATION_GROUP\n   * SCHEMA_OBJECT_ACCESS_GROUP\n   * SCHEMA_OBJECT_CHANGE_GROUP\n   * SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\n   * SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\n   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\n   * USER_CHANGE_PASSWORD_GROUP\n   * BATCH_STARTED_GROUP\n   * BATCH_COMPLETED_GROUP\n   *\n   * These are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\n   *\n   * For more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\n   *\n   * For Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\n   * SELECT\n   * UPDATE\n   * INSERT\n   * DELETE\n   * EXECUTE\n   * RECEIVE\n   * REFERENCES\n   *\n   * The general form for defining an action to be audited is:\n   * {action} ON {object} BY {principal}\n   *\n   * Note that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\n   *\n   * For example:\n   * SELECT on dbo.myTable by public\n   * SELECT on DATABASE::myDatabase by public\n   * SELECT on SCHEMA::mySchema by public\n   *\n   * For more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)\n   */\n  auditActionsAndGroups?: string[];\n  /** Specifies the blob storage subscription Id. */\n  storageAccountSubscriptionId?: string;\n  /** Specifies whether storageAccountAccessKey value is the storage's secondary key. */\n  isStorageSecondaryKeyInUse?: boolean;\n  /**\n   * Specifies whether audit events are sent to Azure Monitor.\n   * In order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\n   *\n   * When using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\n   * Note that for server level audit you should use the 'master' database as {databaseName}.\n   *\n   * Diagnostic Settings URI format:\n   * PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\n   *\n   * For more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\n   * or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\n   *\n   */\n  isAzureMonitorTargetEnabled?: boolean;\n  /**\n   * Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\n   * The default minimum value is 1000 (1 second). The maximum is 2,147,483,647.\n   */\n  queueDelayMs?: number;\n  /**\n   * Specifies the state of devops audit. If state is Enabled, devops logs will be sent to Azure Monitor.\n   * In order to send the events to Azure Monitor, specify 'State' as 'Enabled', 'IsAzureMonitorTargetEnabled' as true and 'IsDevopsAuditEnabled' as true\n   *\n   * When using REST API to configure auditing, Diagnostic Settings with 'DevOpsOperationsAudit' diagnostic logs category on the master database should also be created.\n   *\n   * Diagnostic Settings URI format:\n   * PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/master/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\n   *\n   * For more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\n   * or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\n   *\n   */\n  isDevopsAuditEnabled?: boolean;\n};\n\n/** Workspace managed Sql server security alert policy. */\nexport type ServerSecurityAlertPolicy = ProxyResource & {\n  /** Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific server */\n  state?: SecurityAlertPolicyState;\n  /** Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action */\n  disabledAlerts?: string[];\n  /** Specifies an array of e-mail addresses to which the alert is sent. */\n  emailAddresses?: string[];\n  /** Specifies that the alert is sent to the account administrators. */\n  emailAccountAdmins?: boolean;\n  /** Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs. */\n  storageEndpoint?: string;\n  /** Specifies the identifier key of the Threat Detection audit storage account. */\n  storageAccountAccessKey?: string;\n  /** Specifies the number of days to keep in the Threat Detection audit logs. */\n  retentionDays?: number;\n  /**\n   * Specifies the UTC creation time of the policy.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly creationTime?: Date;\n};\n\n/** A server vulnerability assessment. */\nexport type ServerVulnerabilityAssessment = ProxyResource & {\n  /** A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/). */\n  storageContainerPath?: string;\n  /** A shared access signature (SAS Key) that has read and write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required. */\n  storageContainerSasKey?: string;\n  /** Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required. */\n  storageAccountAccessKey?: string;\n  /** The recurring scans settings */\n  recurringScans?: VulnerabilityAssessmentRecurringScansProperties;\n};\n\n/** The server encryption protector. */\nexport type EncryptionProtector = ProxyResource & {\n  /**\n   * Kind of encryption protector. This is metadata used for the Azure portal experience.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly kind?: string;\n  /**\n   * Resource location.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n  /**\n   * Subregion of the encryption protector.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly subregion?: string;\n  /** The name of the server key. */\n  serverKeyName?: string;\n  /** The encryption protector type like 'ServiceManaged', 'AzureKeyVault'. */\n  serverKeyType?: ServerKeyType;\n  /**\n   * The URI of the server key.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly uri?: string;\n  /**\n   * Thumbprint of the server key.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly thumbprint?: string;\n};\n\n/** A recoverable sql pool */\nexport type RecoverableSqlPool = ProxyResource & {\n  /**\n   * The edition of the database\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly edition?: string;\n  /**\n   * The service level objective name of the database\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serviceLevelObjective?: string;\n  /**\n   * The elastic pool name of the database\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly elasticPoolName?: string;\n  /**\n   * The last available backup date of the database (ISO8601 format)\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastAvailableBackupDate?: Date;\n};\n\n/** Workspace active directory administrator */\nexport type WorkspaceAadAdminInfo = ProxyResource & {\n  /** Tenant ID of the workspace active directory administrator */\n  tenantId?: string;\n  /** Login of the workspace active directory administrator */\n  login?: string;\n  /** Workspace active directory administrator type */\n  administratorType?: string;\n  /** Object ID of the workspace active directory administrator */\n  sid?: string;\n};\n\n/** Sql Control Settings for workspace managed identity */\nexport type ManagedIdentitySqlControlSettingsModel = ProxyResource & {\n  /** Grant sql control to managed identity */\n  grantSqlControlToManagedIdentity?: ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentity;\n};\n\n/** A restorable dropped Sql pool */\nexport type RestorableDroppedSqlPool = ProxyResource & {\n  /**\n   * The geo-location where the resource lives\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n  /**\n   * The name of the database\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly databaseName?: string;\n  /**\n   * The edition of the database\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly edition?: string;\n  /**\n   * The max size in bytes of the database\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly maxSizeBytes?: string;\n  /**\n   * The service level objective name of the database\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serviceLevelObjective?: string;\n  /**\n   * The elastic pool name of the database\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly elasticPoolName?: string;\n  /**\n   * The creation date of the database (ISO8601 format)\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly creationDate?: Date;\n  /**\n   * The deletion date of the database (ISO8601 format)\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly deletionDate?: Date;\n  /**\n   * The earliest restore date of the database (ISO8601 format)\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly earliestRestoreDate?: Date;\n};\n\n/** Class representing an attached database configuration. */\nexport type AttachedDatabaseConfiguration = ProxyResource & {\n  /** Resource location. */\n  location?: string;\n  /**\n   * Azure Resource Manager metadata containing createdBy and modifiedBy information.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /**\n   * The provisioned state of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ResourceProvisioningState;\n  /** The name of the database which you would like to attach, use * if you want to follow all current and future databases. */\n  databaseName?: string;\n  /** The resource id of the kusto pool where the databases you would like to attach reside. */\n  kustoPoolResourceId?: string;\n  /**\n   * The list of databases from the clusterResourceId which are currently attached to the kusto pool.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly attachedDatabaseNames?: string[];\n  /** The default principals modification kind */\n  defaultPrincipalsModificationKind?: DefaultPrincipalsModificationKind;\n  /** Table level sharing specifications */\n  tableLevelSharingProperties?: TableLevelSharingProperties;\n};\n\n/** Class representing a Kusto database. */\nexport type Database = ProxyResource & {\n  /** Resource location. */\n  location?: string;\n  /** Kind of the database */\n  kind: Kind;\n  /**\n   * Azure Resource Manager metadata containing createdBy and modifiedBy information.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n};\n\n/** Class representing a data connection. */\nexport type DataConnection = ProxyResource & {\n  /** Resource location. */\n  location?: string;\n  /** Kind of the endpoint for the data connection */\n  kind: DataConnectionKind;\n  /**\n   * Azure Resource Manager metadata containing createdBy and modifiedBy information.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n};\n\n/** Class representing a cluster principal assignment. */\nexport type ClusterPrincipalAssignment = ProxyResource & {\n  /**\n   * Azure Resource Manager metadata containing createdBy and modifiedBy information.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /** The principal ID assigned to the cluster principal. It can be a user email, application ID, or security group name. */\n  principalId?: string;\n  /** Cluster principal role. */\n  role?: ClusterPrincipalRole;\n  /** The tenant id of the principal */\n  tenantId?: string;\n  /** Principal type. */\n  principalType?: PrincipalType;\n  /**\n   * The tenant name of the principal\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantName?: string;\n  /**\n   * The principal name\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalName?: string;\n  /**\n   * The provisioned state of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ResourceProvisioningState;\n};\n\n/** Class representing a database principal assignment. */\nexport type DatabasePrincipalAssignment = ProxyResource & {\n  /**\n   * Azure Resource Manager metadata containing createdBy and modifiedBy information.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /** The principal ID assigned to the database principal. It can be a user email, application ID, or security group name. */\n  principalId?: string;\n  /** Database principal role. */\n  role?: DatabasePrincipalRole;\n  /** The tenant id of the principal */\n  tenantId?: string;\n  /** Principal type. */\n  principalType?: PrincipalType;\n  /**\n   * The tenant name of the principal\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantName?: string;\n  /**\n   * The principal name\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalName?: string;\n  /**\n   * The provisioned state of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ResourceProvisioningState;\n};\n\n/** A privateLinkHub */\nexport type PrivateLinkHub = TrackedResource & {\n  /** PrivateLinkHub provisioning state */\n  provisioningState?: string;\n  /**\n   * List of private endpoint connections\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateEndpointConnections?: PrivateEndpointConnectionForPrivateLinkHubBasic[];\n};\n\n/** A SQL Analytics pool */\nexport type SqlPool = TrackedResource & {\n  /** SQL pool SKU */\n  sku?: Sku;\n  /** Maximum size in bytes */\n  maxSizeBytes?: number;\n  /** Collation mode */\n  collation?: string;\n  /** Source database to create from */\n  sourceDatabaseId?: string;\n  /** Backup database to restore from */\n  recoverableDatabaseId?: string;\n  /** Resource state */\n  provisioningState?: string;\n  /**\n   * Resource status\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: string;\n  /** Snapshot time to restore */\n  restorePointInTime?: Date;\n  /**\n   * Specifies the mode of sql pool creation.\n   *\n   * Default: regular sql pool creation.\n   *\n   * PointInTimeRestore: Creates a sql pool by restoring a point in time backup of an existing sql pool. sourceDatabaseId must be specified as the resource ID of the existing sql pool, and restorePointInTime must be specified.\n   *\n   * Recovery: Creates a sql pool by a geo-replicated backup. sourceDatabaseId  must be specified as the recoverableDatabaseId to restore.\n   *\n   * Restore: Creates a sql pool by restoring a backup of a deleted sql  pool. SourceDatabaseId should be the sql pool's original resource ID. SourceDatabaseId and sourceDatabaseDeletionDate must be specified.\n   */\n  createMode?: CreateMode;\n  /**\n   * Date the SQL pool was created\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly creationDate?: Date;\n  /** The storage account type used to store backups for this sql pool. */\n  storageAccountType?: StorageAccountType;\n  /** Specifies the time that the sql pool was deleted */\n  sourceDatabaseDeletionDate?: Date;\n};\n\n/** A workspace */\nexport type Workspace = TrackedResource & {\n  /** Identity of the workspace */\n  identity?: ManagedIdentity;\n  /** Workspace default data lake storage account details */\n  defaultDataLakeStorage?: DataLakeStorageAccountDetails;\n  /** SQL administrator login password */\n  sqlAdministratorLoginPassword?: string;\n  /** Workspace managed resource group. The resource group name uniquely identifies the resource group within the user subscriptionId. The resource group name must be no longer than 90 characters long, and must be alphanumeric characters (Char.IsLetterOrDigit()) and '-', '_', '(', ')' and'.'. Note that the name cannot end with '.' */\n  managedResourceGroupName?: string;\n  /**\n   * Resource provisioning state\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /** Login for workspace SQL active directory administrator */\n  sqlAdministratorLogin?: string;\n  /** Virtual Network profile */\n  virtualNetworkProfile?: VirtualNetworkProfile;\n  /** Connectivity endpoints */\n  connectivityEndpoints?: { [propertyName: string]: string };\n  /** Setting this to 'default' will ensure that all compute for this workspace is in a virtual network managed on behalf of the user. */\n  managedVirtualNetwork?: string;\n  /** Private endpoint connections to the workspace */\n  privateEndpointConnections?: PrivateEndpointConnection[];\n  /** The encryption details of the workspace */\n  encryption?: EncryptionDetails;\n  /**\n   * The workspace unique identifier\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly workspaceUID?: string;\n  /**\n   * Workspace level configs and feature flags\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly extraProperties?: {\n    [propertyName: string]: Record<string, unknown>;\n  };\n  /** Managed Virtual Network Settings */\n  managedVirtualNetworkSettings?: ManagedVirtualNetworkSettings;\n  /** Git integration settings */\n  workspaceRepositoryConfiguration?: WorkspaceRepositoryConfiguration;\n  /** Purview Configuration */\n  purviewConfiguration?: PurviewConfiguration;\n  /**\n   * The ADLA resource ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly adlaResourceId?: string;\n  /** Enable or Disable public network access to workspace */\n  publicNetworkAccess?: WorkspacePublicNetworkAccess;\n  /** Initial workspace AAD admin properties for a CSP subscription */\n  cspWorkspaceAdminProperties?: CspWorkspaceAdminProperties;\n  /**\n   * Workspace settings\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly settings?: { [propertyName: string]: Record<string, unknown> };\n  /** Enable or Disable AzureADOnlyAuthentication on All Workspace subresource */\n  azureADOnlyAuthentication?: boolean;\n  /** Is trustedServiceBypassEnabled for the workspace */\n  trustedServiceBypassEnabled?: boolean;\n};\n\n/** A Big Data pool */\nexport type BigDataPoolResourceInfo = TrackedResource & {\n  /** The state of the Big Data pool. */\n  provisioningState?: string;\n  /** Auto-scaling properties */\n  autoScale?: AutoScaleProperties;\n  /**\n   * The time when the Big Data pool was created.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly creationDate?: Date;\n  /** Auto-pausing properties */\n  autoPause?: AutoPauseProperties;\n  /** Whether compute isolation is required or not. */\n  isComputeIsolationEnabled?: boolean;\n  /** Whether session level packages enabled. */\n  sessionLevelPackagesEnabled?: boolean;\n  /** The cache size */\n  cacheSize?: number;\n  /** Dynamic Executor Allocation */\n  dynamicExecutorAllocation?: DynamicExecutorAllocation;\n  /** The Spark events folder */\n  sparkEventsFolder?: string;\n  /** The number of nodes in the Big Data pool. */\n  nodeCount?: number;\n  /** Library version requirements */\n  libraryRequirements?: LibraryRequirements;\n  /** List of custom libraries/packages associated with the spark pool. */\n  customLibraries?: LibraryInfo[];\n  /** Spark configuration file to specify additional properties */\n  sparkConfigProperties?: SparkConfigProperties;\n  /** The Apache Spark version. */\n  sparkVersion?: string;\n  /** The default folder where Spark logs will be written. */\n  defaultSparkLogFolder?: string;\n  /** The level of compute power that each node in the Big Data pool has. */\n  nodeSize?: NodeSize;\n  /** The kind of nodes that the Big Data pool provides. */\n  nodeSizeFamily?: NodeSizeFamily;\n  /**\n   * The time when the Big Data pool was updated successfully.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastSucceededTimestamp?: Date;\n};\n\n/** Class representing a Kusto kusto pool. */\nexport type KustoPool = TrackedResource & {\n  /** The SKU of the kusto pool. */\n  sku: AzureSku;\n  /**\n   * A unique read-only string that changes whenever the resource is updated.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly etag?: string;\n  /**\n   * Azure Resource Manager metadata containing createdBy and modifiedBy information.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /**\n   * The state of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: State;\n  /**\n   * The provisioned state of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ResourceProvisioningState;\n  /**\n   * The Kusto Pool URI.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly uri?: string;\n  /**\n   * The Kusto Pool data ingestion URI.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly dataIngestionUri?: string;\n  /**\n   * The reason for the Kusto Pool's current state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly stateReason?: string;\n  /** Optimized auto scale definition. */\n  optimizedAutoscale?: OptimizedAutoscale;\n  /** A boolean value that indicates if the streaming ingest is enabled. */\n  enableStreamingIngest?: boolean;\n  /** A boolean value that indicates if the purge operations are enabled. */\n  enablePurge?: boolean;\n  /**\n   * List of the Kusto Pool's language extensions.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly languageExtensions?: LanguageExtensionsList;\n  /** The workspace unique identifier. */\n  workspaceUID?: string;\n};\n\n/** Azure Synapse nested resource, which belongs to a workspace. */\nexport type SubResource = AzureEntityResource & {};\n\n/** Class representing a read write database. */\nexport type ReadWriteDatabase = Database & {\n  /**\n   * The provisioned state of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ResourceProvisioningState;\n  /** The time the data should be kept before it stops being accessible to queries in TimeSpan. */\n  softDeletePeriod?: string;\n  /** The time the data should be kept in cache for fast queries in TimeSpan. */\n  hotCachePeriod?: string;\n  /**\n   * The statistics of the database.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly statistics?: DatabaseStatistics;\n  /**\n   * Indicates whether the database is followed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isFollowed?: boolean;\n};\n\n/** Class representing a read only following database. */\nexport type ReadOnlyFollowingDatabase = Database & {\n  /**\n   * The provisioned state of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ResourceProvisioningState;\n  /**\n   * The time the data should be kept before it stops being accessible to queries in TimeSpan.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly softDeletePeriod?: string;\n  /** The time the data should be kept in cache for fast queries in TimeSpan. */\n  hotCachePeriod?: string;\n  /**\n   * The statistics of the database.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly statistics?: DatabaseStatistics;\n  /**\n   * The name of the leader cluster\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly leaderClusterResourceId?: string;\n  /**\n   * The name of the attached database configuration cluster\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly attachedDatabaseConfigurationName?: string;\n  /**\n   * The principals modification kind of the database\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalsModificationKind?: PrincipalsModificationKind;\n};\n\n/** Class representing an event hub data connection. */\nexport type EventHubDataConnection = DataConnection & {\n  /** The resource ID of the event hub to be used to create a data connection. */\n  eventHubResourceId?: string;\n  /** The event hub consumer group. */\n  consumerGroup?: string;\n  /** The table where the data should be ingested. Optionally the table information can be added to each message. */\n  tableName?: string;\n  /** The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each message. */\n  mappingRuleName?: string;\n  /** The data format of the message. Optionally the data format can be added to each message. */\n  dataFormat?: EventHubDataFormat;\n  /** System properties of the event hub */\n  eventSystemProperties?: string[];\n  /** The event hub messages compression type */\n  compression?: Compression;\n  /**\n   * The provisioned state of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ResourceProvisioningState;\n  /** The resource ID of a managed identity (system or user assigned) to be used to authenticate with event hub. */\n  managedIdentityResourceId?: string;\n};\n\n/** Class representing an iot hub data connection. */\nexport type IotHubDataConnection = DataConnection & {\n  /** The resource ID of the Iot hub to be used to create a data connection. */\n  iotHubResourceId?: string;\n  /** The iot hub consumer group. */\n  consumerGroup?: string;\n  /** The table where the data should be ingested. Optionally the table information can be added to each message. */\n  tableName?: string;\n  /** The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each message. */\n  mappingRuleName?: string;\n  /** The data format of the message. Optionally the data format can be added to each message. */\n  dataFormat?: IotHubDataFormat;\n  /** System properties of the iot hub */\n  eventSystemProperties?: string[];\n  /** The name of the share access policy */\n  sharedAccessPolicyName?: string;\n  /**\n   * The provisioned state of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ResourceProvisioningState;\n};\n\n/** Class representing an Event Grid data connection. */\nexport type EventGridDataConnection = DataConnection & {\n  /** The resource ID of the storage account where the data resides. */\n  storageAccountResourceId?: string;\n  /** The resource ID where the event grid is configured to send events. */\n  eventHubResourceId?: string;\n  /** The event hub consumer group. */\n  consumerGroup?: string;\n  /** The table where the data should be ingested. Optionally the table information can be added to each message. */\n  tableName?: string;\n  /** The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each message. */\n  mappingRuleName?: string;\n  /** The data format of the message. Optionally the data format can be added to each message. */\n  dataFormat?: EventGridDataFormat;\n  /** A Boolean value that, if set to true, indicates that ingestion should ignore the first record of every file */\n  ignoreFirstRecord?: boolean;\n  /** The name of blob storage event type to process. */\n  blobStorageEventType?: BlobStorageEventType;\n  /**\n   * The provisioned state of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ResourceProvisioningState;\n};\n\n/** Library response details */\nexport type LibraryResource = SubResource & {\n  /** Name of the library. */\n  namePropertiesName?: string;\n  /** Storage blob path of library. */\n  path?: string;\n  /** Storage blob container name. */\n  containerName?: string;\n  /** The last update time of the library. */\n  uploadedTimestamp?: Date;\n  /** Type of the library. */\n  typePropertiesType?: string;\n  /**\n   * Provisioning status of the library/package.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningStatus?: string;\n  /**\n   * Creator Id of the library/package.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly creatorId?: string;\n};\n\n/** Integration runtime resource type. */\nexport type IntegrationRuntimeResource = SubResource & {\n  /** Integration runtime properties. */\n  properties: IntegrationRuntimeUnion;\n};\n\n/** SparkConfiguration response details */\nexport type SparkConfigurationResource = SubResource & {\n  /** Description about the SparkConfiguration. */\n  description?: string;\n  /** SparkConfiguration configs. */\n  configs: { [propertyName: string]: string };\n  /** Annotations for SparkConfiguration. */\n  annotations?: string[];\n  /** additional Notes. */\n  notes?: string;\n  /** The identity that created the resource. */\n  createdBy?: string;\n  /** The timestamp of resource creation. */\n  created?: Date;\n};\n\n/** Known values of {@link AzureADOnlyAuthenticationName} that the service accepts. */\nexport enum KnownAzureADOnlyAuthenticationName {\n  Default = \"default\"\n}\n\n/**\n * Defines values for AzureADOnlyAuthenticationName. \\\n * {@link KnownAzureADOnlyAuthenticationName} can be used interchangeably with AzureADOnlyAuthenticationName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **default**\n */\nexport type AzureADOnlyAuthenticationName = string;\n\n/** Known values of {@link StateValue} that the service accepts. */\nexport enum KnownStateValue {\n  Consistent = \"Consistent\",\n  InConsistent = \"InConsistent\",\n  Updating = \"Updating\"\n}\n\n/**\n * Defines values for StateValue. \\\n * {@link KnownStateValue} can be used interchangeably with StateValue,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Consistent** \\\n * **InConsistent** \\\n * **Updating**\n */\nexport type StateValue = string;\n\n/** Known values of {@link ProvisioningState} that the service accepts. */\nexport enum KnownProvisioningState {\n  Provisioning = \"Provisioning\",\n  Succeeded = \"Succeeded\",\n  Deleting = \"Deleting\",\n  Failed = \"Failed\",\n  DeleteError = \"DeleteError\"\n}\n\n/**\n * Defines values for ProvisioningState. \\\n * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Provisioning** \\\n * **Succeeded** \\\n * **Deleting** \\\n * **Failed** \\\n * **DeleteError**\n */\nexport type ProvisioningState = string;\n\n/** Known values of {@link OperationStatus} that the service accepts. */\nexport enum KnownOperationStatus {\n  InProgress = \"InProgress\",\n  Succeeded = \"Succeeded\",\n  Failed = \"Failed\",\n  Canceled = \"Canceled\"\n}\n\n/**\n * Defines values for OperationStatus. \\\n * {@link KnownOperationStatus} can be used interchangeably with OperationStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **InProgress** \\\n * **Succeeded** \\\n * **Failed** \\\n * **Canceled**\n */\nexport type OperationStatus = string;\n\n/** Known values of {@link CreateMode} that the service accepts. */\nexport enum KnownCreateMode {\n  Default = \"Default\",\n  PointInTimeRestore = \"PointInTimeRestore\",\n  Recovery = \"Recovery\",\n  Restore = \"Restore\"\n}\n\n/**\n * Defines values for CreateMode. \\\n * {@link KnownCreateMode} can be used interchangeably with CreateMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Default** \\\n * **PointInTimeRestore** \\\n * **Recovery** \\\n * **Restore**\n */\nexport type CreateMode = string;\n\n/** Known values of {@link StorageAccountType} that the service accepts. */\nexport enum KnownStorageAccountType {\n  GRS = \"GRS\",\n  LRS = \"LRS\"\n}\n\n/**\n * Defines values for StorageAccountType. \\\n * {@link KnownStorageAccountType} can be used interchangeably with StorageAccountType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **GRS** \\\n * **LRS**\n */\nexport type StorageAccountType = string;\n\n/** Known values of {@link GeoBackupPolicyName} that the service accepts. */\nexport enum KnownGeoBackupPolicyName {\n  Default = \"Default\"\n}\n\n/**\n * Defines values for GeoBackupPolicyName. \\\n * {@link KnownGeoBackupPolicyName} can be used interchangeably with GeoBackupPolicyName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Default**\n */\nexport type GeoBackupPolicyName = string;\n\n/** Known values of {@link DataWarehouseUserActivityName} that the service accepts. */\nexport enum KnownDataWarehouseUserActivityName {\n  Current = \"current\"\n}\n\n/**\n * Defines values for DataWarehouseUserActivityName. \\\n * {@link KnownDataWarehouseUserActivityName} can be used interchangeably with DataWarehouseUserActivityName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **current**\n */\nexport type DataWarehouseUserActivityName = string;\n\n/** Known values of {@link ReplicationState} that the service accepts. */\nexport enum KnownReplicationState {\n  Pending = \"PENDING\",\n  Seeding = \"SEEDING\",\n  CatchUP = \"CATCH_UP\",\n  Suspended = \"SUSPENDED\"\n}\n\n/**\n * Defines values for ReplicationState. \\\n * {@link KnownReplicationState} can be used interchangeably with ReplicationState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **PENDING** \\\n * **SEEDING** \\\n * **CATCH_UP** \\\n * **SUSPENDED**\n */\nexport type ReplicationState = string;\n\n/** Known values of {@link DayOfWeek} that the service accepts. */\nexport enum KnownDayOfWeek {\n  Sunday = \"Sunday\",\n  Monday = \"Monday\",\n  Tuesday = \"Tuesday\",\n  Wednesday = \"Wednesday\",\n  Thursday = \"Thursday\",\n  Friday = \"Friday\",\n  Saturday = \"Saturday\"\n}\n\n/**\n * Defines values for DayOfWeek. \\\n * {@link KnownDayOfWeek} can be used interchangeably with DayOfWeek,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Sunday** \\\n * **Monday** \\\n * **Tuesday** \\\n * **Wednesday** \\\n * **Thursday** \\\n * **Friday** \\\n * **Saturday**\n */\nexport type DayOfWeek = string;\n\n/** Known values of {@link TransparentDataEncryptionName} that the service accepts. */\nexport enum KnownTransparentDataEncryptionName {\n  Current = \"current\"\n}\n\n/**\n * Defines values for TransparentDataEncryptionName. \\\n * {@link KnownTransparentDataEncryptionName} can be used interchangeably with TransparentDataEncryptionName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **current**\n */\nexport type TransparentDataEncryptionName = string;\n\n/** Known values of {@link ManagementOperationState} that the service accepts. */\nexport enum KnownManagementOperationState {\n  Pending = \"Pending\",\n  InProgress = \"InProgress\",\n  Succeeded = \"Succeeded\",\n  Failed = \"Failed\",\n  CancelInProgress = \"CancelInProgress\",\n  Cancelled = \"Cancelled\"\n}\n\n/**\n * Defines values for ManagementOperationState. \\\n * {@link KnownManagementOperationState} can be used interchangeably with ManagementOperationState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Pending** \\\n * **InProgress** \\\n * **Succeeded** \\\n * **Failed** \\\n * **CancelInProgress** \\\n * **Cancelled**\n */\nexport type ManagementOperationState = string;\n\n/** Known values of {@link ColumnDataType} that the service accepts. */\nexport enum KnownColumnDataType {\n  Image = \"image\",\n  Text = \"text\",\n  Uniqueidentifier = \"uniqueidentifier\",\n  Date = \"date\",\n  Time = \"time\",\n  Datetime2 = \"datetime2\",\n  Datetimeoffset = \"datetimeoffset\",\n  Tinyint = \"tinyint\",\n  Smallint = \"smallint\",\n  Int = \"int\",\n  Smalldatetime = \"smalldatetime\",\n  Real = \"real\",\n  Money = \"money\",\n  Datetime = \"datetime\",\n  Float = \"float\",\n  SqlVariant = \"sql_variant\",\n  Ntext = \"ntext\",\n  Bit = \"bit\",\n  Decimal = \"decimal\",\n  Numeric = \"numeric\",\n  Smallmoney = \"smallmoney\",\n  Bigint = \"bigint\",\n  Hierarchyid = \"hierarchyid\",\n  Geometry = \"geometry\",\n  Geography = \"geography\",\n  Varbinary = \"varbinary\",\n  Varchar = \"varchar\",\n  Binary = \"binary\",\n  Char = \"char\",\n  Timestamp = \"timestamp\",\n  Nvarchar = \"nvarchar\",\n  Nchar = \"nchar\",\n  Xml = \"xml\",\n  Sysname = \"sysname\"\n}\n\n/**\n * Defines values for ColumnDataType. \\\n * {@link KnownColumnDataType} can be used interchangeably with ColumnDataType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **image** \\\n * **text** \\\n * **uniqueidentifier** \\\n * **date** \\\n * **time** \\\n * **datetime2** \\\n * **datetimeoffset** \\\n * **tinyint** \\\n * **smallint** \\\n * **int** \\\n * **smalldatetime** \\\n * **real** \\\n * **money** \\\n * **datetime** \\\n * **float** \\\n * **sql_variant** \\\n * **ntext** \\\n * **bit** \\\n * **decimal** \\\n * **numeric** \\\n * **smallmoney** \\\n * **bigint** \\\n * **hierarchyid** \\\n * **geometry** \\\n * **geography** \\\n * **varbinary** \\\n * **varchar** \\\n * **binary** \\\n * **char** \\\n * **timestamp** \\\n * **nvarchar** \\\n * **nchar** \\\n * **xml** \\\n * **sysname**\n */\nexport type ColumnDataType = string;\n\n/** Known values of {@link ConnectionPolicyName} that the service accepts. */\nexport enum KnownConnectionPolicyName {\n  Default = \"default\"\n}\n\n/**\n * Defines values for ConnectionPolicyName. \\\n * {@link KnownConnectionPolicyName} can be used interchangeably with ConnectionPolicyName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **default**\n */\nexport type ConnectionPolicyName = string;\n\n/** Known values of {@link VulnerabilityAssessmentName} that the service accepts. */\nexport enum KnownVulnerabilityAssessmentName {\n  Default = \"default\"\n}\n\n/**\n * Defines values for VulnerabilityAssessmentName. \\\n * {@link KnownVulnerabilityAssessmentName} can be used interchangeably with VulnerabilityAssessmentName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **default**\n */\nexport type VulnerabilityAssessmentName = string;\n\n/** Known values of {@link VulnerabilityAssessmentScanTriggerType} that the service accepts. */\nexport enum KnownVulnerabilityAssessmentScanTriggerType {\n  OnDemand = \"OnDemand\",\n  Recurring = \"Recurring\"\n}\n\n/**\n * Defines values for VulnerabilityAssessmentScanTriggerType. \\\n * {@link KnownVulnerabilityAssessmentScanTriggerType} can be used interchangeably with VulnerabilityAssessmentScanTriggerType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **OnDemand** \\\n * **Recurring**\n */\nexport type VulnerabilityAssessmentScanTriggerType = string;\n\n/** Known values of {@link VulnerabilityAssessmentScanState} that the service accepts. */\nexport enum KnownVulnerabilityAssessmentScanState {\n  Passed = \"Passed\",\n  Failed = \"Failed\",\n  FailedToRun = \"FailedToRun\",\n  InProgress = \"InProgress\"\n}\n\n/**\n * Defines values for VulnerabilityAssessmentScanState. \\\n * {@link KnownVulnerabilityAssessmentScanState} can be used interchangeably with VulnerabilityAssessmentScanState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Passed** \\\n * **Failed** \\\n * **FailedToRun** \\\n * **InProgress**\n */\nexport type VulnerabilityAssessmentScanState = string;\n\n/** Known values of {@link SecurityAlertPolicyName} that the service accepts. */\nexport enum KnownSecurityAlertPolicyName {\n  Default = \"default\"\n}\n\n/**\n * Defines values for SecurityAlertPolicyName. \\\n * {@link KnownSecurityAlertPolicyName} can be used interchangeably with SecurityAlertPolicyName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **default**\n */\nexport type SecurityAlertPolicyName = string;\n\n/** Known values of {@link BlobAuditingPolicyName} that the service accepts. */\nexport enum KnownBlobAuditingPolicyName {\n  Default = \"default\"\n}\n\n/**\n * Defines values for BlobAuditingPolicyName. \\\n * {@link KnownBlobAuditingPolicyName} can be used interchangeably with BlobAuditingPolicyName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **default**\n */\nexport type BlobAuditingPolicyName = string;\n\n/** Known values of {@link SecurityAlertPolicyNameAutoGenerated} that the service accepts. */\nexport enum KnownSecurityAlertPolicyNameAutoGenerated {\n  Default = \"Default\"\n}\n\n/**\n * Defines values for SecurityAlertPolicyNameAutoGenerated. \\\n * {@link KnownSecurityAlertPolicyNameAutoGenerated} can be used interchangeably with SecurityAlertPolicyNameAutoGenerated,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Default**\n */\nexport type SecurityAlertPolicyNameAutoGenerated = string;\n\n/** Known values of {@link EncryptionProtectorName} that the service accepts. */\nexport enum KnownEncryptionProtectorName {\n  Current = \"current\"\n}\n\n/**\n * Defines values for EncryptionProtectorName. \\\n * {@link KnownEncryptionProtectorName} can be used interchangeably with EncryptionProtectorName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **current**\n */\nexport type EncryptionProtectorName = string;\n\n/** Known values of {@link ServerKeyType} that the service accepts. */\nexport enum KnownServerKeyType {\n  ServiceManaged = \"ServiceManaged\",\n  AzureKeyVault = \"AzureKeyVault\"\n}\n\n/**\n * Defines values for ServerKeyType. \\\n * {@link KnownServerKeyType} can be used interchangeably with ServerKeyType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **ServiceManaged** \\\n * **AzureKeyVault**\n */\nexport type ServerKeyType = string;\n\n/** Known values of {@link WorkspacePublicNetworkAccess} that the service accepts. */\nexport enum KnownWorkspacePublicNetworkAccess {\n  Enabled = \"Enabled\",\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for WorkspacePublicNetworkAccess. \\\n * {@link KnownWorkspacePublicNetworkAccess} can be used interchangeably with WorkspacePublicNetworkAccess,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type WorkspacePublicNetworkAccess = string;\n\n/** Known values of {@link ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentityDesiredState} that the service accepts. */\nexport enum KnownManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentityDesiredState {\n  Enabled = \"Enabled\",\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentityDesiredState. \\\n * {@link KnownManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentityDesiredState} can be used interchangeably with ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentityDesiredState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentityDesiredState = string;\n\n/** Known values of {@link ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentityActualState} that the service accepts. */\nexport enum KnownManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentityActualState {\n  Enabling = \"Enabling\",\n  Enabled = \"Enabled\",\n  Disabling = \"Disabling\",\n  Disabled = \"Disabled\",\n  Unknown = \"Unknown\"\n}\n\n/**\n * Defines values for ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentityActualState. \\\n * {@link KnownManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentityActualState} can be used interchangeably with ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentityActualState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabling** \\\n * **Enabled** \\\n * **Disabling** \\\n * **Disabled** \\\n * **Unknown**\n */\nexport type ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentityActualState = string;\n\n/** Known values of {@link ConfigurationType} that the service accepts. */\nexport enum KnownConfigurationType {\n  File = \"File\",\n  Artifact = \"Artifact\"\n}\n\n/**\n * Defines values for ConfigurationType. \\\n * {@link KnownConfigurationType} can be used interchangeably with ConfigurationType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **File** \\\n * **Artifact**\n */\nexport type ConfigurationType = string;\n\n/** Known values of {@link NodeSize} that the service accepts. */\nexport enum KnownNodeSize {\n  None = \"None\",\n  Small = \"Small\",\n  Medium = \"Medium\",\n  Large = \"Large\",\n  XLarge = \"XLarge\",\n  XXLarge = \"XXLarge\",\n  XXXLarge = \"XXXLarge\"\n}\n\n/**\n * Defines values for NodeSize. \\\n * {@link KnownNodeSize} can be used interchangeably with NodeSize,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **Small** \\\n * **Medium** \\\n * **Large** \\\n * **XLarge** \\\n * **XXLarge** \\\n * **XXXLarge**\n */\nexport type NodeSize = string;\n\n/** Known values of {@link NodeSizeFamily} that the service accepts. */\nexport enum KnownNodeSizeFamily {\n  None = \"None\",\n  MemoryOptimized = \"MemoryOptimized\",\n  HardwareAcceleratedFpga = \"HardwareAcceleratedFPGA\",\n  HardwareAcceleratedGPU = \"HardwareAcceleratedGPU\"\n}\n\n/**\n * Defines values for NodeSizeFamily. \\\n * {@link KnownNodeSizeFamily} can be used interchangeably with NodeSizeFamily,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **MemoryOptimized** \\\n * **HardwareAcceleratedFPGA** \\\n * **HardwareAcceleratedGPU**\n */\nexport type NodeSizeFamily = string;\n\n/** Known values of {@link IntegrationRuntimeAutoUpdate} that the service accepts. */\nexport enum KnownIntegrationRuntimeAutoUpdate {\n  On = \"On\",\n  Off = \"Off\"\n}\n\n/**\n * Defines values for IntegrationRuntimeAutoUpdate. \\\n * {@link KnownIntegrationRuntimeAutoUpdate} can be used interchangeably with IntegrationRuntimeAutoUpdate,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **On** \\\n * **Off**\n */\nexport type IntegrationRuntimeAutoUpdate = string;\n\n/** Known values of {@link IntegrationRuntimeType} that the service accepts. */\nexport enum KnownIntegrationRuntimeType {\n  Managed = \"Managed\",\n  SelfHosted = \"SelfHosted\"\n}\n\n/**\n * Defines values for IntegrationRuntimeType. \\\n * {@link KnownIntegrationRuntimeType} can be used interchangeably with IntegrationRuntimeType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Managed** \\\n * **SelfHosted**\n */\nexport type IntegrationRuntimeType = string;\n\n/** Known values of {@link SsisObjectMetadataType} that the service accepts. */\nexport enum KnownSsisObjectMetadataType {\n  Folder = \"Folder\",\n  Project = \"Project\",\n  Package = \"Package\",\n  Environment = \"Environment\"\n}\n\n/**\n * Defines values for SsisObjectMetadataType. \\\n * {@link KnownSsisObjectMetadataType} can be used interchangeably with SsisObjectMetadataType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Folder** \\\n * **Project** \\\n * **Package** \\\n * **Environment**\n */\nexport type SsisObjectMetadataType = string;\n\n/** Known values of {@link SelfHostedIntegrationRuntimeNodeStatus} that the service accepts. */\nexport enum KnownSelfHostedIntegrationRuntimeNodeStatus {\n  NeedRegistration = \"NeedRegistration\",\n  Online = \"Online\",\n  Limited = \"Limited\",\n  Offline = \"Offline\",\n  Upgrading = \"Upgrading\",\n  Initializing = \"Initializing\",\n  InitializeFailed = \"InitializeFailed\"\n}\n\n/**\n * Defines values for SelfHostedIntegrationRuntimeNodeStatus. \\\n * {@link KnownSelfHostedIntegrationRuntimeNodeStatus} can be used interchangeably with SelfHostedIntegrationRuntimeNodeStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NeedRegistration** \\\n * **Online** \\\n * **Limited** \\\n * **Offline** \\\n * **Upgrading** \\\n * **Initializing** \\\n * **InitializeFailed**\n */\nexport type SelfHostedIntegrationRuntimeNodeStatus = string;\n\n/** Known values of {@link IntegrationRuntimeUpdateResult} that the service accepts. */\nexport enum KnownIntegrationRuntimeUpdateResult {\n  None = \"None\",\n  Succeed = \"Succeed\",\n  Fail = \"Fail\"\n}\n\n/**\n * Defines values for IntegrationRuntimeUpdateResult. \\\n * {@link KnownIntegrationRuntimeUpdateResult} can be used interchangeably with IntegrationRuntimeUpdateResult,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **Succeed** \\\n * **Fail**\n */\nexport type IntegrationRuntimeUpdateResult = string;\n\n/** Known values of {@link IntegrationRuntimeState} that the service accepts. */\nexport enum KnownIntegrationRuntimeState {\n  Initial = \"Initial\",\n  Stopped = \"Stopped\",\n  Started = \"Started\",\n  Starting = \"Starting\",\n  Stopping = \"Stopping\",\n  NeedRegistration = \"NeedRegistration\",\n  Online = \"Online\",\n  Limited = \"Limited\",\n  Offline = \"Offline\",\n  AccessDenied = \"AccessDenied\"\n}\n\n/**\n * Defines values for IntegrationRuntimeState. \\\n * {@link KnownIntegrationRuntimeState} can be used interchangeably with IntegrationRuntimeState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Initial** \\\n * **Stopped** \\\n * **Started** \\\n * **Starting** \\\n * **Stopping** \\\n * **NeedRegistration** \\\n * **Online** \\\n * **Limited** \\\n * **Offline** \\\n * **AccessDenied**\n */\nexport type IntegrationRuntimeState = string;\n\n/** Known values of {@link IntegrationRuntimeAuthKeyName} that the service accepts. */\nexport enum KnownIntegrationRuntimeAuthKeyName {\n  AuthKey1 = \"authKey1\",\n  AuthKey2 = \"authKey2\"\n}\n\n/**\n * Defines values for IntegrationRuntimeAuthKeyName. \\\n * {@link KnownIntegrationRuntimeAuthKeyName} can be used interchangeably with IntegrationRuntimeAuthKeyName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **authKey1** \\\n * **authKey2**\n */\nexport type IntegrationRuntimeAuthKeyName = string;\n\n/** Known values of {@link Reason} that the service accepts. */\nexport enum KnownReason {\n  Invalid = \"Invalid\",\n  AlreadyExists = \"AlreadyExists\"\n}\n\n/**\n * Defines values for Reason. \\\n * {@link KnownReason} can be used interchangeably with Reason,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Invalid** \\\n * **AlreadyExists**\n */\nexport type Reason = string;\n\n/** Known values of {@link SkuName} that the service accepts. */\nexport enum KnownSkuName {\n  ComputeOptimized = \"Compute optimized\",\n  StorageOptimized = \"Storage optimized\"\n}\n\n/**\n * Defines values for SkuName. \\\n * {@link KnownSkuName} can be used interchangeably with SkuName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Compute optimized** \\\n * **Storage optimized**\n */\nexport type SkuName = string;\n\n/** Known values of {@link SkuSize} that the service accepts. */\nexport enum KnownSkuSize {\n  ExtraSmall = \"Extra small\",\n  Small = \"Small\",\n  Medium = \"Medium\",\n  Large = \"Large\"\n}\n\n/**\n * Defines values for SkuSize. \\\n * {@link KnownSkuSize} can be used interchangeably with SkuSize,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Extra small** \\\n * **Small** \\\n * **Medium** \\\n * **Large**\n */\nexport type SkuSize = string;\n\n/** Known values of {@link State} that the service accepts. */\nexport enum KnownState {\n  Creating = \"Creating\",\n  Unavailable = \"Unavailable\",\n  Running = \"Running\",\n  Deleting = \"Deleting\",\n  Deleted = \"Deleted\",\n  Stopping = \"Stopping\",\n  Stopped = \"Stopped\",\n  Starting = \"Starting\",\n  Updating = \"Updating\"\n}\n\n/**\n * Defines values for State. \\\n * {@link KnownState} can be used interchangeably with State,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **Unavailable** \\\n * **Running** \\\n * **Deleting** \\\n * **Deleted** \\\n * **Stopping** \\\n * **Stopped** \\\n * **Starting** \\\n * **Updating**\n */\nexport type State = string;\n\n/** Known values of {@link ResourceProvisioningState} that the service accepts. */\nexport enum KnownResourceProvisioningState {\n  Running = \"Running\",\n  Creating = \"Creating\",\n  Deleting = \"Deleting\",\n  Succeeded = \"Succeeded\",\n  Failed = \"Failed\",\n  Moving = \"Moving\",\n  Canceled = \"Canceled\"\n}\n\n/**\n * Defines values for ResourceProvisioningState. \\\n * {@link KnownResourceProvisioningState} can be used interchangeably with ResourceProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Running** \\\n * **Creating** \\\n * **Deleting** \\\n * **Succeeded** \\\n * **Failed** \\\n * **Moving** \\\n * **Canceled**\n */\nexport type ResourceProvisioningState = string;\n\n/** Known values of {@link LanguageExtensionName} that the service accepts. */\nexport enum KnownLanguageExtensionName {\n  Python = \"PYTHON\",\n  R = \"R\"\n}\n\n/**\n * Defines values for LanguageExtensionName. \\\n * {@link KnownLanguageExtensionName} can be used interchangeably with LanguageExtensionName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **PYTHON** \\\n * **R**\n */\nexport type LanguageExtensionName = string;\n\n/** Known values of {@link CreatedByType} that the service accepts. */\nexport enum KnownCreatedByType {\n  User = \"User\",\n  Application = \"Application\",\n  ManagedIdentity = \"ManagedIdentity\",\n  Key = \"Key\"\n}\n\n/**\n * Defines values for CreatedByType. \\\n * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **User** \\\n * **Application** \\\n * **ManagedIdentity** \\\n * **Key**\n */\nexport type CreatedByType = string;\n\n/** Known values of {@link AzureScaleType} that the service accepts. */\nexport enum KnownAzureScaleType {\n  Automatic = \"automatic\",\n  Manual = \"manual\",\n  None = \"none\"\n}\n\n/**\n * Defines values for AzureScaleType. \\\n * {@link KnownAzureScaleType} can be used interchangeably with AzureScaleType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **automatic** \\\n * **manual** \\\n * **none**\n */\nexport type AzureScaleType = string;\n\n/** Known values of {@link DefaultPrincipalsModificationKind} that the service accepts. */\nexport enum KnownDefaultPrincipalsModificationKind {\n  Union = \"Union\",\n  Replace = \"Replace\",\n  None = \"None\"\n}\n\n/**\n * Defines values for DefaultPrincipalsModificationKind. \\\n * {@link KnownDefaultPrincipalsModificationKind} can be used interchangeably with DefaultPrincipalsModificationKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Union** \\\n * **Replace** \\\n * **None**\n */\nexport type DefaultPrincipalsModificationKind = string;\n\n/** Known values of {@link Kind} that the service accepts. */\nexport enum KnownKind {\n  ReadWrite = \"ReadWrite\",\n  ReadOnlyFollowing = \"ReadOnlyFollowing\"\n}\n\n/**\n * Defines values for Kind. \\\n * {@link KnownKind} can be used interchangeably with Kind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **ReadWrite** \\\n * **ReadOnlyFollowing**\n */\nexport type Kind = string;\n\n/** Known values of {@link DataConnectionKind} that the service accepts. */\nexport enum KnownDataConnectionKind {\n  EventHub = \"EventHub\",\n  EventGrid = \"EventGrid\",\n  IotHub = \"IotHub\"\n}\n\n/**\n * Defines values for DataConnectionKind. \\\n * {@link KnownDataConnectionKind} can be used interchangeably with DataConnectionKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **EventHub** \\\n * **EventGrid** \\\n * **IotHub**\n */\nexport type DataConnectionKind = string;\n\n/** Known values of {@link ClusterPrincipalRole} that the service accepts. */\nexport enum KnownClusterPrincipalRole {\n  AllDatabasesAdmin = \"AllDatabasesAdmin\",\n  AllDatabasesViewer = \"AllDatabasesViewer\"\n}\n\n/**\n * Defines values for ClusterPrincipalRole. \\\n * {@link KnownClusterPrincipalRole} can be used interchangeably with ClusterPrincipalRole,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AllDatabasesAdmin** \\\n * **AllDatabasesViewer**\n */\nexport type ClusterPrincipalRole = string;\n\n/** Known values of {@link PrincipalType} that the service accepts. */\nexport enum KnownPrincipalType {\n  App = \"App\",\n  Group = \"Group\",\n  User = \"User\"\n}\n\n/**\n * Defines values for PrincipalType. \\\n * {@link KnownPrincipalType} can be used interchangeably with PrincipalType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **App** \\\n * **Group** \\\n * **User**\n */\nexport type PrincipalType = string;\n\n/** Known values of {@link DatabasePrincipalRole} that the service accepts. */\nexport enum KnownDatabasePrincipalRole {\n  Admin = \"Admin\",\n  Ingestor = \"Ingestor\",\n  Monitor = \"Monitor\",\n  User = \"User\",\n  UnrestrictedViewer = \"UnrestrictedViewer\",\n  Viewer = \"Viewer\"\n}\n\n/**\n * Defines values for DatabasePrincipalRole. \\\n * {@link KnownDatabasePrincipalRole} can be used interchangeably with DatabasePrincipalRole,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Admin** \\\n * **Ingestor** \\\n * **Monitor** \\\n * **User** \\\n * **UnrestrictedViewer** \\\n * **Viewer**\n */\nexport type DatabasePrincipalRole = string;\n\n/** Known values of {@link DataFlowComputeType} that the service accepts. */\nexport enum KnownDataFlowComputeType {\n  General = \"General\",\n  MemoryOptimized = \"MemoryOptimized\",\n  ComputeOptimized = \"ComputeOptimized\"\n}\n\n/**\n * Defines values for DataFlowComputeType. \\\n * {@link KnownDataFlowComputeType} can be used interchangeably with DataFlowComputeType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **General** \\\n * **MemoryOptimized** \\\n * **ComputeOptimized**\n */\nexport type DataFlowComputeType = string;\n\n/** Known values of {@link IntegrationRuntimeSsisCatalogPricingTier} that the service accepts. */\nexport enum KnownIntegrationRuntimeSsisCatalogPricingTier {\n  Basic = \"Basic\",\n  Standard = \"Standard\",\n  Premium = \"Premium\",\n  PremiumRS = \"PremiumRS\"\n}\n\n/**\n * Defines values for IntegrationRuntimeSsisCatalogPricingTier. \\\n * {@link KnownIntegrationRuntimeSsisCatalogPricingTier} can be used interchangeably with IntegrationRuntimeSsisCatalogPricingTier,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Basic** \\\n * **Standard** \\\n * **Premium** \\\n * **PremiumRS**\n */\nexport type IntegrationRuntimeSsisCatalogPricingTier = string;\n\n/** Known values of {@link IntegrationRuntimeLicenseType} that the service accepts. */\nexport enum KnownIntegrationRuntimeLicenseType {\n  BasePrice = \"BasePrice\",\n  LicenseIncluded = \"LicenseIncluded\"\n}\n\n/**\n * Defines values for IntegrationRuntimeLicenseType. \\\n * {@link KnownIntegrationRuntimeLicenseType} can be used interchangeably with IntegrationRuntimeLicenseType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **BasePrice** \\\n * **LicenseIncluded**\n */\nexport type IntegrationRuntimeLicenseType = string;\n\n/** Known values of {@link IntegrationRuntimeEntityReferenceType} that the service accepts. */\nexport enum KnownIntegrationRuntimeEntityReferenceType {\n  IntegrationRuntimeReference = \"IntegrationRuntimeReference\",\n  LinkedServiceReference = \"LinkedServiceReference\"\n}\n\n/**\n * Defines values for IntegrationRuntimeEntityReferenceType. \\\n * {@link KnownIntegrationRuntimeEntityReferenceType} can be used interchangeably with IntegrationRuntimeEntityReferenceType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **IntegrationRuntimeReference** \\\n * **LinkedServiceReference**\n */\nexport type IntegrationRuntimeEntityReferenceType = string;\n\n/** Known values of {@link IntegrationRuntimeEdition} that the service accepts. */\nexport enum KnownIntegrationRuntimeEdition {\n  Standard = \"Standard\",\n  Enterprise = \"Enterprise\"\n}\n\n/**\n * Defines values for IntegrationRuntimeEdition. \\\n * {@link KnownIntegrationRuntimeEdition} can be used interchangeably with IntegrationRuntimeEdition,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Standard** \\\n * **Enterprise**\n */\nexport type IntegrationRuntimeEdition = string;\n\n/** Known values of {@link ManagedIntegrationRuntimeNodeStatus} that the service accepts. */\nexport enum KnownManagedIntegrationRuntimeNodeStatus {\n  Starting = \"Starting\",\n  Available = \"Available\",\n  Recycling = \"Recycling\",\n  Unavailable = \"Unavailable\"\n}\n\n/**\n * Defines values for ManagedIntegrationRuntimeNodeStatus. \\\n * {@link KnownManagedIntegrationRuntimeNodeStatus} can be used interchangeably with ManagedIntegrationRuntimeNodeStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Starting** \\\n * **Available** \\\n * **Recycling** \\\n * **Unavailable**\n */\nexport type ManagedIntegrationRuntimeNodeStatus = string;\n\n/** Known values of {@link IntegrationRuntimeInternalChannelEncryptionMode} that the service accepts. */\nexport enum KnownIntegrationRuntimeInternalChannelEncryptionMode {\n  NotSet = \"NotSet\",\n  SslEncrypted = \"SslEncrypted\",\n  NotEncrypted = \"NotEncrypted\"\n}\n\n/**\n * Defines values for IntegrationRuntimeInternalChannelEncryptionMode. \\\n * {@link KnownIntegrationRuntimeInternalChannelEncryptionMode} can be used interchangeably with IntegrationRuntimeInternalChannelEncryptionMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotSet** \\\n * **SslEncrypted** \\\n * **NotEncrypted**\n */\nexport type IntegrationRuntimeInternalChannelEncryptionMode = string;\n\n/** Known values of {@link PrincipalsModificationKind} that the service accepts. */\nexport enum KnownPrincipalsModificationKind {\n  Union = \"Union\",\n  Replace = \"Replace\",\n  None = \"None\"\n}\n\n/**\n * Defines values for PrincipalsModificationKind. \\\n * {@link KnownPrincipalsModificationKind} can be used interchangeably with PrincipalsModificationKind,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Union** \\\n * **Replace** \\\n * **None**\n */\nexport type PrincipalsModificationKind = string;\n\n/** Known values of {@link EventHubDataFormat} that the service accepts. */\nexport enum KnownEventHubDataFormat {\n  Multijson = \"MULTIJSON\",\n  Json = \"JSON\",\n  CSV = \"CSV\",\n  TSV = \"TSV\",\n  Scsv = \"SCSV\",\n  Sohsv = \"SOHSV\",\n  PSV = \"PSV\",\n  TXT = \"TXT\",\n  RAW = \"RAW\",\n  Singlejson = \"SINGLEJSON\",\n  Avro = \"AVRO\",\n  Tsve = \"TSVE\",\n  Parquet = \"PARQUET\",\n  ORC = \"ORC\",\n  Apacheavro = \"APACHEAVRO\",\n  W3Clogfile = \"W3CLOGFILE\"\n}\n\n/**\n * Defines values for EventHubDataFormat. \\\n * {@link KnownEventHubDataFormat} can be used interchangeably with EventHubDataFormat,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **MULTIJSON** \\\n * **JSON** \\\n * **CSV** \\\n * **TSV** \\\n * **SCSV** \\\n * **SOHSV** \\\n * **PSV** \\\n * **TXT** \\\n * **RAW** \\\n * **SINGLEJSON** \\\n * **AVRO** \\\n * **TSVE** \\\n * **PARQUET** \\\n * **ORC** \\\n * **APACHEAVRO** \\\n * **W3CLOGFILE**\n */\nexport type EventHubDataFormat = string;\n\n/** Known values of {@link Compression} that the service accepts. */\nexport enum KnownCompression {\n  None = \"None\",\n  GZip = \"GZip\"\n}\n\n/**\n * Defines values for Compression. \\\n * {@link KnownCompression} can be used interchangeably with Compression,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **GZip**\n */\nexport type Compression = string;\n\n/** Known values of {@link IotHubDataFormat} that the service accepts. */\nexport enum KnownIotHubDataFormat {\n  Multijson = \"MULTIJSON\",\n  Json = \"JSON\",\n  CSV = \"CSV\",\n  TSV = \"TSV\",\n  Scsv = \"SCSV\",\n  Sohsv = \"SOHSV\",\n  PSV = \"PSV\",\n  TXT = \"TXT\",\n  RAW = \"RAW\",\n  Singlejson = \"SINGLEJSON\",\n  Avro = \"AVRO\",\n  Tsve = \"TSVE\",\n  Parquet = \"PARQUET\",\n  ORC = \"ORC\",\n  Apacheavro = \"APACHEAVRO\",\n  W3Clogfile = \"W3CLOGFILE\"\n}\n\n/**\n * Defines values for IotHubDataFormat. \\\n * {@link KnownIotHubDataFormat} can be used interchangeably with IotHubDataFormat,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **MULTIJSON** \\\n * **JSON** \\\n * **CSV** \\\n * **TSV** \\\n * **SCSV** \\\n * **SOHSV** \\\n * **PSV** \\\n * **TXT** \\\n * **RAW** \\\n * **SINGLEJSON** \\\n * **AVRO** \\\n * **TSVE** \\\n * **PARQUET** \\\n * **ORC** \\\n * **APACHEAVRO** \\\n * **W3CLOGFILE**\n */\nexport type IotHubDataFormat = string;\n\n/** Known values of {@link EventGridDataFormat} that the service accepts. */\nexport enum KnownEventGridDataFormat {\n  Multijson = \"MULTIJSON\",\n  Json = \"JSON\",\n  CSV = \"CSV\",\n  TSV = \"TSV\",\n  Scsv = \"SCSV\",\n  Sohsv = \"SOHSV\",\n  PSV = \"PSV\",\n  TXT = \"TXT\",\n  RAW = \"RAW\",\n  Singlejson = \"SINGLEJSON\",\n  Avro = \"AVRO\",\n  Tsve = \"TSVE\",\n  Parquet = \"PARQUET\",\n  ORC = \"ORC\",\n  Apacheavro = \"APACHEAVRO\",\n  W3Clogfile = \"W3CLOGFILE\"\n}\n\n/**\n * Defines values for EventGridDataFormat. \\\n * {@link KnownEventGridDataFormat} can be used interchangeably with EventGridDataFormat,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **MULTIJSON** \\\n * **JSON** \\\n * **CSV** \\\n * **TSV** \\\n * **SCSV** \\\n * **SOHSV** \\\n * **PSV** \\\n * **TXT** \\\n * **RAW** \\\n * **SINGLEJSON** \\\n * **AVRO** \\\n * **TSVE** \\\n * **PARQUET** \\\n * **ORC** \\\n * **APACHEAVRO** \\\n * **W3CLOGFILE**\n */\nexport type EventGridDataFormat = string;\n\n/** Known values of {@link BlobStorageEventType} that the service accepts. */\nexport enum KnownBlobStorageEventType {\n  MicrosoftStorageBlobCreated = \"Microsoft.Storage.BlobCreated\",\n  MicrosoftStorageBlobRenamed = \"Microsoft.Storage.BlobRenamed\"\n}\n\n/**\n * Defines values for BlobStorageEventType. \\\n * {@link KnownBlobStorageEventType} can be used interchangeably with BlobStorageEventType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Microsoft.Storage.BlobCreated** \\\n * **Microsoft.Storage.BlobRenamed**\n */\nexport type BlobStorageEventType = string;\n/** Defines values for GeoBackupPolicyState. */\nexport type GeoBackupPolicyState = \"Disabled\" | \"Enabled\";\n/** Defines values for RestorePointType. */\nexport type RestorePointType = \"CONTINUOUS\" | \"DISCRETE\";\n/** Defines values for ReplicationRole. */\nexport type ReplicationRole =\n  | \"Primary\"\n  | \"Secondary\"\n  | \"NonReadableSecondary\"\n  | \"Source\"\n  | \"Copy\";\n/** Defines values for TransparentDataEncryptionStatus. */\nexport type TransparentDataEncryptionStatus = \"Enabled\" | \"Disabled\";\n/** Defines values for BlobAuditingPolicyState. */\nexport type BlobAuditingPolicyState = \"Enabled\" | \"Disabled\";\n/** Defines values for SensitivityLabelRank. */\nexport type SensitivityLabelRank =\n  | \"None\"\n  | \"Low\"\n  | \"Medium\"\n  | \"High\"\n  | \"Critical\";\n/** Defines values for SensitivityLabelUpdateKind. */\nexport type SensitivityLabelUpdateKind = \"set\" | \"remove\";\n/** Defines values for RecommendedSensitivityLabelUpdateKind. */\nexport type RecommendedSensitivityLabelUpdateKind = \"enable\" | \"disable\";\n/** Defines values for SensitivityLabelSource. */\nexport type SensitivityLabelSource = \"current\" | \"recommended\";\n/** Defines values for SecurityAlertPolicyState. */\nexport type SecurityAlertPolicyState = \"New\" | \"Enabled\" | \"Disabled\";\n/** Defines values for VulnerabilityAssessmentPolicyBaselineName. */\nexport type VulnerabilityAssessmentPolicyBaselineName = \"master\" | \"default\";\n/** Defines values for DataMaskingState. */\nexport type DataMaskingState = \"Disabled\" | \"Enabled\";\n/** Defines values for DataMaskingRuleState. */\nexport type DataMaskingRuleState = \"Disabled\" | \"Enabled\";\n/** Defines values for DataMaskingFunction. */\nexport type DataMaskingFunction =\n  | \"Default\"\n  | \"CCN\"\n  | \"Email\"\n  | \"Number\"\n  | \"SSN\"\n  | \"Text\";\n/** Defines values for ResourceIdentityType. */\nexport type ResourceIdentityType =\n  | \"None\"\n  | \"SystemAssigned\"\n  | \"SystemAssigned,UserAssigned\";\n/** Defines values for Type. */\nexport type Type =\n  | \"Microsoft.Synapse/workspaces/kustoPools/databases\"\n  | \"Microsoft.Synapse/workspaces/kustoPools/attachedDatabaseConfigurations\";\n/** Defines values for QueryAggregationFunction. */\nexport type QueryAggregationFunction = \"min\" | \"max\" | \"avg\" | \"sum\";\n/** Defines values for QueryExecutionType. */\nexport type QueryExecutionType =\n  | \"any\"\n  | \"regular\"\n  | \"irregular\"\n  | \"aborted\"\n  | \"exception\";\n/** Defines values for QueryObservedMetricType. */\nexport type QueryObservedMetricType =\n  | \"cpu\"\n  | \"io\"\n  | \"logio\"\n  | \"duration\"\n  | \"executionCount\";\n/** Defines values for QueryMetricUnit. */\nexport type QueryMetricUnit = \"percentage\" | \"KB\" | \"microseconds\";\n\n/** Optional parameters. */\nexport interface AzureADOnlyAuthenticationsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type AzureADOnlyAuthenticationsGetResponse = AzureADOnlyAuthentication;\n\n/** Optional parameters. */\nexport interface AzureADOnlyAuthenticationsCreateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the create operation. */\nexport type AzureADOnlyAuthenticationsCreateResponse = AzureADOnlyAuthentication;\n\n/** Optional parameters. */\nexport interface AzureADOnlyAuthenticationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type AzureADOnlyAuthenticationsListResponse = AzureADOnlyAuthenticationListResult;\n\n/** Optional parameters. */\nexport interface AzureADOnlyAuthenticationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type AzureADOnlyAuthenticationsListNextResponse = AzureADOnlyAuthenticationListResult;\n\n/** Optional parameters. */\nexport interface OperationsCheckNameAvailabilityOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkNameAvailability operation. */\nexport type OperationsCheckNameAvailabilityResponse = CheckNameAvailabilityResponse;\n\n/** Optional parameters. */\nexport interface OperationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type OperationsListResponse = AvailableRpOperation[];\n\n/** Optional parameters. */\nexport interface OperationsGetLocationHeaderResultOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface OperationsGetAzureAsyncHeaderResultOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAzureAsyncHeaderResult operation. */\nexport type OperationsGetAzureAsyncHeaderResultResponse = OperationResource;\n\n/** Optional parameters. */\nexport interface IpFirewallRulesListByWorkspaceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByWorkspace operation. */\nexport type IpFirewallRulesListByWorkspaceResponse = IpFirewallRuleInfoListResult;\n\n/** Optional parameters. */\nexport interface IpFirewallRulesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type IpFirewallRulesCreateOrUpdateResponse = IpFirewallRuleInfo;\n\n/** Optional parameters. */\nexport interface IpFirewallRulesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the delete operation. */\nexport type IpFirewallRulesDeleteResponse = Record<string, unknown>;\n\n/** Optional parameters. */\nexport interface IpFirewallRulesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type IpFirewallRulesGetResponse = IpFirewallRuleInfo;\n\n/** Optional parameters. */\nexport interface IpFirewallRulesReplaceAllOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the replaceAll operation. */\nexport type IpFirewallRulesReplaceAllResponse = ReplaceAllFirewallRulesOperationResponse;\n\n/** Optional parameters. */\nexport interface IpFirewallRulesListByWorkspaceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByWorkspaceNext operation. */\nexport type IpFirewallRulesListByWorkspaceNextResponse = IpFirewallRuleInfoListResult;\n\n/** Optional parameters. */\nexport interface KeysListByWorkspaceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByWorkspace operation. */\nexport type KeysListByWorkspaceResponse = KeyInfoListResult;\n\n/** Optional parameters. */\nexport interface KeysGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type KeysGetResponse = Key;\n\n/** Optional parameters. */\nexport interface KeysCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type KeysCreateOrUpdateResponse = Key;\n\n/** Optional parameters. */\nexport interface KeysDeleteOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the delete operation. */\nexport type KeysDeleteResponse = Key;\n\n/** Optional parameters. */\nexport interface KeysListByWorkspaceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByWorkspaceNext operation. */\nexport type KeysListByWorkspaceNextResponse = KeyInfoListResult;\n\n/** Optional parameters. */\nexport interface PrivateEndpointConnectionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type PrivateEndpointConnectionsGetResponse = PrivateEndpointConnection;\n\n/** Optional parameters. */\nexport interface PrivateEndpointConnectionsCreateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the create operation. */\nexport type PrivateEndpointConnectionsCreateResponse = PrivateEndpointConnection;\n\n/** Optional parameters. */\nexport interface PrivateEndpointConnectionsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface PrivateEndpointConnectionsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type PrivateEndpointConnectionsListResponse = PrivateEndpointConnectionList;\n\n/** Optional parameters. */\nexport interface PrivateEndpointConnectionsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type PrivateEndpointConnectionsListNextResponse = PrivateEndpointConnectionList;\n\n/** Optional parameters. */\nexport interface PrivateLinkResourcesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type PrivateLinkResourcesListResponse = PrivateLinkResourceListResult;\n\n/** Optional parameters. */\nexport interface PrivateLinkResourcesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type PrivateLinkResourcesGetResponse = PrivateLinkResource;\n\n/** Optional parameters. */\nexport interface PrivateLinkResourcesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type PrivateLinkResourcesListNextResponse = PrivateLinkResourceListResult;\n\n/** Optional parameters. */\nexport interface PrivateLinkHubPrivateLinkResourcesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type PrivateLinkHubPrivateLinkResourcesListResponse = PrivateLinkResourceListResult;\n\n/** Optional parameters. */\nexport interface PrivateLinkHubPrivateLinkResourcesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type PrivateLinkHubPrivateLinkResourcesGetResponse = PrivateLinkResource;\n\n/** Optional parameters. */\nexport interface PrivateLinkHubPrivateLinkResourcesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type PrivateLinkHubPrivateLinkResourcesListNextResponse = PrivateLinkResourceListResult;\n\n/** Optional parameters. */\nexport interface PrivateLinkHubsListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type PrivateLinkHubsListByResourceGroupResponse = PrivateLinkHubInfoListResult;\n\n/** Optional parameters. */\nexport interface PrivateLinkHubsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type PrivateLinkHubsGetResponse = PrivateLinkHub;\n\n/** Optional parameters. */\nexport interface PrivateLinkHubsUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type PrivateLinkHubsUpdateResponse = PrivateLinkHub;\n\n/** Optional parameters. */\nexport interface PrivateLinkHubsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type PrivateLinkHubsCreateOrUpdateResponse = PrivateLinkHub;\n\n/** Optional parameters. */\nexport interface PrivateLinkHubsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface PrivateLinkHubsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type PrivateLinkHubsListResponse = PrivateLinkHubInfoListResult;\n\n/** Optional parameters. */\nexport interface PrivateLinkHubsListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type PrivateLinkHubsListByResourceGroupNextResponse = PrivateLinkHubInfoListResult;\n\n/** Optional parameters. */\nexport interface PrivateLinkHubsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type PrivateLinkHubsListNextResponse = PrivateLinkHubInfoListResult;\n\n/** Optional parameters. */\nexport interface PrivateEndpointConnectionsPrivateLinkHubListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type PrivateEndpointConnectionsPrivateLinkHubListResponse = PrivateEndpointConnectionForPrivateLinkHubResourceCollectionResponse;\n\n/** Optional parameters. */\nexport interface PrivateEndpointConnectionsPrivateLinkHubGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type PrivateEndpointConnectionsPrivateLinkHubGetResponse = PrivateEndpointConnectionForPrivateLinkHub;\n\n/** Optional parameters. */\nexport interface PrivateEndpointConnectionsPrivateLinkHubListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type PrivateEndpointConnectionsPrivateLinkHubListNextResponse = PrivateEndpointConnectionForPrivateLinkHubResourceCollectionResponse;\n\n/** Optional parameters. */\nexport interface SqlPoolsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SqlPoolsGetResponse = SqlPool;\n\n/** Optional parameters. */\nexport interface SqlPoolsUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type SqlPoolsUpdateResponse = SqlPool;\n\n/** Optional parameters. */\nexport interface SqlPoolsCreateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the create operation. */\nexport type SqlPoolsCreateResponse = SqlPool;\n\n/** Optional parameters. */\nexport interface SqlPoolsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the delete operation. */\nexport type SqlPoolsDeleteResponse = Record<string, unknown>;\n\n/** Optional parameters. */\nexport interface SqlPoolsListByWorkspaceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByWorkspace operation. */\nexport type SqlPoolsListByWorkspaceResponse = SqlPoolInfoListResult;\n\n/** Optional parameters. */\nexport interface SqlPoolsPauseOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the pause operation. */\nexport type SqlPoolsPauseResponse = Record<string, unknown>;\n\n/** Optional parameters. */\nexport interface SqlPoolsResumeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the resume operation. */\nexport type SqlPoolsResumeResponse = Record<string, unknown>;\n\n/** Optional parameters. */\nexport interface SqlPoolsRenameOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface SqlPoolsListByWorkspaceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByWorkspaceNext operation. */\nexport type SqlPoolsListByWorkspaceNextResponse = SqlPoolInfoListResult;\n\n/** Optional parameters. */\nexport interface SqlPoolMetadataSyncConfigsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SqlPoolMetadataSyncConfigsGetResponse = MetadataSyncConfig;\n\n/** Optional parameters. */\nexport interface SqlPoolMetadataSyncConfigsCreateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the create operation. */\nexport type SqlPoolMetadataSyncConfigsCreateResponse = MetadataSyncConfig;\n\n/** Optional parameters. */\nexport interface SqlPoolOperationResultsGetLocationHeaderResultOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getLocationHeaderResult operation. */\nexport type SqlPoolOperationResultsGetLocationHeaderResultResponse = Record<\n  string,\n  unknown\n>;\n\n/** Optional parameters. */\nexport interface SqlPoolGeoBackupPoliciesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type SqlPoolGeoBackupPoliciesListResponse = GeoBackupPolicyListResult;\n\n/** Optional parameters. */\nexport interface SqlPoolGeoBackupPoliciesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type SqlPoolGeoBackupPoliciesCreateOrUpdateResponse = GeoBackupPolicy;\n\n/** Optional parameters. */\nexport interface SqlPoolGeoBackupPoliciesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SqlPoolGeoBackupPoliciesGetResponse = GeoBackupPolicy;\n\n/** Optional parameters. */\nexport interface SqlPoolDataWarehouseUserActivitiesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SqlPoolDataWarehouseUserActivitiesGetResponse = DataWarehouseUserActivities;\n\n/** Optional parameters. */\nexport interface SqlPoolRestorePointsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type SqlPoolRestorePointsListResponse = RestorePointListResult;\n\n/** Optional parameters. */\nexport interface SqlPoolRestorePointsCreateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the create operation. */\nexport type SqlPoolRestorePointsCreateResponse = RestorePoint;\n\n/** Optional parameters. */\nexport interface SqlPoolRestorePointsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SqlPoolRestorePointsGetResponse = RestorePoint;\n\n/** Optional parameters. */\nexport interface SqlPoolRestorePointsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface SqlPoolRestorePointsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type SqlPoolRestorePointsListNextResponse = RestorePointListResult;\n\n/** Optional parameters. */\nexport interface SqlPoolReplicationLinksListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type SqlPoolReplicationLinksListResponse = ReplicationLinkListResult;\n\n/** Optional parameters. */\nexport interface SqlPoolReplicationLinksGetByNameOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getByName operation. */\nexport type SqlPoolReplicationLinksGetByNameResponse = ReplicationLink;\n\n/** Optional parameters. */\nexport interface SqlPoolReplicationLinksListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type SqlPoolReplicationLinksListNextResponse = ReplicationLinkListResult;\n\n/** Optional parameters. */\nexport interface SqlPoolMaintenanceWindowsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SqlPoolMaintenanceWindowsGetResponse = MaintenanceWindows;\n\n/** Optional parameters. */\nexport interface SqlPoolMaintenanceWindowsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface SqlPoolMaintenanceWindowOptionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SqlPoolMaintenanceWindowOptionsGetResponse = MaintenanceWindowOptions;\n\n/** Optional parameters. */\nexport interface SqlPoolTransparentDataEncryptionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SqlPoolTransparentDataEncryptionsGetResponse = TransparentDataEncryption;\n\n/** Optional parameters. */\nexport interface SqlPoolTransparentDataEncryptionsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type SqlPoolTransparentDataEncryptionsCreateOrUpdateResponse = TransparentDataEncryption;\n\n/** Optional parameters. */\nexport interface SqlPoolTransparentDataEncryptionsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type SqlPoolTransparentDataEncryptionsListResponse = TransparentDataEncryptionListResult;\n\n/** Optional parameters. */\nexport interface SqlPoolTransparentDataEncryptionsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type SqlPoolTransparentDataEncryptionsListNextResponse = TransparentDataEncryptionListResult;\n\n/** Optional parameters. */\nexport interface SqlPoolBlobAuditingPoliciesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SqlPoolBlobAuditingPoliciesGetResponse = SqlPoolBlobAuditingPolicy;\n\n/** Optional parameters. */\nexport interface SqlPoolBlobAuditingPoliciesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type SqlPoolBlobAuditingPoliciesCreateOrUpdateResponse = SqlPoolBlobAuditingPolicy;\n\n/** Optional parameters. */\nexport interface SqlPoolBlobAuditingPoliciesListBySqlPoolOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySqlPool operation. */\nexport type SqlPoolBlobAuditingPoliciesListBySqlPoolResponse = SqlPoolBlobAuditingPolicyListResult;\n\n/** Optional parameters. */\nexport interface SqlPoolBlobAuditingPoliciesListBySqlPoolNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySqlPoolNext operation. */\nexport type SqlPoolBlobAuditingPoliciesListBySqlPoolNextResponse = SqlPoolBlobAuditingPolicyListResult;\n\n/** Optional parameters. */\nexport interface SqlPoolOperationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type SqlPoolOperationsListResponse = SqlPoolBlobAuditingPolicySqlPoolOperationListResult;\n\n/** Optional parameters. */\nexport interface SqlPoolOperationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type SqlPoolOperationsListNextResponse = SqlPoolBlobAuditingPolicySqlPoolOperationListResult;\n\n/** Optional parameters. */\nexport interface SqlPoolUsagesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type SqlPoolUsagesListResponse = SqlPoolUsageListResult;\n\n/** Optional parameters. */\nexport interface SqlPoolUsagesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type SqlPoolUsagesListNextResponse = SqlPoolUsageListResult;\n\n/** Optional parameters. */\nexport interface SqlPoolSensitivityLabelsListCurrentOptionalParams\n  extends coreClient.OperationOptions {\n  /** An OData filter expression that filters elements in the collection. */\n  filter?: string;\n}\n\n/** Contains response data for the listCurrent operation. */\nexport type SqlPoolSensitivityLabelsListCurrentResponse = SensitivityLabelListResult;\n\n/** Optional parameters. */\nexport interface SqlPoolSensitivityLabelsUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface SqlPoolSensitivityLabelsListRecommendedOptionalParams\n  extends coreClient.OperationOptions {\n  /** An OData filter expression that filters elements in the collection. */\n  filter?: string;\n  /** Specifies whether to include disabled recommendations or not. */\n  includeDisabledRecommendations?: boolean;\n  /** An OData query option to indicate how many elements to skip in the collection. */\n  skipToken?: string;\n}\n\n/** Contains response data for the listRecommended operation. */\nexport type SqlPoolSensitivityLabelsListRecommendedResponse = SensitivityLabelListResult;\n\n/** Optional parameters. */\nexport interface SqlPoolSensitivityLabelsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type SqlPoolSensitivityLabelsCreateOrUpdateResponse = SensitivityLabel;\n\n/** Optional parameters. */\nexport interface SqlPoolSensitivityLabelsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface SqlPoolSensitivityLabelsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SqlPoolSensitivityLabelsGetResponse = SensitivityLabel;\n\n/** Optional parameters. */\nexport interface SqlPoolSensitivityLabelsEnableRecommendationOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface SqlPoolSensitivityLabelsDisableRecommendationOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface SqlPoolSensitivityLabelsListCurrentNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** An OData filter expression that filters elements in the collection. */\n  filter?: string;\n}\n\n/** Contains response data for the listCurrentNext operation. */\nexport type SqlPoolSensitivityLabelsListCurrentNextResponse = SensitivityLabelListResult;\n\n/** Optional parameters. */\nexport interface SqlPoolSensitivityLabelsListRecommendedNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** An OData filter expression that filters elements in the collection. */\n  filter?: string;\n  /** Specifies whether to include disabled recommendations or not. */\n  includeDisabledRecommendations?: boolean;\n  /** An OData query option to indicate how many elements to skip in the collection. */\n  skipToken?: string;\n}\n\n/** Contains response data for the listRecommendedNext operation. */\nexport type SqlPoolSensitivityLabelsListRecommendedNextResponse = SensitivityLabelListResult;\n\n/** Optional parameters. */\nexport interface SqlPoolRecommendedSensitivityLabelsUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface SqlPoolSchemasListOptionalParams\n  extends coreClient.OperationOptions {\n  /** An OData filter expression that filters elements in the collection. */\n  filter?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type SqlPoolSchemasListResponse = SqlPoolSchemaListResult;\n\n/** Optional parameters. */\nexport interface SqlPoolSchemasGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SqlPoolSchemasGetResponse = SqlPoolSchema;\n\n/** Optional parameters. */\nexport interface SqlPoolSchemasListNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** An OData filter expression that filters elements in the collection. */\n  filter?: string;\n}\n\n/** Contains response data for the listNext operation. */\nexport type SqlPoolSchemasListNextResponse = SqlPoolSchemaListResult;\n\n/** Optional parameters. */\nexport interface SqlPoolTablesListBySchemaOptionalParams\n  extends coreClient.OperationOptions {\n  /** An OData filter expression that filters elements in the collection. */\n  filter?: string;\n}\n\n/** Contains response data for the listBySchema operation. */\nexport type SqlPoolTablesListBySchemaResponse = SqlPoolTableListResult;\n\n/** Optional parameters. */\nexport interface SqlPoolTablesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SqlPoolTablesGetResponse = SqlPoolTable;\n\n/** Optional parameters. */\nexport interface SqlPoolTablesListBySchemaNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** An OData filter expression that filters elements in the collection. */\n  filter?: string;\n}\n\n/** Contains response data for the listBySchemaNext operation. */\nexport type SqlPoolTablesListBySchemaNextResponse = SqlPoolTableListResult;\n\n/** Optional parameters. */\nexport interface SqlPoolTableColumnsListByTableNameOptionalParams\n  extends coreClient.OperationOptions {\n  /** An OData filter expression that filters elements in the collection. */\n  filter?: string;\n}\n\n/** Contains response data for the listByTableName operation. */\nexport type SqlPoolTableColumnsListByTableNameResponse = SqlPoolColumnListResult;\n\n/** Optional parameters. */\nexport interface SqlPoolTableColumnsListByTableNameNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** An OData filter expression that filters elements in the collection. */\n  filter?: string;\n}\n\n/** Contains response data for the listByTableNameNext operation. */\nexport type SqlPoolTableColumnsListByTableNameNextResponse = SqlPoolColumnListResult;\n\n/** Optional parameters. */\nexport interface SqlPoolConnectionPoliciesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SqlPoolConnectionPoliciesGetResponse = SqlPoolConnectionPolicy;\n\n/** Optional parameters. */\nexport interface SqlPoolVulnerabilityAssessmentsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type SqlPoolVulnerabilityAssessmentsListResponse = SqlPoolVulnerabilityAssessmentListResult;\n\n/** Optional parameters. */\nexport interface SqlPoolVulnerabilityAssessmentsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SqlPoolVulnerabilityAssessmentsGetResponse = SqlPoolVulnerabilityAssessment;\n\n/** Optional parameters. */\nexport interface SqlPoolVulnerabilityAssessmentsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type SqlPoolVulnerabilityAssessmentsCreateOrUpdateResponse = SqlPoolVulnerabilityAssessment;\n\n/** Optional parameters. */\nexport interface SqlPoolVulnerabilityAssessmentsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface SqlPoolVulnerabilityAssessmentsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type SqlPoolVulnerabilityAssessmentsListNextResponse = SqlPoolVulnerabilityAssessmentListResult;\n\n/** Optional parameters. */\nexport interface SqlPoolVulnerabilityAssessmentScansListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type SqlPoolVulnerabilityAssessmentScansListResponse = VulnerabilityAssessmentScanRecordListResult;\n\n/** Optional parameters. */\nexport interface SqlPoolVulnerabilityAssessmentScansInitiateScanOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface SqlPoolVulnerabilityAssessmentScansExportOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the export operation. */\nexport type SqlPoolVulnerabilityAssessmentScansExportResponse = SqlPoolVulnerabilityAssessmentScansExport;\n\n/** Optional parameters. */\nexport interface SqlPoolVulnerabilityAssessmentScansGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SqlPoolVulnerabilityAssessmentScansGetResponse = VulnerabilityAssessmentScanRecord;\n\n/** Optional parameters. */\nexport interface SqlPoolVulnerabilityAssessmentScansListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type SqlPoolVulnerabilityAssessmentScansListNextResponse = VulnerabilityAssessmentScanRecordListResult;\n\n/** Optional parameters. */\nexport interface SqlPoolSecurityAlertPoliciesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type SqlPoolSecurityAlertPoliciesListResponse = ListSqlPoolSecurityAlertPolicies;\n\n/** Optional parameters. */\nexport interface SqlPoolSecurityAlertPoliciesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SqlPoolSecurityAlertPoliciesGetResponse = SqlPoolSecurityAlertPolicy;\n\n/** Optional parameters. */\nexport interface SqlPoolSecurityAlertPoliciesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type SqlPoolSecurityAlertPoliciesCreateOrUpdateResponse = SqlPoolSecurityAlertPolicy;\n\n/** Optional parameters. */\nexport interface SqlPoolSecurityAlertPoliciesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type SqlPoolSecurityAlertPoliciesListNextResponse = ListSqlPoolSecurityAlertPolicies;\n\n/** Optional parameters. */\nexport interface SqlPoolVulnerabilityAssessmentRuleBaselinesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type SqlPoolVulnerabilityAssessmentRuleBaselinesCreateOrUpdateResponse = SqlPoolVulnerabilityAssessmentRuleBaseline;\n\n/** Optional parameters. */\nexport interface SqlPoolVulnerabilityAssessmentRuleBaselinesDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface SqlPoolVulnerabilityAssessmentRuleBaselinesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SqlPoolVulnerabilityAssessmentRuleBaselinesGetResponse = SqlPoolVulnerabilityAssessmentRuleBaseline;\n\n/** Optional parameters. */\nexport interface ExtendedSqlPoolBlobAuditingPoliciesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ExtendedSqlPoolBlobAuditingPoliciesGetResponse = ExtendedSqlPoolBlobAuditingPolicy;\n\n/** Optional parameters. */\nexport interface ExtendedSqlPoolBlobAuditingPoliciesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ExtendedSqlPoolBlobAuditingPoliciesCreateOrUpdateResponse = ExtendedSqlPoolBlobAuditingPolicy;\n\n/** Optional parameters. */\nexport interface ExtendedSqlPoolBlobAuditingPoliciesListBySqlPoolOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySqlPool operation. */\nexport type ExtendedSqlPoolBlobAuditingPoliciesListBySqlPoolResponse = ExtendedSqlPoolBlobAuditingPolicyListResult;\n\n/** Optional parameters. */\nexport interface ExtendedSqlPoolBlobAuditingPoliciesListBySqlPoolNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySqlPoolNext operation. */\nexport type ExtendedSqlPoolBlobAuditingPoliciesListBySqlPoolNextResponse = ExtendedSqlPoolBlobAuditingPolicyListResult;\n\n/** Optional parameters. */\nexport interface DataMaskingPoliciesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type DataMaskingPoliciesCreateOrUpdateResponse = DataMaskingPolicy;\n\n/** Optional parameters. */\nexport interface DataMaskingPoliciesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DataMaskingPoliciesGetResponse = DataMaskingPolicy;\n\n/** Optional parameters. */\nexport interface DataMaskingRulesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type DataMaskingRulesCreateOrUpdateResponse = DataMaskingRule;\n\n/** Optional parameters. */\nexport interface DataMaskingRulesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DataMaskingRulesGetResponse = DataMaskingRule;\n\n/** Optional parameters. */\nexport interface DataMaskingRulesListBySqlPoolOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySqlPool operation. */\nexport type DataMaskingRulesListBySqlPoolResponse = DataMaskingRuleListResult;\n\n/** Optional parameters. */\nexport interface SqlPoolColumnsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SqlPoolColumnsGetResponse = SqlPoolColumn;\n\n/** Optional parameters. */\nexport interface SqlPoolWorkloadGroupGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SqlPoolWorkloadGroupGetResponse = WorkloadGroup;\n\n/** Optional parameters. */\nexport interface SqlPoolWorkloadGroupCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type SqlPoolWorkloadGroupCreateOrUpdateResponse = WorkloadGroup;\n\n/** Optional parameters. */\nexport interface SqlPoolWorkloadGroupDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface SqlPoolWorkloadGroupListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type SqlPoolWorkloadGroupListResponse = WorkloadGroupListResult;\n\n/** Optional parameters. */\nexport interface SqlPoolWorkloadGroupListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type SqlPoolWorkloadGroupListNextResponse = WorkloadGroupListResult;\n\n/** Optional parameters. */\nexport interface SqlPoolWorkloadClassifierGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SqlPoolWorkloadClassifierGetResponse = WorkloadClassifier;\n\n/** Optional parameters. */\nexport interface SqlPoolWorkloadClassifierCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type SqlPoolWorkloadClassifierCreateOrUpdateResponse = WorkloadClassifier;\n\n/** Optional parameters. */\nexport interface SqlPoolWorkloadClassifierDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface SqlPoolWorkloadClassifierListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type SqlPoolWorkloadClassifierListResponse = WorkloadClassifierListResult;\n\n/** Optional parameters. */\nexport interface SqlPoolWorkloadClassifierListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type SqlPoolWorkloadClassifierListNextResponse = WorkloadClassifierListResult;\n\n/** Optional parameters. */\nexport interface WorkspaceManagedSqlServerBlobAuditingPoliciesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type WorkspaceManagedSqlServerBlobAuditingPoliciesGetResponse = ServerBlobAuditingPolicy;\n\n/** Optional parameters. */\nexport interface WorkspaceManagedSqlServerBlobAuditingPoliciesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type WorkspaceManagedSqlServerBlobAuditingPoliciesCreateOrUpdateResponse = ServerBlobAuditingPolicy;\n\n/** Optional parameters. */\nexport interface WorkspaceManagedSqlServerBlobAuditingPoliciesListByWorkspaceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByWorkspace operation. */\nexport type WorkspaceManagedSqlServerBlobAuditingPoliciesListByWorkspaceResponse = ServerBlobAuditingPolicyListResult;\n\n/** Optional parameters. */\nexport interface WorkspaceManagedSqlServerBlobAuditingPoliciesListByWorkspaceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByWorkspaceNext operation. */\nexport type WorkspaceManagedSqlServerBlobAuditingPoliciesListByWorkspaceNextResponse = ServerBlobAuditingPolicyListResult;\n\n/** Optional parameters. */\nexport interface WorkspaceManagedSqlServerExtendedBlobAuditingPoliciesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type WorkspaceManagedSqlServerExtendedBlobAuditingPoliciesGetResponse = ExtendedServerBlobAuditingPolicy;\n\n/** Optional parameters. */\nexport interface WorkspaceManagedSqlServerExtendedBlobAuditingPoliciesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type WorkspaceManagedSqlServerExtendedBlobAuditingPoliciesCreateOrUpdateResponse = ExtendedServerBlobAuditingPolicy;\n\n/** Optional parameters. */\nexport interface WorkspaceManagedSqlServerExtendedBlobAuditingPoliciesListByWorkspaceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByWorkspace operation. */\nexport type WorkspaceManagedSqlServerExtendedBlobAuditingPoliciesListByWorkspaceResponse = ExtendedServerBlobAuditingPolicyListResult;\n\n/** Optional parameters. */\nexport interface WorkspaceManagedSqlServerExtendedBlobAuditingPoliciesListByWorkspaceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByWorkspaceNext operation. */\nexport type WorkspaceManagedSqlServerExtendedBlobAuditingPoliciesListByWorkspaceNextResponse = ExtendedServerBlobAuditingPolicyListResult;\n\n/** Optional parameters. */\nexport interface WorkspaceManagedSqlServerSecurityAlertPolicyGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type WorkspaceManagedSqlServerSecurityAlertPolicyGetResponse = ServerSecurityAlertPolicy;\n\n/** Optional parameters. */\nexport interface WorkspaceManagedSqlServerSecurityAlertPolicyCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type WorkspaceManagedSqlServerSecurityAlertPolicyCreateOrUpdateResponse = ServerSecurityAlertPolicy;\n\n/** Optional parameters. */\nexport interface WorkspaceManagedSqlServerSecurityAlertPolicyListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type WorkspaceManagedSqlServerSecurityAlertPolicyListResponse = ServerSecurityAlertPolicyListResult;\n\n/** Optional parameters. */\nexport interface WorkspaceManagedSqlServerSecurityAlertPolicyListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type WorkspaceManagedSqlServerSecurityAlertPolicyListNextResponse = ServerSecurityAlertPolicyListResult;\n\n/** Optional parameters. */\nexport interface WorkspaceManagedSqlServerVulnerabilityAssessmentsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type WorkspaceManagedSqlServerVulnerabilityAssessmentsGetResponse = ServerVulnerabilityAssessment;\n\n/** Optional parameters. */\nexport interface WorkspaceManagedSqlServerVulnerabilityAssessmentsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type WorkspaceManagedSqlServerVulnerabilityAssessmentsCreateOrUpdateResponse = ServerVulnerabilityAssessment;\n\n/** Optional parameters. */\nexport interface WorkspaceManagedSqlServerVulnerabilityAssessmentsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface WorkspaceManagedSqlServerVulnerabilityAssessmentsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type WorkspaceManagedSqlServerVulnerabilityAssessmentsListResponse = ServerVulnerabilityAssessmentListResult;\n\n/** Optional parameters. */\nexport interface WorkspaceManagedSqlServerVulnerabilityAssessmentsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type WorkspaceManagedSqlServerVulnerabilityAssessmentsListNextResponse = ServerVulnerabilityAssessmentListResult;\n\n/** Optional parameters. */\nexport interface WorkspaceManagedSqlServerEncryptionProtectorGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type WorkspaceManagedSqlServerEncryptionProtectorGetResponse = EncryptionProtector;\n\n/** Optional parameters. */\nexport interface WorkspaceManagedSqlServerEncryptionProtectorCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type WorkspaceManagedSqlServerEncryptionProtectorCreateOrUpdateResponse = EncryptionProtector;\n\n/** Optional parameters. */\nexport interface WorkspaceManagedSqlServerEncryptionProtectorListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type WorkspaceManagedSqlServerEncryptionProtectorListResponse = EncryptionProtectorListResult;\n\n/** Optional parameters. */\nexport interface WorkspaceManagedSqlServerEncryptionProtectorRevalidateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface WorkspaceManagedSqlServerEncryptionProtectorListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type WorkspaceManagedSqlServerEncryptionProtectorListNextResponse = EncryptionProtectorListResult;\n\n/** Optional parameters. */\nexport interface WorkspaceManagedSqlServerUsagesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type WorkspaceManagedSqlServerUsagesListResponse = ServerUsageListResult;\n\n/** Optional parameters. */\nexport interface WorkspaceManagedSqlServerUsagesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type WorkspaceManagedSqlServerUsagesListNextResponse = ServerUsageListResult;\n\n/** Optional parameters. */\nexport interface WorkspaceManagedSqlServerRecoverableSqlPoolsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type WorkspaceManagedSqlServerRecoverableSqlPoolsListResponse = RecoverableSqlPoolListResult;\n\n/** Optional parameters. */\nexport interface WorkspaceManagedSqlServerRecoverableSqlPoolsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type WorkspaceManagedSqlServerRecoverableSqlPoolsGetResponse = RecoverableSqlPool;\n\n/** Optional parameters. */\nexport interface WorkspaceManagedSqlServerRecoverableSqlPoolsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type WorkspaceManagedSqlServerRecoverableSqlPoolsListNextResponse = RecoverableSqlPoolListResult;\n\n/** Optional parameters. */\nexport interface WorkspacesListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type WorkspacesListByResourceGroupResponse = WorkspaceInfoListResult;\n\n/** Optional parameters. */\nexport interface WorkspacesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type WorkspacesGetResponse = Workspace;\n\n/** Optional parameters. */\nexport interface WorkspacesUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type WorkspacesUpdateResponse = Workspace;\n\n/** Optional parameters. */\nexport interface WorkspacesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type WorkspacesCreateOrUpdateResponse = Workspace;\n\n/** Optional parameters. */\nexport interface WorkspacesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the delete operation. */\nexport type WorkspacesDeleteResponse = Record<string, unknown>;\n\n/** Optional parameters. */\nexport interface WorkspacesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type WorkspacesListResponse = WorkspaceInfoListResult;\n\n/** Optional parameters. */\nexport interface WorkspacesListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type WorkspacesListByResourceGroupNextResponse = WorkspaceInfoListResult;\n\n/** Optional parameters. */\nexport interface WorkspacesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type WorkspacesListNextResponse = WorkspaceInfoListResult;\n\n/** Optional parameters. */\nexport interface WorkspaceAadAdminsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type WorkspaceAadAdminsGetResponse = WorkspaceAadAdminInfo;\n\n/** Optional parameters. */\nexport interface WorkspaceAadAdminsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type WorkspaceAadAdminsCreateOrUpdateResponse = WorkspaceAadAdminInfo;\n\n/** Optional parameters. */\nexport interface WorkspaceAadAdminsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface WorkspaceSqlAadAdminsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type WorkspaceSqlAadAdminsGetResponse = WorkspaceAadAdminInfo;\n\n/** Optional parameters. */\nexport interface WorkspaceSqlAadAdminsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type WorkspaceSqlAadAdminsCreateOrUpdateResponse = WorkspaceAadAdminInfo;\n\n/** Optional parameters. */\nexport interface WorkspaceSqlAadAdminsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface WorkspaceManagedIdentitySqlControlSettingsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type WorkspaceManagedIdentitySqlControlSettingsGetResponse = ManagedIdentitySqlControlSettingsModel;\n\n/** Optional parameters. */\nexport interface WorkspaceManagedIdentitySqlControlSettingsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type WorkspaceManagedIdentitySqlControlSettingsCreateOrUpdateResponse = ManagedIdentitySqlControlSettingsModel;\n\n/** Optional parameters. */\nexport interface RestorableDroppedSqlPoolsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type RestorableDroppedSqlPoolsGetResponse = RestorableDroppedSqlPool;\n\n/** Optional parameters. */\nexport interface RestorableDroppedSqlPoolsListByWorkspaceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByWorkspace operation. */\nexport type RestorableDroppedSqlPoolsListByWorkspaceResponse = RestorableDroppedSqlPoolListResult;\n\n/** Optional parameters. */\nexport interface BigDataPoolsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type BigDataPoolsGetResponse = BigDataPoolResourceInfo;\n\n/** Optional parameters. */\nexport interface BigDataPoolsUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type BigDataPoolsUpdateResponse = BigDataPoolResourceInfo;\n\n/** Optional parameters. */\nexport interface BigDataPoolsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Whether to stop any running jobs in the Big Data pool */\n  force?: boolean;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type BigDataPoolsCreateOrUpdateResponse = BigDataPoolResourceInfo;\n\n/** Optional parameters. */\nexport interface BigDataPoolsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the delete operation. */\nexport type BigDataPoolsDeleteResponse = Record<string, unknown>;\n\n/** Optional parameters. */\nexport interface BigDataPoolsListByWorkspaceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByWorkspace operation. */\nexport type BigDataPoolsListByWorkspaceResponse = BigDataPoolResourceInfoListResult;\n\n/** Optional parameters. */\nexport interface BigDataPoolsListByWorkspaceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByWorkspaceNext operation. */\nexport type BigDataPoolsListByWorkspaceNextResponse = BigDataPoolResourceInfoListResult;\n\n/** Optional parameters. */\nexport interface LibraryGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type LibraryGetResponse = LibraryResource;\n\n/** Optional parameters. */\nexport interface LibrariesListByWorkspaceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByWorkspace operation. */\nexport type LibrariesListByWorkspaceResponse = LibraryListResponse;\n\n/** Optional parameters. */\nexport interface LibrariesListByWorkspaceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByWorkspaceNext operation. */\nexport type LibrariesListByWorkspaceNextResponse = LibraryListResponse;\n\n/** Optional parameters. */\nexport interface IntegrationRuntimesUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type IntegrationRuntimesUpdateResponse = IntegrationRuntimeResource;\n\n/** Optional parameters. */\nexport interface IntegrationRuntimesGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** ETag of the integration runtime entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned. */\n  ifNoneMatch?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type IntegrationRuntimesGetResponse = IntegrationRuntimeResource;\n\n/** Optional parameters. */\nexport interface IntegrationRuntimesCreateOptionalParams\n  extends coreClient.OperationOptions {\n  /** ETag of the integration runtime entity. Should only be specified for update, for which it should match existing entity or can be * for unconditional update. */\n  ifMatch?: string;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the create operation. */\nexport type IntegrationRuntimesCreateResponse = IntegrationRuntimeResource;\n\n/** Optional parameters. */\nexport interface IntegrationRuntimesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface IntegrationRuntimesUpgradeOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface IntegrationRuntimesListByWorkspaceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByWorkspace operation. */\nexport type IntegrationRuntimesListByWorkspaceResponse = IntegrationRuntimeListResponse;\n\n/** Optional parameters. */\nexport interface IntegrationRuntimesStartOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the start operation. */\nexport type IntegrationRuntimesStartResponse = IntegrationRuntimeStatusResponse;\n\n/** Optional parameters. */\nexport interface IntegrationRuntimesStopOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface IntegrationRuntimesListOutboundNetworkDependenciesEndpointsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listOutboundNetworkDependenciesEndpoints operation. */\nexport type IntegrationRuntimesListOutboundNetworkDependenciesEndpointsResponse = IntegrationRuntimeOutboundNetworkDependenciesEndpointsResponse;\n\n/** Optional parameters. */\nexport interface IntegrationRuntimesEnableInteractiveQueryOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface IntegrationRuntimesDisableInteractiveQueryOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface IntegrationRuntimesListByWorkspaceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByWorkspaceNext operation. */\nexport type IntegrationRuntimesListByWorkspaceNextResponse = IntegrationRuntimeListResponse;\n\n/** Optional parameters. */\nexport interface IntegrationRuntimeNodeIpAddressGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type IntegrationRuntimeNodeIpAddressGetResponse = IntegrationRuntimeNodeIpAddress;\n\n/** Optional parameters. */\nexport interface IntegrationRuntimeObjectMetadataListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The parameters for getting a SSIS object metadata. */\n  getMetadataRequest?: GetSsisObjectMetadataRequest;\n}\n\n/** Contains response data for the list operation. */\nexport type IntegrationRuntimeObjectMetadataListResponse = SsisObjectMetadataListResponse;\n\n/** Optional parameters. */\nexport interface IntegrationRuntimeObjectMetadataRefreshOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the refresh operation. */\nexport type IntegrationRuntimeObjectMetadataRefreshResponse = SsisObjectMetadataStatusResponse;\n\n/** Optional parameters. */\nexport interface IntegrationRuntimeNodesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type IntegrationRuntimeNodesGetResponse = SelfHostedIntegrationRuntimeNode;\n\n/** Optional parameters. */\nexport interface IntegrationRuntimeNodesUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type IntegrationRuntimeNodesUpdateResponse = SelfHostedIntegrationRuntimeNode;\n\n/** Optional parameters. */\nexport interface IntegrationRuntimeNodesDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface IntegrationRuntimeCredentialsSyncOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface IntegrationRuntimeConnectionInfosGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type IntegrationRuntimeConnectionInfosGetResponse = IntegrationRuntimeConnectionInfo;\n\n/** Optional parameters. */\nexport interface IntegrationRuntimeAuthKeysRegenerateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the regenerate operation. */\nexport type IntegrationRuntimeAuthKeysRegenerateResponse = IntegrationRuntimeAuthKeys;\n\n/** Optional parameters. */\nexport interface IntegrationRuntimeAuthKeysListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type IntegrationRuntimeAuthKeysListResponse = IntegrationRuntimeAuthKeys;\n\n/** Optional parameters. */\nexport interface IntegrationRuntimeMonitoringDataListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type IntegrationRuntimeMonitoringDataListResponse = IntegrationRuntimeMonitoringData;\n\n/** Optional parameters. */\nexport interface IntegrationRuntimeStatusGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type IntegrationRuntimeStatusGetResponse = IntegrationRuntimeStatusResponse;\n\n/** Optional parameters. */\nexport interface SparkConfigurationGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SparkConfigurationGetResponse = SparkConfigurationResource;\n\n/** Optional parameters. */\nexport interface SparkConfigurationsListByWorkspaceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByWorkspace operation. */\nexport type SparkConfigurationsListByWorkspaceResponse = SparkConfigurationListResponse;\n\n/** Optional parameters. */\nexport interface SparkConfigurationsListByWorkspaceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByWorkspaceNext operation. */\nexport type SparkConfigurationsListByWorkspaceNextResponse = SparkConfigurationListResponse;\n\n/** Optional parameters. */\nexport interface KustoOperationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type KustoOperationsListResponse = OperationListResult;\n\n/** Optional parameters. */\nexport interface KustoOperationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type KustoOperationsListNextResponse = OperationListResult;\n\n/** Optional parameters. */\nexport interface KustoPoolsListSkusOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listSkus operation. */\nexport type KustoPoolsListSkusResponse = SkuDescriptionList;\n\n/** Optional parameters. */\nexport interface KustoPoolsCheckNameAvailabilityOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkNameAvailability operation. */\nexport type KustoPoolsCheckNameAvailabilityResponse = CheckNameResult;\n\n/** Optional parameters. */\nexport interface KustoPoolsListByWorkspaceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByWorkspace operation. */\nexport type KustoPoolsListByWorkspaceResponse = KustoPoolListResult;\n\n/** Optional parameters. */\nexport interface KustoPoolsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type KustoPoolsGetResponse = KustoPool;\n\n/** Optional parameters. */\nexport interface KustoPoolsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Set to '*' to allow a new Kusto Pool to be created, but to prevent updating an existing Kusto Pool. Other values will result in a 412 Pre-condition Failed response. */\n  ifNoneMatch?: string;\n  /** The ETag of the Kusto Pool. Omit this value to always overwrite the current Kusto Pool. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes. */\n  ifMatch?: string;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type KustoPoolsCreateOrUpdateResponse = KustoPool;\n\n/** Optional parameters. */\nexport interface KustoPoolsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** The ETag of the Kusto Pool. Omit this value to always overwrite the current Kusto Pool. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes. */\n  ifMatch?: string;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type KustoPoolsUpdateResponse = KustoPool;\n\n/** Optional parameters. */\nexport interface KustoPoolsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface KustoPoolsStopOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface KustoPoolsStartOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface KustoPoolsListSkusByResourceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listSkusByResource operation. */\nexport type KustoPoolsListSkusByResourceResponse = ListResourceSkusResult;\n\n/** Optional parameters. */\nexport interface KustoPoolsListLanguageExtensionsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listLanguageExtensions operation. */\nexport type KustoPoolsListLanguageExtensionsResponse = LanguageExtensionsList;\n\n/** Optional parameters. */\nexport interface KustoPoolsAddLanguageExtensionsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface KustoPoolsRemoveLanguageExtensionsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface KustoPoolsListFollowerDatabasesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listFollowerDatabases operation. */\nexport type KustoPoolsListFollowerDatabasesResponse = FollowerDatabaseListResult;\n\n/** Optional parameters. */\nexport interface KustoPoolsDetachFollowerDatabasesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface KustoPoolChildResourceCheckNameAvailabilityOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkNameAvailability operation. */\nexport type KustoPoolChildResourceCheckNameAvailabilityResponse = CheckNameResult;\n\n/** Optional parameters. */\nexport interface KustoPoolAttachedDatabaseConfigurationsListByKustoPoolOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByKustoPool operation. */\nexport type KustoPoolAttachedDatabaseConfigurationsListByKustoPoolResponse = AttachedDatabaseConfigurationListResult;\n\n/** Optional parameters. */\nexport interface KustoPoolAttachedDatabaseConfigurationsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type KustoPoolAttachedDatabaseConfigurationsGetResponse = AttachedDatabaseConfiguration;\n\n/** Optional parameters. */\nexport interface KustoPoolAttachedDatabaseConfigurationsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type KustoPoolAttachedDatabaseConfigurationsCreateOrUpdateResponse = AttachedDatabaseConfiguration;\n\n/** Optional parameters. */\nexport interface KustoPoolAttachedDatabaseConfigurationsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface KustoPoolDatabasesListByKustoPoolOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByKustoPool operation. */\nexport type KustoPoolDatabasesListByKustoPoolResponse = DatabaseListResult;\n\n/** Optional parameters. */\nexport interface KustoPoolDatabasesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type KustoPoolDatabasesGetResponse = DatabaseUnion;\n\n/** Optional parameters. */\nexport interface KustoPoolDatabasesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type KustoPoolDatabasesCreateOrUpdateResponse = DatabaseUnion;\n\n/** Optional parameters. */\nexport interface KustoPoolDatabasesUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type KustoPoolDatabasesUpdateResponse = DatabaseUnion;\n\n/** Optional parameters. */\nexport interface KustoPoolDatabasesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface KustoPoolDataConnectionsCheckNameAvailabilityOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkNameAvailability operation. */\nexport type KustoPoolDataConnectionsCheckNameAvailabilityResponse = CheckNameResult;\n\n/** Optional parameters. */\nexport interface KustoPoolDataConnectionsDataConnectionValidationOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the dataConnectionValidation operation. */\nexport type KustoPoolDataConnectionsDataConnectionValidationResponse = DataConnectionValidationListResult;\n\n/** Optional parameters. */\nexport interface KustoPoolDataConnectionsListByDatabaseOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabase operation. */\nexport type KustoPoolDataConnectionsListByDatabaseResponse = DataConnectionListResult;\n\n/** Optional parameters. */\nexport interface KustoPoolDataConnectionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type KustoPoolDataConnectionsGetResponse = DataConnectionUnion;\n\n/** Optional parameters. */\nexport interface KustoPoolDataConnectionsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type KustoPoolDataConnectionsCreateOrUpdateResponse = DataConnectionUnion;\n\n/** Optional parameters. */\nexport interface KustoPoolDataConnectionsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type KustoPoolDataConnectionsUpdateResponse = DataConnectionUnion;\n\n/** Optional parameters. */\nexport interface KustoPoolDataConnectionsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface KustoPoolPrincipalAssignmentsCheckNameAvailabilityOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkNameAvailability operation. */\nexport type KustoPoolPrincipalAssignmentsCheckNameAvailabilityResponse = CheckNameResult;\n\n/** Optional parameters. */\nexport interface KustoPoolPrincipalAssignmentsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type KustoPoolPrincipalAssignmentsListResponse = ClusterPrincipalAssignmentListResult;\n\n/** Optional parameters. */\nexport interface KustoPoolPrincipalAssignmentsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type KustoPoolPrincipalAssignmentsGetResponse = ClusterPrincipalAssignment;\n\n/** Optional parameters. */\nexport interface KustoPoolPrincipalAssignmentsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type KustoPoolPrincipalAssignmentsCreateOrUpdateResponse = ClusterPrincipalAssignment;\n\n/** Optional parameters. */\nexport interface KustoPoolPrincipalAssignmentsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface KustoPoolDatabasePrincipalAssignmentsCheckNameAvailabilityOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkNameAvailability operation. */\nexport type KustoPoolDatabasePrincipalAssignmentsCheckNameAvailabilityResponse = CheckNameResult;\n\n/** Optional parameters. */\nexport interface KustoPoolDatabasePrincipalAssignmentsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type KustoPoolDatabasePrincipalAssignmentsListResponse = DatabasePrincipalAssignmentListResult;\n\n/** Optional parameters. */\nexport interface KustoPoolDatabasePrincipalAssignmentsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type KustoPoolDatabasePrincipalAssignmentsGetResponse = DatabasePrincipalAssignment;\n\n/** Optional parameters. */\nexport interface KustoPoolDatabasePrincipalAssignmentsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type KustoPoolDatabasePrincipalAssignmentsCreateOrUpdateResponse = DatabasePrincipalAssignment;\n\n/** Optional parameters. */\nexport interface KustoPoolDatabasePrincipalAssignmentsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface SynapseManagementClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** server parameter */\n  $host?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const Resource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Resource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorDetail\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorDetail: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorDetail\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorDetail\"\n            }\n          }\n        }\n      },\n      additionalInfo: {\n        serializedName: \"additionalInfo\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorAdditionalInfo\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorAdditionalInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorAdditionalInfo\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      info: {\n        serializedName: \"info\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const AzureADOnlyAuthenticationListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AzureADOnlyAuthenticationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"AzureADOnlyAuthentication\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CheckNameAvailabilityRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CheckNameAvailabilityRequest\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CheckNameAvailabilityResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CheckNameAvailabilityResponse\",\n    modelProperties: {\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      available: {\n        serializedName: \"available\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IpFirewallRuleInfoListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IpFirewallRuleInfoListResult\",\n    modelProperties: {\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"IpFirewallRuleInfo\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const IpFirewallRuleProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IpFirewallRuleProperties\",\n    modelProperties: {\n      endIpAddress: {\n        serializedName: \"endIpAddress\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      startIpAddress: {\n        serializedName: \"startIpAddress\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReplaceAllIpFirewallRulesRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReplaceAllIpFirewallRulesRequest\",\n    modelProperties: {\n      ipFirewallRules: {\n        serializedName: \"ipFirewallRules\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Composite\", className: \"IpFirewallRuleProperties\" }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ReplaceAllFirewallRulesOperationResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReplaceAllFirewallRulesOperationResponse\",\n    modelProperties: {\n      operationId: {\n        serializedName: \"operationId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const KeyInfoListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KeyInfoListResult\",\n    modelProperties: {\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Key\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const AvailableRpOperation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AvailableRpOperation\",\n    modelProperties: {\n      display: {\n        serializedName: \"display\",\n        type: {\n          name: \"Composite\",\n          className: \"AvailableRpOperationDisplayInfo\"\n        }\n      },\n      isDataAction: {\n        serializedName: \"isDataAction\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      origin: {\n        serializedName: \"origin\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serviceSpecification: {\n        serializedName: \"properties.serviceSpecification\",\n        type: {\n          name: \"Composite\",\n          className: \"OperationMetaServiceSpecification\"\n        }\n      }\n    }\n  }\n};\n\nexport const AvailableRpOperationDisplayInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AvailableRpOperationDisplayInfo\",\n    modelProperties: {\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"resource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provider: {\n        serializedName: \"provider\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"operation\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationMetaServiceSpecification: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationMetaServiceSpecification\",\n    modelProperties: {\n      metricSpecifications: {\n        serializedName: \"metricSpecifications\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"OperationMetaMetricSpecification\"\n            }\n          }\n        }\n      },\n      logSpecifications: {\n        serializedName: \"logSpecifications\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"OperationMetaLogSpecification\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const OperationMetaMetricSpecification: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationMetaMetricSpecification\",\n    modelProperties: {\n      sourceMdmNamespace: {\n        serializedName: \"sourceMdmNamespace\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      aggregationType: {\n        serializedName: \"aggregationType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayDescription: {\n        serializedName: \"displayDescription\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceMdmAccount: {\n        serializedName: \"sourceMdmAccount\",\n        type: {\n          name: \"String\"\n        }\n      },\n      enableRegionalMdmAccount: {\n        serializedName: \"enableRegionalMdmAccount\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dimensions: {\n        serializedName: \"dimensions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"OperationMetaMetricDimensionSpecification\"\n            }\n          }\n        }\n      },\n      supportsInstanceLevelAggregation: {\n        serializedName: \"supportsInstanceLevelAggregation\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      metricFilterPattern: {\n        serializedName: \"metricFilterPattern\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationMetaMetricDimensionSpecification: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationMetaMetricDimensionSpecification\",\n    modelProperties: {\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      toBeExportedForShoebox: {\n        serializedName: \"toBeExportedForShoebox\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationMetaLogSpecification: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationMetaLogSpecification\",\n    modelProperties: {\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobDuration: {\n        serializedName: \"blobDuration\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationResource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorDetail\"\n        }\n      },\n      startTime: {\n        serializedName: \"startTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endTime: {\n        serializedName: \"endTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      percentComplete: {\n        serializedName: \"percentComplete\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpointConnectionProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpointConnectionProperties\",\n    modelProperties: {\n      privateEndpoint: {\n        serializedName: \"privateEndpoint\",\n        type: {\n          name: \"Composite\",\n          className: \"PrivateEndpoint\"\n        }\n      },\n      privateLinkServiceConnectionState: {\n        serializedName: \"privateLinkServiceConnectionState\",\n        type: {\n          name: \"Composite\",\n          className: \"PrivateLinkServiceConnectionState\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpoint: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpoint\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateLinkServiceConnectionState: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateLinkServiceConnectionState\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      actionsRequired: {\n        serializedName: \"actionsRequired\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpointConnectionList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpointConnectionList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PrivateEndpointConnection\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateLinkResourceListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateLinkResourceListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PrivateLinkResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateLinkResourceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateLinkResourceProperties\",\n    modelProperties: {\n      groupId: {\n        serializedName: \"groupId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      requiredMembers: {\n        serializedName: \"requiredMembers\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      requiredZoneNames: {\n        serializedName: \"requiredZoneNames\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateLinkHubInfoListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateLinkHubInfoListResult\",\n    modelProperties: {\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PrivateLinkHub\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpointConnectionForPrivateLinkHubBasic: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpointConnectionForPrivateLinkHubBasic\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      privateEndpoint: {\n        serializedName: \"properties.privateEndpoint\",\n        type: {\n          name: \"Composite\",\n          className: \"PrivateEndpoint\"\n        }\n      },\n      privateLinkServiceConnectionState: {\n        serializedName: \"properties.privateLinkServiceConnectionState\",\n        type: {\n          name: \"Composite\",\n          className: \"PrivateLinkServiceConnectionState\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateLinkHubPatchInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateLinkHubPatchInfo\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpointConnectionForPrivateLinkHubResourceCollectionResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PrivateEndpointConnectionForPrivateLinkHubResourceCollectionResponse\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PrivateEndpointConnectionForPrivateLinkHub\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpointConnectionForPrivateLinkHubBasicAutoGenerated: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpointConnectionForPrivateLinkHubBasicAutoGenerated\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"PrivateEndpointConnectionProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const Sku: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Sku\",\n    modelProperties: {\n      tier: {\n        serializedName: \"tier\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      capacity: {\n        serializedName: \"capacity\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const SqlPoolPatchInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SqlPoolPatchInfo\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      maxSizeBytes: {\n        serializedName: \"properties.maxSizeBytes\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      collation: {\n        defaultValue: \"\",\n        serializedName: \"properties.collation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceDatabaseId: {\n        serializedName: \"properties.sourceDatabaseId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      recoverableDatabaseId: {\n        serializedName: \"properties.recoverableDatabaseId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"properties.status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      restorePointInTime: {\n        serializedName: \"properties.restorePointInTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      createMode: {\n        serializedName: \"properties.createMode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      creationDate: {\n        serializedName: \"properties.creationDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      storageAccountType: {\n        defaultValue: \"GRS\",\n        serializedName: \"properties.storageAccountType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceDatabaseDeletionDate: {\n        serializedName: \"properties.sourceDatabaseDeletionDate\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const SqlPoolInfoListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SqlPoolInfoListResult\",\n    modelProperties: {\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SqlPool\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceMoveDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceMoveDefinition\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GeoBackupPolicyListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GeoBackupPolicyListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"GeoBackupPolicy\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RestorePointListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RestorePointListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RestorePoint\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CreateSqlPoolRestorePointDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CreateSqlPoolRestorePointDefinition\",\n    modelProperties: {\n      restorePointLabel: {\n        serializedName: \"restorePointLabel\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReplicationLinkListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReplicationLinkListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReplicationLink\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MaintenanceWindowTimeRange: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MaintenanceWindowTimeRange\",\n    modelProperties: {\n      dayOfWeek: {\n        serializedName: \"dayOfWeek\",\n        type: {\n          name: \"String\"\n        }\n      },\n      startTime: {\n        serializedName: \"startTime\",\n        type: {\n          name: \"String\"\n        }\n      },\n      duration: {\n        serializedName: \"duration\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TransparentDataEncryptionListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TransparentDataEncryptionListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TransparentDataEncryption\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SqlPoolBlobAuditingPolicySqlPoolOperationListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SqlPoolBlobAuditingPolicySqlPoolOperationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SqlPoolOperation\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SqlPoolUsageListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SqlPoolUsageListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SqlPoolUsage\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SqlPoolUsage: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SqlPoolUsage\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceName: {\n        serializedName: \"resourceName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      currentValue: {\n        serializedName: \"currentValue\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      limit: {\n        serializedName: \"limit\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nextResetTime: {\n        serializedName: \"nextResetTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const SensitivityLabelListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SensitivityLabelListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SensitivityLabel\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SensitivityLabelUpdateList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SensitivityLabelUpdateList\",\n    modelProperties: {\n      operations: {\n        serializedName: \"operations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SensitivityLabelUpdate\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RecommendedSensitivityLabelUpdateList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RecommendedSensitivityLabelUpdateList\",\n    modelProperties: {\n      operations: {\n        serializedName: \"operations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RecommendedSensitivityLabelUpdate\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SqlPoolSchemaListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SqlPoolSchemaListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SqlPoolSchema\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SqlPoolTableListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SqlPoolTableListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SqlPoolTable\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SqlPoolColumnListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SqlPoolColumnListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SqlPoolColumn\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SqlPoolVulnerabilityAssessmentListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SqlPoolVulnerabilityAssessmentListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SqlPoolVulnerabilityAssessment\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VulnerabilityAssessmentRecurringScansProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VulnerabilityAssessmentRecurringScansProperties\",\n    modelProperties: {\n      isEnabled: {\n        serializedName: \"isEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      emailSubscriptionAdmins: {\n        defaultValue: true,\n        serializedName: \"emailSubscriptionAdmins\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      emails: {\n        serializedName: \"emails\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const VulnerabilityAssessmentScanRecordListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VulnerabilityAssessmentScanRecordListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VulnerabilityAssessmentScanRecord\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VulnerabilityAssessmentScanError: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VulnerabilityAssessmentScanError\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ListSqlPoolSecurityAlertPolicies: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ListSqlPoolSecurityAlertPolicies\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SqlPoolSecurityAlertPolicy\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SqlPoolVulnerabilityAssessmentRuleBaselineItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SqlPoolVulnerabilityAssessmentRuleBaselineItem\",\n    modelProperties: {\n      result: {\n        serializedName: \"result\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ExtendedSqlPoolBlobAuditingPolicyListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExtendedSqlPoolBlobAuditingPolicyListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ExtendedSqlPoolBlobAuditingPolicy\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DataMaskingRuleListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataMaskingRuleListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DataMaskingRule\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SqlPoolBlobAuditingPolicyListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SqlPoolBlobAuditingPolicyListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SqlPoolBlobAuditingPolicy\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const WorkloadGroupListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WorkloadGroupListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"WorkloadGroup\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const WorkloadClassifierListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WorkloadClassifierListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"WorkloadClassifier\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServerBlobAuditingPolicyListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServerBlobAuditingPolicyListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ServerBlobAuditingPolicy\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExtendedServerBlobAuditingPolicyListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExtendedServerBlobAuditingPolicyListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ExtendedServerBlobAuditingPolicy\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServerSecurityAlertPolicyListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServerSecurityAlertPolicyListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ServerSecurityAlertPolicy\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServerVulnerabilityAssessmentListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServerVulnerabilityAssessmentListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ServerVulnerabilityAssessment\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EncryptionProtectorListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EncryptionProtectorListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"EncryptionProtector\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServerUsageListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServerUsageListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ServerUsage\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServerUsage: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServerUsage\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceName: {\n        serializedName: \"resourceName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      currentValue: {\n        serializedName: \"currentValue\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      limit: {\n        serializedName: \"limit\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nextResetTime: {\n        serializedName: \"nextResetTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const RecoverableSqlPoolListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RecoverableSqlPoolListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RecoverableSqlPool\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const WorkspaceInfoListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WorkspaceInfoListResult\",\n    modelProperties: {\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Workspace\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DataLakeStorageAccountDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataLakeStorageAccountDetails\",\n    modelProperties: {\n      accountUrl: {\n        serializedName: \"accountUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      filesystem: {\n        serializedName: \"filesystem\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceId: {\n        serializedName: \"resourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createManagedPrivateEndpoint: {\n        serializedName: \"createManagedPrivateEndpoint\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualNetworkProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualNetworkProfile\",\n    modelProperties: {\n      computeSubnetId: {\n        serializedName: \"computeSubnetId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EncryptionDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EncryptionDetails\",\n    modelProperties: {\n      doubleEncryptionEnabled: {\n        serializedName: \"doubleEncryptionEnabled\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      cmk: {\n        serializedName: \"cmk\",\n        type: {\n          name: \"Composite\",\n          className: \"CustomerManagedKeyDetails\"\n        }\n      }\n    }\n  }\n};\n\nexport const CustomerManagedKeyDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CustomerManagedKeyDetails\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      key: {\n        serializedName: \"key\",\n        type: {\n          name: \"Composite\",\n          className: \"WorkspaceKeyDetails\"\n        }\n      },\n      kekIdentity: {\n        serializedName: \"kekIdentity\",\n        type: {\n          name: \"Composite\",\n          className: \"KekIdentityProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const WorkspaceKeyDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WorkspaceKeyDetails\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      keyVaultUrl: {\n        serializedName: \"keyVaultUrl\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const KekIdentityProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KekIdentityProperties\",\n    modelProperties: {\n      userAssignedIdentity: {\n        serializedName: \"userAssignedIdentity\",\n        type: {\n          name: \"String\"\n        }\n      },\n      useSystemAssignedIdentity: {\n        serializedName: \"useSystemAssignedIdentity\",\n        type: {\n          name: \"any\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedVirtualNetworkSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedVirtualNetworkSettings\",\n    modelProperties: {\n      preventDataExfiltration: {\n        serializedName: \"preventDataExfiltration\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      linkedAccessCheckOnTargetResource: {\n        serializedName: \"linkedAccessCheckOnTargetResource\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      allowedAadTenantIdsForLinking: {\n        serializedName: \"allowedAadTenantIdsForLinking\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const WorkspaceRepositoryConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WorkspaceRepositoryConfiguration\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hostName: {\n        serializedName: \"hostName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accountName: {\n        serializedName: \"accountName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      projectName: {\n        serializedName: \"projectName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      repositoryName: {\n        serializedName: \"repositoryName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      collaborationBranch: {\n        serializedName: \"collaborationBranch\",\n        type: {\n          name: \"String\"\n        }\n      },\n      rootFolder: {\n        serializedName: \"rootFolder\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastCommitId: {\n        serializedName: \"lastCommitId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        type: {\n          name: \"Uuid\"\n        }\n      }\n    }\n  }\n};\n\nexport const PurviewConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PurviewConfiguration\",\n    modelProperties: {\n      purviewResourceId: {\n        serializedName: \"purviewResourceId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CspWorkspaceAdminProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CspWorkspaceAdminProperties\",\n    modelProperties: {\n      initialWorkspaceAdminObjectId: {\n        serializedName: \"initialWorkspaceAdminObjectId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedIdentity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedIdentity\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        readOnly: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"None\",\n            \"SystemAssigned\",\n            \"SystemAssigned,UserAssigned\"\n          ]\n        }\n      },\n      userAssignedIdentities: {\n        serializedName: \"userAssignedIdentities\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Composite\",\n              className: \"UserAssignedManagedIdentity\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const UserAssignedManagedIdentity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UserAssignedManagedIdentity\",\n    modelProperties: {\n      clientId: {\n        serializedName: \"clientId\",\n        readOnly: true,\n        nullable: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      principalId: {\n        serializedName: \"principalId\",\n        readOnly: true,\n        nullable: true,\n        type: {\n          name: \"Uuid\"\n        }\n      }\n    }\n  }\n};\n\nexport const WorkspacePatchInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WorkspacePatchInfo\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedIdentity\"\n        }\n      },\n      sqlAdministratorLoginPassword: {\n        serializedName: \"properties.sqlAdministratorLoginPassword\",\n        type: {\n          name: \"String\"\n        }\n      },\n      managedVirtualNetworkSettings: {\n        serializedName: \"properties.managedVirtualNetworkSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedVirtualNetworkSettings\"\n        }\n      },\n      workspaceRepositoryConfiguration: {\n        serializedName: \"properties.workspaceRepositoryConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"WorkspaceRepositoryConfiguration\"\n        }\n      },\n      purviewConfiguration: {\n        serializedName: \"properties.purviewConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"PurviewConfiguration\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      encryption: {\n        serializedName: \"properties.encryption\",\n        type: {\n          name: \"Composite\",\n          className: \"EncryptionDetails\"\n        }\n      },\n      publicNetworkAccess: {\n        serializedName: \"properties.publicNetworkAccess\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentity\",\n    modelProperties: {\n      desiredState: {\n        serializedName: \"desiredState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      actualState: {\n        serializedName: \"actualState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RestorableDroppedSqlPoolListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RestorableDroppedSqlPoolListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RestorableDroppedSqlPool\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const AutoScaleProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AutoScaleProperties\",\n    modelProperties: {\n      minNodeCount: {\n        serializedName: \"minNodeCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      enabled: {\n        serializedName: \"enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      maxNodeCount: {\n        serializedName: \"maxNodeCount\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const AutoPauseProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AutoPauseProperties\",\n    modelProperties: {\n      delayInMinutes: {\n        serializedName: \"delayInMinutes\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      enabled: {\n        serializedName: \"enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const DynamicExecutorAllocation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DynamicExecutorAllocation\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      minExecutors: {\n        serializedName: \"minExecutors\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxExecutors: {\n        serializedName: \"maxExecutors\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const LibraryRequirements: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LibraryRequirements\",\n    modelProperties: {\n      time: {\n        serializedName: \"time\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      content: {\n        serializedName: \"content\",\n        type: {\n          name: \"String\"\n        }\n      },\n      filename: {\n        serializedName: \"filename\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LibraryInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LibraryInfo\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      path: {\n        serializedName: \"path\",\n        type: {\n          name: \"String\"\n        }\n      },\n      containerName: {\n        serializedName: \"containerName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      uploadedTimestamp: {\n        serializedName: \"uploadedTimestamp\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningStatus: {\n        serializedName: \"provisioningStatus\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      creatorId: {\n        serializedName: \"creatorId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SparkConfigProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SparkConfigProperties\",\n    modelProperties: {\n      time: {\n        serializedName: \"time\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      content: {\n        serializedName: \"content\",\n        type: {\n          name: \"String\"\n        }\n      },\n      filename: {\n        serializedName: \"filename\",\n        type: {\n          name: \"String\"\n        }\n      },\n      configurationType: {\n        serializedName: \"configurationType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BigDataPoolPatchInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BigDataPoolPatchInfo\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const BigDataPoolResourceInfoListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BigDataPoolResourceInfoListResult\",\n    modelProperties: {\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BigDataPoolResourceInfo\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const LibraryListResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LibraryListResponse\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"LibraryResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UpdateIntegrationRuntimeRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UpdateIntegrationRuntimeRequest\",\n    modelProperties: {\n      autoUpdate: {\n        serializedName: \"autoUpdate\",\n        type: {\n          name: \"String\"\n        }\n      },\n      updateDelayOffset: {\n        serializedName: \"updateDelayOffset\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IntegrationRuntime: coreClient.CompositeMapper = {\n  serializedName: \"IntegrationRuntime\",\n  type: {\n    name: \"Composite\",\n    className: \"IntegrationRuntime\",\n    uberParent: \"IntegrationRuntime\",\n    additionalProperties: { type: { name: \"Object\" } },\n    polymorphicDiscriminator: {\n      serializedName: \"type\",\n      clientName: \"type\"\n    },\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IntegrationRuntimeNodeIpAddress: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IntegrationRuntimeNodeIpAddress\",\n    modelProperties: {\n      ipAddress: {\n        serializedName: \"ipAddress\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GetSsisObjectMetadataRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GetSsisObjectMetadataRequest\",\n    modelProperties: {\n      metadataPath: {\n        serializedName: \"metadataPath\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SsisObjectMetadataListResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SsisObjectMetadataListResponse\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SsisObjectMetadata\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SsisObjectMetadata: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SsisObjectMetadata\",\n    uberParent: \"SsisObjectMetadata\",\n    polymorphicDiscriminator: {\n      serializedName: \"type\",\n      clientName: \"type\"\n    },\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SelfHostedIntegrationRuntimeNode: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SelfHostedIntegrationRuntimeNode\",\n    additionalProperties: { type: { name: \"Object\" } },\n    modelProperties: {\n      nodeName: {\n        serializedName: \"nodeName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      machineName: {\n        serializedName: \"machineName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      hostServiceUri: {\n        serializedName: \"hostServiceUri\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      capabilities: {\n        serializedName: \"capabilities\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      versionStatus: {\n        serializedName: \"versionStatus\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      registerTime: {\n        serializedName: \"registerTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastConnectTime: {\n        serializedName: \"lastConnectTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      expiryTime: {\n        serializedName: \"expiryTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastStartTime: {\n        serializedName: \"lastStartTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastStopTime: {\n        serializedName: \"lastStopTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastUpdateResult: {\n        serializedName: \"lastUpdateResult\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      lastStartUpdateTime: {\n        serializedName: \"lastStartUpdateTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastEndUpdateTime: {\n        serializedName: \"lastEndUpdateTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      isActiveDispatcher: {\n        serializedName: \"isActiveDispatcher\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      concurrentJobsLimit: {\n        serializedName: \"concurrentJobsLimit\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxConcurrentJobs: {\n        serializedName: \"maxConcurrentJobs\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const UpdateIntegrationRuntimeNodeRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UpdateIntegrationRuntimeNodeRequest\",\n    modelProperties: {\n      concurrentJobsLimit: {\n        constraints: {\n          InclusiveMinimum: 1\n        },\n        serializedName: \"concurrentJobsLimit\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const IntegrationRuntimeListResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IntegrationRuntimeListResponse\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"IntegrationRuntimeResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IntegrationRuntimeConnectionInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IntegrationRuntimeConnectionInfo\",\n    additionalProperties: { type: { name: \"Object\" } },\n    modelProperties: {\n      serviceToken: {\n        serializedName: \"serviceToken\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      identityCertThumbprint: {\n        serializedName: \"identityCertThumbprint\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      hostServiceUri: {\n        serializedName: \"hostServiceUri\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      publicKey: {\n        serializedName: \"publicKey\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      isIdentityCertExprired: {\n        serializedName: \"isIdentityCertExprired\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const IntegrationRuntimeStatusResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IntegrationRuntimeStatusResponse\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"IntegrationRuntimeStatus\"\n        }\n      }\n    }\n  }\n};\n\nexport const IntegrationRuntimeStatus: coreClient.CompositeMapper = {\n  serializedName: \"IntegrationRuntimeStatus\",\n  type: {\n    name: \"Composite\",\n    className: \"IntegrationRuntimeStatus\",\n    uberParent: \"IntegrationRuntimeStatus\",\n    additionalProperties: { type: { name: \"Object\" } },\n    polymorphicDiscriminator: {\n      serializedName: \"type\",\n      clientName: \"type\"\n    },\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      dataFactoryName: {\n        serializedName: \"dataFactoryName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      state: {\n        serializedName: \"state\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IntegrationRuntimeRegenerateKeyParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IntegrationRuntimeRegenerateKeyParameters\",\n    modelProperties: {\n      keyName: {\n        serializedName: \"keyName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IntegrationRuntimeAuthKeys: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IntegrationRuntimeAuthKeys\",\n    modelProperties: {\n      authKey1: {\n        serializedName: \"authKey1\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authKey2: {\n        serializedName: \"authKey2\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IntegrationRuntimeMonitoringData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IntegrationRuntimeMonitoringData\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nodes: {\n        serializedName: \"nodes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"IntegrationRuntimeNodeMonitoringData\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const IntegrationRuntimeNodeMonitoringData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IntegrationRuntimeNodeMonitoringData\",\n    additionalProperties: { type: { name: \"Object\" } },\n    modelProperties: {\n      nodeName: {\n        serializedName: \"nodeName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      availableMemoryInMB: {\n        serializedName: \"availableMemoryInMB\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      cpuUtilization: {\n        serializedName: \"cpuUtilization\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      concurrentJobsLimit: {\n        serializedName: \"concurrentJobsLimit\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      concurrentJobsRunning: {\n        serializedName: \"concurrentJobsRunning\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxConcurrentJobs: {\n        serializedName: \"maxConcurrentJobs\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      sentBytes: {\n        serializedName: \"sentBytes\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      receivedBytes: {\n        serializedName: \"receivedBytes\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const SsisObjectMetadataStatusResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SsisObjectMetadataStatusResponse\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"String\"\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IntegrationRuntimeOutboundNetworkDependenciesEndpointsResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IntegrationRuntimeOutboundNetworkDependenciesEndpointsResponse\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className:\n                \"IntegrationRuntimeOutboundNetworkDependenciesCategoryEndpoint\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const IntegrationRuntimeOutboundNetworkDependenciesCategoryEndpoint: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IntegrationRuntimeOutboundNetworkDependenciesCategoryEndpoint\",\n    modelProperties: {\n      category: {\n        serializedName: \"category\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endpoints: {\n        serializedName: \"endpoints\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"IntegrationRuntimeOutboundNetworkDependenciesEndpoint\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const IntegrationRuntimeOutboundNetworkDependenciesEndpoint: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IntegrationRuntimeOutboundNetworkDependenciesEndpoint\",\n    modelProperties: {\n      domainName: {\n        serializedName: \"domainName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endpointDetails: {\n        serializedName: \"endpointDetails\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className:\n                \"IntegrationRuntimeOutboundNetworkDependenciesEndpointDetails\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const IntegrationRuntimeOutboundNetworkDependenciesEndpointDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IntegrationRuntimeOutboundNetworkDependenciesEndpointDetails\",\n    modelProperties: {\n      port: {\n        serializedName: \"port\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const SparkConfigurationListResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SparkConfigurationListResponse\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SparkConfigurationResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Operation\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Operation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Operation\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      display: {\n        serializedName: \"display\",\n        type: {\n          name: \"Composite\",\n          className: \"OperationDisplay\"\n        }\n      },\n      origin: {\n        serializedName: \"origin\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const OperationDisplay: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationDisplay\",\n    modelProperties: {\n      provider: {\n        serializedName: \"provider\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"operation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"resource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SkuDescriptionList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SkuDescriptionList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SkuDescription\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SkuDescription: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SkuDescription\",\n    modelProperties: {\n      resourceType: {\n        serializedName: \"resourceType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      size: {\n        serializedName: \"size\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      locations: {\n        serializedName: \"locations\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      locationInfo: {\n        serializedName: \"locationInfo\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SkuLocationInfoItem\"\n            }\n          }\n        }\n      },\n      restrictions: {\n        serializedName: \"restrictions\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Dictionary\",\n              value: { type: { name: \"any\" } }\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SkuLocationInfoItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SkuLocationInfoItem\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      zones: {\n        serializedName: \"zones\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const KustoPoolCheckNameRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KustoPoolCheckNameRequest\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        defaultValue: \"Microsoft.Synapse/workspaces/kustoPools\",\n        isConstant: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CheckNameResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CheckNameResult\",\n    modelProperties: {\n      nameAvailable: {\n        serializedName: \"nameAvailable\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const KustoPoolListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KustoPoolListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"KustoPool\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const AzureSku: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AzureSku\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      capacity: {\n        serializedName: \"capacity\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      size: {\n        serializedName: \"size\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OptimizedAutoscale: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OptimizedAutoscale\",\n    modelProperties: {\n      version: {\n        serializedName: \"version\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      isEnabled: {\n        serializedName: \"isEnabled\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      minimum: {\n        serializedName: \"minimum\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      maximum: {\n        serializedName: \"maximum\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const LanguageExtensionsList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LanguageExtensionsList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"LanguageExtension\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const LanguageExtension: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LanguageExtension\",\n    modelProperties: {\n      languageExtensionName: {\n        serializedName: \"languageExtensionName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SystemData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SystemData\",\n    modelProperties: {\n      createdBy: {\n        serializedName: \"createdBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdByType: {\n        serializedName: \"createdByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdAt: {\n        serializedName: \"createdAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastModifiedBy: {\n        serializedName: \"lastModifiedBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedByType: {\n        serializedName: \"lastModifiedByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedAt: {\n        serializedName: \"lastModifiedAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const ListResourceSkusResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ListResourceSkusResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"AzureResourceSku\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const AzureResourceSku: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AzureResourceSku\",\n    modelProperties: {\n      resourceType: {\n        serializedName: \"resourceType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"AzureSku\"\n        }\n      },\n      capacity: {\n        serializedName: \"capacity\",\n        type: {\n          name: \"Composite\",\n          className: \"AzureCapacity\"\n        }\n      }\n    }\n  }\n};\n\nexport const AzureCapacity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AzureCapacity\",\n    modelProperties: {\n      scaleType: {\n        serializedName: \"scaleType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      minimum: {\n        serializedName: \"minimum\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      maximum: {\n        serializedName: \"maximum\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      default: {\n        serializedName: \"default\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const DatabaseCheckNameRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DatabaseCheckNameRequest\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Microsoft.Synapse/workspaces/kustoPools/databases\",\n            \"Microsoft.Synapse/workspaces/kustoPools/attachedDatabaseConfigurations\"\n          ]\n        }\n      }\n    }\n  }\n};\n\nexport const FollowerDatabaseListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FollowerDatabaseListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"FollowerDatabaseDefinition\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const FollowerDatabaseDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FollowerDatabaseDefinition\",\n    modelProperties: {\n      kustoPoolResourceId: {\n        serializedName: \"clusterResourceId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      attachedDatabaseConfigurationName: {\n        serializedName: \"attachedDatabaseConfigurationName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      databaseName: {\n        serializedName: \"databaseName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AttachedDatabaseConfigurationListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AttachedDatabaseConfigurationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"AttachedDatabaseConfiguration\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const TableLevelSharingProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TableLevelSharingProperties\",\n    modelProperties: {\n      tablesToInclude: {\n        serializedName: \"tablesToInclude\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      tablesToExclude: {\n        serializedName: \"tablesToExclude\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      externalTablesToInclude: {\n        serializedName: \"externalTablesToInclude\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      externalTablesToExclude: {\n        serializedName: \"externalTablesToExclude\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      materializedViewsToInclude: {\n        serializedName: \"materializedViewsToInclude\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      materializedViewsToExclude: {\n        serializedName: \"materializedViewsToExclude\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DatabaseListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DatabaseListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Database\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DataConnectionCheckNameRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataConnectionCheckNameRequest\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        defaultValue:\n          \"Microsoft.Synapse/workspaces/kustoPools/databases/dataConnections\",\n        isConstant: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DataConnectionValidation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataConnectionValidation\",\n    modelProperties: {\n      dataConnectionName: {\n        serializedName: \"dataConnectionName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DataConnection\"\n        }\n      }\n    }\n  }\n};\n\nexport const DataConnectionValidationListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataConnectionValidationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DataConnectionValidationResult\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DataConnectionValidationResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataConnectionValidationResult\",\n    modelProperties: {\n      errorMessage: {\n        serializedName: \"errorMessage\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DataConnectionListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataConnectionListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DataConnection\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ClusterPrincipalAssignmentCheckNameRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ClusterPrincipalAssignmentCheckNameRequest\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        defaultValue:\n          \"Microsoft.Synapse/workspaces/kustoPools/principalAssignments\",\n        isConstant: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ClusterPrincipalAssignmentListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ClusterPrincipalAssignmentListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ClusterPrincipalAssignment\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DatabasePrincipalAssignmentCheckNameRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DatabasePrincipalAssignmentCheckNameRequest\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        defaultValue:\n          \"Microsoft.Synapse/workspaces/kustoPools/databases/principalAssignments\",\n        isConstant: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DatabasePrincipalAssignmentListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DatabasePrincipalAssignmentListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DatabasePrincipalAssignment\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const TopQueries: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TopQueries\",\n    modelProperties: {\n      aggregationFunction: {\n        serializedName: \"aggregationFunction\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"min\", \"max\", \"avg\", \"sum\"]\n        }\n      },\n      executionType: {\n        serializedName: \"executionType\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"any\", \"regular\", \"irregular\", \"aborted\", \"exception\"]\n        }\n      },\n      intervalType: {\n        serializedName: \"intervalType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      numberOfTopQueries: {\n        serializedName: \"numberOfTopQueries\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      observationStartTime: {\n        serializedName: \"observationStartTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      observationEndTime: {\n        serializedName: \"observationEndTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      observedMetric: {\n        serializedName: \"observedMetric\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"cpu\", \"io\", \"logio\", \"duration\", \"executionCount\"]\n        }\n      },\n      queries: {\n        serializedName: \"queries\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"QueryStatistic\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const QueryStatistic: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QueryStatistic\",\n    modelProperties: {\n      queryId: {\n        serializedName: \"queryId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      intervals: {\n        serializedName: \"intervals\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"QueryInterval\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const QueryInterval: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QueryInterval\",\n    modelProperties: {\n      intervalStartTime: {\n        serializedName: \"intervalStartTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      executionCount: {\n        serializedName: \"executionCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      metrics: {\n        serializedName: \"metrics\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"QueryMetric\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const QueryMetric: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QueryMetric\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"percentage\", \"KB\", \"microseconds\"]\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const TopQueriesListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TopQueriesListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TopQueries\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const IntegrationRuntimeComputeProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IntegrationRuntimeComputeProperties\",\n    additionalProperties: { type: { name: \"Object\" } },\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nodeSize: {\n        serializedName: \"nodeSize\",\n        type: {\n          name: \"String\"\n        }\n      },\n      numberOfNodes: {\n        constraints: {\n          InclusiveMinimum: 1\n        },\n        serializedName: \"numberOfNodes\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxParallelExecutionsPerNode: {\n        constraints: {\n          InclusiveMinimum: 1\n        },\n        serializedName: \"maxParallelExecutionsPerNode\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      dataFlowProperties: {\n        serializedName: \"dataFlowProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"IntegrationRuntimeDataFlowProperties\"\n        }\n      },\n      vNetProperties: {\n        serializedName: \"vNetProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"IntegrationRuntimeVNetProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const IntegrationRuntimeDataFlowProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IntegrationRuntimeDataFlowProperties\",\n    additionalProperties: { type: { name: \"Object\" } },\n    modelProperties: {\n      computeType: {\n        serializedName: \"computeType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      coreCount: {\n        serializedName: \"coreCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      timeToLive: {\n        constraints: {\n          InclusiveMinimum: 0\n        },\n        serializedName: \"timeToLive\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      cleanup: {\n        serializedName: \"cleanup\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const IntegrationRuntimeVNetProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IntegrationRuntimeVNetProperties\",\n    additionalProperties: { type: { name: \"Object\" } },\n    modelProperties: {\n      vNetId: {\n        serializedName: \"vNetId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      subnet: {\n        serializedName: \"subnet\",\n        type: {\n          name: \"String\"\n        }\n      },\n      publicIPs: {\n        serializedName: \"publicIPs\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      subnetId: {\n        serializedName: \"subnetId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IntegrationRuntimeSsisProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IntegrationRuntimeSsisProperties\",\n    additionalProperties: { type: { name: \"Object\" } },\n    modelProperties: {\n      catalogInfo: {\n        serializedName: \"catalogInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"IntegrationRuntimeSsisCatalogInfo\"\n        }\n      },\n      licenseType: {\n        serializedName: \"licenseType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      customSetupScriptProperties: {\n        serializedName: \"customSetupScriptProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"IntegrationRuntimeCustomSetupScriptProperties\"\n        }\n      },\n      dataProxyProperties: {\n        serializedName: \"dataProxyProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"IntegrationRuntimeDataProxyProperties\"\n        }\n      },\n      edition: {\n        serializedName: \"edition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      expressCustomSetupProperties: {\n        serializedName: \"expressCustomSetupProperties\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CustomSetupBase\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const IntegrationRuntimeSsisCatalogInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IntegrationRuntimeSsisCatalogInfo\",\n    additionalProperties: { type: { name: \"Object\" } },\n    modelProperties: {\n      catalogServerEndpoint: {\n        serializedName: \"catalogServerEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      catalogAdminUserName: {\n        constraints: {\n          MaxLength: 128,\n          MinLength: 1\n        },\n        serializedName: \"catalogAdminUserName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      catalogAdminPassword: {\n        serializedName: \"catalogAdminPassword\",\n        type: {\n          name: \"Composite\",\n          className: \"SecureString\"\n        }\n      },\n      catalogPricingTier: {\n        serializedName: \"catalogPricingTier\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SecretBase: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SecretBase\",\n    uberParent: \"SecretBase\",\n    polymorphicDiscriminator: {\n      serializedName: \"type\",\n      clientName: \"type\"\n    },\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IntegrationRuntimeCustomSetupScriptProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IntegrationRuntimeCustomSetupScriptProperties\",\n    modelProperties: {\n      blobContainerUri: {\n        serializedName: \"blobContainerUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sasToken: {\n        serializedName: \"sasToken\",\n        type: {\n          name: \"Composite\",\n          className: \"SecureString\"\n        }\n      }\n    }\n  }\n};\n\nexport const IntegrationRuntimeDataProxyProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IntegrationRuntimeDataProxyProperties\",\n    modelProperties: {\n      connectVia: {\n        serializedName: \"connectVia\",\n        type: {\n          name: \"Composite\",\n          className: \"EntityReference\"\n        }\n      },\n      stagingLinkedService: {\n        serializedName: \"stagingLinkedService\",\n        type: {\n          name: \"Composite\",\n          className: \"EntityReference\"\n        }\n      },\n      path: {\n        serializedName: \"path\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EntityReference: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EntityReference\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      referenceName: {\n        serializedName: \"referenceName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CustomSetupBase: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CustomSetupBase\",\n    uberParent: \"CustomSetupBase\",\n    polymorphicDiscriminator: {\n      serializedName: \"type\",\n      clientName: \"type\"\n    },\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LinkedIntegrationRuntimeType: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LinkedIntegrationRuntimeType\",\n    uberParent: \"LinkedIntegrationRuntimeType\",\n    polymorphicDiscriminator: {\n      serializedName: \"authorizationType\",\n      clientName: \"authorizationType\"\n    },\n    modelProperties: {\n      authorizationType: {\n        serializedName: \"authorizationType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedIntegrationRuntimeNode: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedIntegrationRuntimeNode\",\n    additionalProperties: { type: { name: \"Object\" } },\n    modelProperties: {\n      nodeId: {\n        serializedName: \"nodeId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      errors: {\n        serializedName: \"errors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagedIntegrationRuntimeError\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedIntegrationRuntimeError: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedIntegrationRuntimeError\",\n    additionalProperties: { type: { name: \"Object\" } },\n    modelProperties: {\n      time: {\n        serializedName: \"time\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      parameters: {\n        serializedName: \"parameters\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedIntegrationRuntimeOperationResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedIntegrationRuntimeOperationResult\",\n    additionalProperties: { type: { name: \"Object\" } },\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      startTime: {\n        serializedName: \"startTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      result: {\n        serializedName: \"result\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"errorCode\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      parameters: {\n        serializedName: \"parameters\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      activityId: {\n        serializedName: \"activityId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LinkedIntegrationRuntime: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LinkedIntegrationRuntime\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      subscriptionId: {\n        serializedName: \"subscriptionId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      dataFactoryName: {\n        serializedName: \"dataFactoryName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      dataFactoryLocation: {\n        serializedName: \"dataFactoryLocation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      createTime: {\n        serializedName: \"createTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const SsisEnvironmentReference: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SsisEnvironmentReference\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      environmentFolderName: {\n        serializedName: \"environmentFolderName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      environmentName: {\n        serializedName: \"environmentName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      referenceType: {\n        serializedName: \"referenceType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SsisParameter: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SsisParameter\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dataType: {\n        serializedName: \"dataType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      required: {\n        serializedName: \"required\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      sensitive: {\n        serializedName: \"sensitive\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      designDefaultValue: {\n        serializedName: \"designDefaultValue\",\n        type: {\n          name: \"String\"\n        }\n      },\n      defaultValue: {\n        serializedName: \"defaultValue\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sensitiveDefaultValue: {\n        serializedName: \"sensitiveDefaultValue\",\n        type: {\n          name: \"String\"\n        }\n      },\n      valueType: {\n        serializedName: \"valueType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      valueSet: {\n        serializedName: \"valueSet\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      variable: {\n        serializedName: \"variable\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SsisVariable: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SsisVariable\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dataType: {\n        serializedName: \"dataType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sensitive: {\n        serializedName: \"sensitive\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sensitiveValue: {\n        serializedName: \"sensitiveValue\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DatabaseStatistics: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DatabaseStatistics\",\n    modelProperties: {\n      size: {\n        serializedName: \"size\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProxyResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProxyResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties\n    }\n  }\n};\n\nexport const TrackedResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TrackedResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AzureEntityResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AzureEntityResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      etag: {\n        serializedName: \"etag\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const KustoPoolUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KustoPoolUpdate\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"AzureSku\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      uri: {\n        serializedName: \"properties.uri\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      dataIngestionUri: {\n        serializedName: \"properties.dataIngestionUri\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      stateReason: {\n        serializedName: \"properties.stateReason\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      optimizedAutoscale: {\n        serializedName: \"properties.optimizedAutoscale\",\n        type: {\n          name: \"Composite\",\n          className: \"OptimizedAutoscale\"\n        }\n      },\n      enableStreamingIngest: {\n        defaultValue: false,\n        serializedName: \"properties.enableStreamingIngest\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enablePurge: {\n        defaultValue: false,\n        serializedName: \"properties.enablePurge\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      languageExtensions: {\n        serializedName: \"properties.languageExtensions\",\n        type: {\n          name: \"Composite\",\n          className: \"LanguageExtensionsList\"\n        }\n      },\n      workspaceUID: {\n        serializedName: \"properties.workspaceUID\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpointConnectionForPrivateLinkHub: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpointConnectionForPrivateLinkHub\",\n    modelProperties: {\n      ...PrivateEndpointConnectionForPrivateLinkHubBasicAutoGenerated.type\n        .modelProperties,\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedIntegrationRuntime: coreClient.CompositeMapper = {\n  serializedName: \"Managed\",\n  type: {\n    name: \"Composite\",\n    className: \"ManagedIntegrationRuntime\",\n    uberParent: \"IntegrationRuntime\",\n    additionalProperties: { type: { name: \"Object\" } },\n    polymorphicDiscriminator: IntegrationRuntime.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...IntegrationRuntime.type.modelProperties,\n      state: {\n        serializedName: \"state\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      referenceName: {\n        serializedName: \"managedVirtualNetwork.referenceName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      typeManagedVirtualNetworkType: {\n        serializedName: \"managedVirtualNetwork.type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      id: {\n        serializedName: \"managedVirtualNetwork.id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      computeProperties: {\n        serializedName: \"typeProperties.computeProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"IntegrationRuntimeComputeProperties\"\n        }\n      },\n      ssisProperties: {\n        serializedName: \"typeProperties.ssisProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"IntegrationRuntimeSsisProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const SelfHostedIntegrationRuntime: coreClient.CompositeMapper = {\n  serializedName: \"SelfHosted\",\n  type: {\n    name: \"Composite\",\n    className: \"SelfHostedIntegrationRuntime\",\n    uberParent: \"IntegrationRuntime\",\n    additionalProperties: { type: { name: \"Object\" } },\n    polymorphicDiscriminator: IntegrationRuntime.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...IntegrationRuntime.type.modelProperties,\n      linkedInfo: {\n        serializedName: \"typeProperties.linkedInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"LinkedIntegrationRuntimeType\"\n        }\n      }\n    }\n  }\n};\n\nexport const SsisFolder: coreClient.CompositeMapper = {\n  serializedName: \"Folder\",\n  type: {\n    name: \"Composite\",\n    className: \"SsisFolder\",\n    uberParent: \"SsisObjectMetadata\",\n    polymorphicDiscriminator: SsisObjectMetadata.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...SsisObjectMetadata.type.modelProperties\n    }\n  }\n};\n\nexport const SsisProject: coreClient.CompositeMapper = {\n  serializedName: \"Project\",\n  type: {\n    name: \"Composite\",\n    className: \"SsisProject\",\n    uberParent: \"SsisObjectMetadata\",\n    polymorphicDiscriminator: SsisObjectMetadata.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...SsisObjectMetadata.type.modelProperties,\n      folderId: {\n        serializedName: \"folderId\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      environmentRefs: {\n        serializedName: \"environmentRefs\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SsisEnvironmentReference\"\n            }\n          }\n        }\n      },\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SsisParameter\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SsisPackage: coreClient.CompositeMapper = {\n  serializedName: \"Package\",\n  type: {\n    name: \"Composite\",\n    className: \"SsisPackage\",\n    uberParent: \"SsisObjectMetadata\",\n    polymorphicDiscriminator: SsisObjectMetadata.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...SsisObjectMetadata.type.modelProperties,\n      folderId: {\n        serializedName: \"folderId\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      projectVersion: {\n        serializedName: \"projectVersion\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      projectId: {\n        serializedName: \"projectId\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SsisParameter\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SsisEnvironment: coreClient.CompositeMapper = {\n  serializedName: \"Environment\",\n  type: {\n    name: \"Composite\",\n    className: \"SsisEnvironment\",\n    uberParent: \"SsisObjectMetadata\",\n    polymorphicDiscriminator: SsisObjectMetadata.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...SsisObjectMetadata.type.modelProperties,\n      folderId: {\n        serializedName: \"folderId\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      variables: {\n        serializedName: \"variables\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SsisVariable\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedIntegrationRuntimeStatus: coreClient.CompositeMapper = {\n  serializedName: \"Managed\",\n  type: {\n    name: \"Composite\",\n    className: \"ManagedIntegrationRuntimeStatus\",\n    uberParent: \"IntegrationRuntimeStatus\",\n    additionalProperties: { type: { name: \"Object\" } },\n    polymorphicDiscriminator:\n      IntegrationRuntimeStatus.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...IntegrationRuntimeStatus.type.modelProperties,\n      createTime: {\n        serializedName: \"typeProperties.createTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      nodes: {\n        serializedName: \"typeProperties.nodes\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagedIntegrationRuntimeNode\"\n            }\n          }\n        }\n      },\n      otherErrors: {\n        serializedName: \"typeProperties.otherErrors\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagedIntegrationRuntimeError\"\n            }\n          }\n        }\n      },\n      lastOperation: {\n        serializedName: \"typeProperties.lastOperation\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedIntegrationRuntimeOperationResult\"\n        }\n      }\n    }\n  }\n};\n\nexport const SelfHostedIntegrationRuntimeStatus: coreClient.CompositeMapper = {\n  serializedName: \"SelfHosted\",\n  type: {\n    name: \"Composite\",\n    className: \"SelfHostedIntegrationRuntimeStatus\",\n    uberParent: \"IntegrationRuntimeStatus\",\n    additionalProperties: { type: { name: \"Object\" } },\n    polymorphicDiscriminator:\n      IntegrationRuntimeStatus.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...IntegrationRuntimeStatus.type.modelProperties,\n      createTime: {\n        serializedName: \"typeProperties.createTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      taskQueueId: {\n        serializedName: \"typeProperties.taskQueueId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nodeCommunicationChannelEncryptionMode: {\n        serializedName: \"typeProperties.nodeCommunicationChannelEncryptionMode\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      internalChannelEncryption: {\n        serializedName: \"typeProperties.internalChannelEncryption\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"typeProperties.version\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nodes: {\n        serializedName: \"typeProperties.nodes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SelfHostedIntegrationRuntimeNode\"\n            }\n          }\n        }\n      },\n      scheduledUpdateDate: {\n        serializedName: \"typeProperties.scheduledUpdateDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      updateDelayOffset: {\n        serializedName: \"typeProperties.updateDelayOffset\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      localTimeZoneOffset: {\n        serializedName: \"typeProperties.localTimeZoneOffset\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      capabilities: {\n        serializedName: \"typeProperties.capabilities\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      serviceUrls: {\n        serializedName: \"typeProperties.serviceUrls\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      autoUpdate: {\n        serializedName: \"typeProperties.autoUpdate\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      versionStatus: {\n        serializedName: \"typeProperties.versionStatus\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      links: {\n        serializedName: \"typeProperties.links\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"LinkedIntegrationRuntime\"\n            }\n          }\n        }\n      },\n      pushedVersion: {\n        serializedName: \"typeProperties.pushedVersion\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      latestVersion: {\n        serializedName: \"typeProperties.latestVersion\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      autoUpdateETA: {\n        serializedName: \"typeProperties.autoUpdateETA\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      serviceRegion: {\n        serializedName: \"typeProperties.serviceRegion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      newerVersions: {\n        serializedName: \"typeProperties.newerVersions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SecureString: coreClient.CompositeMapper = {\n  serializedName: \"SecureString\",\n  type: {\n    name: \"Composite\",\n    className: \"SecureString\",\n    uberParent: \"SecretBase\",\n    polymorphicDiscriminator: SecretBase.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...SecretBase.type.modelProperties,\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CmdkeySetup: coreClient.CompositeMapper = {\n  serializedName: \"CmdkeySetup\",\n  type: {\n    name: \"Composite\",\n    className: \"CmdkeySetup\",\n    uberParent: \"CustomSetupBase\",\n    polymorphicDiscriminator: CustomSetupBase.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...CustomSetupBase.type.modelProperties,\n      targetName: {\n        serializedName: \"typeProperties.targetName\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      userName: {\n        serializedName: \"typeProperties.userName\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      password: {\n        serializedName: \"typeProperties.password\",\n        type: {\n          name: \"Composite\",\n          className: \"SecretBase\"\n        }\n      }\n    }\n  }\n};\n\nexport const EnvironmentVariableSetup: coreClient.CompositeMapper = {\n  serializedName: \"EnvironmentVariableSetup\",\n  type: {\n    name: \"Composite\",\n    className: \"EnvironmentVariableSetup\",\n    uberParent: \"CustomSetupBase\",\n    polymorphicDiscriminator: CustomSetupBase.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...CustomSetupBase.type.modelProperties,\n      variableName: {\n        serializedName: \"typeProperties.variableName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      variableValue: {\n        serializedName: \"typeProperties.variableValue\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ComponentSetup: coreClient.CompositeMapper = {\n  serializedName: \"ComponentSetup\",\n  type: {\n    name: \"Composite\",\n    className: \"ComponentSetup\",\n    uberParent: \"CustomSetupBase\",\n    polymorphicDiscriminator: CustomSetupBase.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...CustomSetupBase.type.modelProperties,\n      componentName: {\n        serializedName: \"typeProperties.componentName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      licenseKey: {\n        serializedName: \"typeProperties.licenseKey\",\n        type: {\n          name: \"Composite\",\n          className: \"SecretBase\"\n        }\n      }\n    }\n  }\n};\n\nexport const LinkedIntegrationRuntimeKeyAuthorization: coreClient.CompositeMapper = {\n  serializedName: \"Key\",\n  type: {\n    name: \"Composite\",\n    className: \"LinkedIntegrationRuntimeKeyAuthorization\",\n    uberParent: \"LinkedIntegrationRuntimeType\",\n    polymorphicDiscriminator:\n      LinkedIntegrationRuntimeType.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...LinkedIntegrationRuntimeType.type.modelProperties,\n      key: {\n        serializedName: \"key\",\n        type: {\n          name: \"Composite\",\n          className: \"SecureString\"\n        }\n      }\n    }\n  }\n};\n\nexport const LinkedIntegrationRuntimeRbacAuthorization: coreClient.CompositeMapper = {\n  serializedName: \"RBAC\",\n  type: {\n    name: \"Composite\",\n    className: \"LinkedIntegrationRuntimeRbacAuthorization\",\n    uberParent: \"LinkedIntegrationRuntimeType\",\n    polymorphicDiscriminator:\n      LinkedIntegrationRuntimeType.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...LinkedIntegrationRuntimeType.type.modelProperties,\n      resourceId: {\n        serializedName: \"resourceId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AzureADOnlyAuthentication: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AzureADOnlyAuthentication\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      azureADOnlyAuthentication: {\n        serializedName: \"properties.azureADOnlyAuthentication\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      creationDate: {\n        serializedName: \"properties.creationDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const IpFirewallRuleInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IpFirewallRuleInfo\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      endIpAddress: {\n        serializedName: \"properties.endIpAddress\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      startIpAddress: {\n        serializedName: \"properties.startIpAddress\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Key: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Key\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      isActiveCMK: {\n        serializedName: \"properties.isActiveCMK\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      keyVaultUrl: {\n        serializedName: \"properties.keyVaultUrl\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpointConnection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpointConnection\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      privateEndpoint: {\n        serializedName: \"properties.privateEndpoint\",\n        type: {\n          name: \"Composite\",\n          className: \"PrivateEndpoint\"\n        }\n      },\n      privateLinkServiceConnectionState: {\n        serializedName: \"properties.privateLinkServiceConnectionState\",\n        type: {\n          name: \"Composite\",\n          className: \"PrivateLinkServiceConnectionState\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateLinkResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateLinkResource\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"PrivateLinkResourceProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const MetadataSyncConfig: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetadataSyncConfig\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      enabled: {\n        serializedName: \"properties.enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      syncIntervalInMinutes: {\n        serializedName: \"properties.syncIntervalInMinutes\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const GeoBackupPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GeoBackupPolicy\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      kind: {\n        serializedName: \"kind\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Disabled\", \"Enabled\"]\n        }\n      },\n      storageType: {\n        serializedName: \"properties.storageType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DataWarehouseUserActivities: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataWarehouseUserActivities\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      activeQueriesCount: {\n        serializedName: \"properties.activeQueriesCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const RestorePoint: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RestorePoint\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      restorePointType: {\n        serializedName: \"properties.restorePointType\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"CONTINUOUS\", \"DISCRETE\"]\n        }\n      },\n      earliestRestoreDate: {\n        serializedName: \"properties.earliestRestoreDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      restorePointCreationDate: {\n        serializedName: \"properties.restorePointCreationDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      restorePointLabel: {\n        serializedName: \"properties.restorePointLabel\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReplicationLink: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReplicationLink\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      isTerminationAllowed: {\n        serializedName: \"properties.isTerminationAllowed\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      replicationMode: {\n        serializedName: \"properties.replicationMode\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      partnerServer: {\n        serializedName: \"properties.partnerServer\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      partnerDatabase: {\n        serializedName: \"properties.partnerDatabase\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      partnerLocation: {\n        serializedName: \"properties.partnerLocation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      role: {\n        serializedName: \"properties.role\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Primary\",\n            \"Secondary\",\n            \"NonReadableSecondary\",\n            \"Source\",\n            \"Copy\"\n          ]\n        }\n      },\n      partnerRole: {\n        serializedName: \"properties.partnerRole\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Primary\",\n            \"Secondary\",\n            \"NonReadableSecondary\",\n            \"Source\",\n            \"Copy\"\n          ]\n        }\n      },\n      startTime: {\n        serializedName: \"properties.startTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      percentComplete: {\n        serializedName: \"properties.percentComplete\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      replicationState: {\n        serializedName: \"properties.replicationState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MaintenanceWindows: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MaintenanceWindows\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      timeRanges: {\n        serializedName: \"properties.timeRanges\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MaintenanceWindowTimeRange\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MaintenanceWindowOptions: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MaintenanceWindowOptions\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      isEnabled: {\n        serializedName: \"properties.isEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      maintenanceWindowCycles: {\n        serializedName: \"properties.maintenanceWindowCycles\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MaintenanceWindowTimeRange\"\n            }\n          }\n        }\n      },\n      minDurationInMinutes: {\n        serializedName: \"properties.minDurationInMinutes\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      defaultDurationInMinutes: {\n        serializedName: \"properties.defaultDurationInMinutes\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      minCycles: {\n        serializedName: \"properties.minCycles\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      timeGranularityInMinutes: {\n        serializedName: \"properties.timeGranularityInMinutes\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      allowMultipleMaintenanceWindowsPerCycle: {\n        serializedName: \"properties.allowMultipleMaintenanceWindowsPerCycle\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const TransparentDataEncryption: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TransparentDataEncryption\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"properties.status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Enabled\", \"Disabled\"]\n        }\n      }\n    }\n  }\n};\n\nexport const SqlPoolBlobAuditingPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SqlPoolBlobAuditingPolicy\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      kind: {\n        serializedName: \"kind\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Enabled\", \"Disabled\"]\n        }\n      },\n      storageEndpoint: {\n        serializedName: \"properties.storageEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageAccountAccessKey: {\n        serializedName: \"properties.storageAccountAccessKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retentionDays: {\n        serializedName: \"properties.retentionDays\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      auditActionsAndGroups: {\n        serializedName: \"properties.auditActionsAndGroups\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      storageAccountSubscriptionId: {\n        serializedName: \"properties.storageAccountSubscriptionId\",\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      isStorageSecondaryKeyInUse: {\n        serializedName: \"properties.isStorageSecondaryKeyInUse\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isAzureMonitorTargetEnabled: {\n        defaultValue: false,\n        serializedName: \"properties.isAzureMonitorTargetEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const SqlPoolOperation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SqlPoolOperation\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      databaseName: {\n        serializedName: \"properties.databaseName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"properties.operation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      operationFriendlyName: {\n        serializedName: \"properties.operationFriendlyName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      percentComplete: {\n        serializedName: \"properties.percentComplete\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      serverName: {\n        serializedName: \"properties.serverName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      startTime: {\n        serializedName: \"properties.startTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"properties.errorCode\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      errorDescription: {\n        serializedName: \"properties.errorDescription\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      errorSeverity: {\n        serializedName: \"properties.errorSeverity\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      isUserError: {\n        serializedName: \"properties.isUserError\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      estimatedCompletionTime: {\n        serializedName: \"properties.estimatedCompletionTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      description: {\n        serializedName: \"properties.description\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      isCancellable: {\n        serializedName: \"properties.isCancellable\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const SensitivityLabel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SensitivityLabel\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      managedBy: {\n        serializedName: \"managedBy\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      schemaName: {\n        serializedName: \"properties.schemaName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tableName: {\n        serializedName: \"properties.tableName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      columnName: {\n        serializedName: \"properties.columnName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      labelName: {\n        serializedName: \"properties.labelName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      labelId: {\n        serializedName: \"properties.labelId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      informationType: {\n        serializedName: \"properties.informationType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      informationTypeId: {\n        serializedName: \"properties.informationTypeId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isDisabled: {\n        serializedName: \"properties.isDisabled\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      rank: {\n        serializedName: \"properties.rank\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"None\", \"Low\", \"Medium\", \"High\", \"Critical\"]\n        }\n      }\n    }\n  }\n};\n\nexport const SensitivityLabelUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SensitivityLabelUpdate\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      op: {\n        serializedName: \"properties.op\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"set\", \"remove\"]\n        }\n      },\n      schema: {\n        serializedName: \"properties.schema\",\n        type: {\n          name: \"String\"\n        }\n      },\n      table: {\n        serializedName: \"properties.table\",\n        type: {\n          name: \"String\"\n        }\n      },\n      column: {\n        serializedName: \"properties.column\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sensitivityLabel: {\n        serializedName: \"properties.sensitivityLabel\",\n        type: {\n          name: \"Composite\",\n          className: \"SensitivityLabel\"\n        }\n      }\n    }\n  }\n};\n\nexport const RecommendedSensitivityLabelUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RecommendedSensitivityLabelUpdate\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      op: {\n        serializedName: \"properties.op\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"enable\", \"disable\"]\n        }\n      },\n      schema: {\n        serializedName: \"properties.schema\",\n        type: {\n          name: \"String\"\n        }\n      },\n      table: {\n        serializedName: \"properties.table\",\n        type: {\n          name: \"String\"\n        }\n      },\n      column: {\n        serializedName: \"properties.column\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SqlPoolSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SqlPoolSchema\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties\n    }\n  }\n};\n\nexport const SqlPoolTable: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SqlPoolTable\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties\n    }\n  }\n};\n\nexport const SqlPoolColumn: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SqlPoolColumn\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      columnType: {\n        serializedName: \"properties.columnType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isComputed: {\n        serializedName: \"properties.isComputed\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const SqlPoolConnectionPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SqlPoolConnectionPolicy\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      kind: {\n        serializedName: \"kind\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      securityEnabledAccess: {\n        serializedName: \"properties.securityEnabledAccess\",\n        type: {\n          name: \"String\"\n        }\n      },\n      proxyDnsName: {\n        serializedName: \"properties.proxyDnsName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      proxyPort: {\n        serializedName: \"properties.proxyPort\",\n        type: {\n          name: \"String\"\n        }\n      },\n      visibility: {\n        serializedName: \"properties.visibility\",\n        type: {\n          name: \"String\"\n        }\n      },\n      useServerDefault: {\n        serializedName: \"properties.useServerDefault\",\n        type: {\n          name: \"String\"\n        }\n      },\n      redirectionState: {\n        serializedName: \"properties.redirectionState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SqlPoolVulnerabilityAssessment: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SqlPoolVulnerabilityAssessment\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      storageContainerPath: {\n        serializedName: \"properties.storageContainerPath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageContainerSasKey: {\n        serializedName: \"properties.storageContainerSasKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageAccountAccessKey: {\n        serializedName: \"properties.storageAccountAccessKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      recurringScans: {\n        serializedName: \"properties.recurringScans\",\n        type: {\n          name: \"Composite\",\n          className: \"VulnerabilityAssessmentRecurringScansProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const VulnerabilityAssessmentScanRecord: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VulnerabilityAssessmentScanRecord\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      scanId: {\n        serializedName: \"properties.scanId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      triggerType: {\n        serializedName: \"properties.triggerType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      startTime: {\n        serializedName: \"properties.startTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endTime: {\n        serializedName: \"properties.endTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      errors: {\n        serializedName: \"properties.errors\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VulnerabilityAssessmentScanError\"\n            }\n          }\n        }\n      },\n      storageContainerPath: {\n        serializedName: \"properties.storageContainerPath\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      numberOfFailedSecurityChecks: {\n        serializedName: \"properties.numberOfFailedSecurityChecks\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const SqlPoolVulnerabilityAssessmentScansExport: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SqlPoolVulnerabilityAssessmentScansExport\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      exportedReportLocation: {\n        serializedName: \"properties.exportedReportLocation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SqlPoolSecurityAlertPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SqlPoolSecurityAlertPolicy\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      state: {\n        serializedName: \"properties.state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"New\", \"Enabled\", \"Disabled\"]\n        }\n      },\n      disabledAlerts: {\n        serializedName: \"properties.disabledAlerts\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      emailAddresses: {\n        serializedName: \"properties.emailAddresses\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      emailAccountAdmins: {\n        serializedName: \"properties.emailAccountAdmins\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      storageEndpoint: {\n        serializedName: \"properties.storageEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageAccountAccessKey: {\n        serializedName: \"properties.storageAccountAccessKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retentionDays: {\n        serializedName: \"properties.retentionDays\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      creationTime: {\n        serializedName: \"properties.creationTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const SqlPoolVulnerabilityAssessmentRuleBaseline: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SqlPoolVulnerabilityAssessmentRuleBaseline\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      baselineResults: {\n        serializedName: \"properties.baselineResults\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SqlPoolVulnerabilityAssessmentRuleBaselineItem\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ExtendedSqlPoolBlobAuditingPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExtendedSqlPoolBlobAuditingPolicy\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      predicateExpression: {\n        serializedName: \"properties.predicateExpression\",\n        type: {\n          name: \"String\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Enabled\", \"Disabled\"]\n        }\n      },\n      storageEndpoint: {\n        serializedName: \"properties.storageEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageAccountAccessKey: {\n        serializedName: \"properties.storageAccountAccessKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retentionDays: {\n        serializedName: \"properties.retentionDays\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      auditActionsAndGroups: {\n        serializedName: \"properties.auditActionsAndGroups\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      storageAccountSubscriptionId: {\n        serializedName: \"properties.storageAccountSubscriptionId\",\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      isStorageSecondaryKeyInUse: {\n        serializedName: \"properties.isStorageSecondaryKeyInUse\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isAzureMonitorTargetEnabled: {\n        serializedName: \"properties.isAzureMonitorTargetEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      queueDelayMs: {\n        serializedName: \"properties.queueDelayMs\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const DataMaskingPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataMaskingPolicy\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      kind: {\n        serializedName: \"kind\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      managedBy: {\n        serializedName: \"managedBy\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      dataMaskingState: {\n        serializedName: \"properties.dataMaskingState\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Disabled\", \"Enabled\"]\n        }\n      },\n      exemptPrincipals: {\n        serializedName: \"properties.exemptPrincipals\",\n        type: {\n          name: \"String\"\n        }\n      },\n      applicationPrincipals: {\n        serializedName: \"properties.applicationPrincipals\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      maskingLevel: {\n        serializedName: \"properties.maskingLevel\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DataMaskingRule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataMaskingRule\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      kind: {\n        serializedName: \"kind\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      idPropertiesId: {\n        serializedName: \"properties.id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      aliasName: {\n        serializedName: \"properties.aliasName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ruleState: {\n        serializedName: \"properties.ruleState\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Disabled\", \"Enabled\"]\n        }\n      },\n      schemaName: {\n        serializedName: \"properties.schemaName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tableName: {\n        serializedName: \"properties.tableName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      columnName: {\n        serializedName: \"properties.columnName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      maskingFunction: {\n        serializedName: \"properties.maskingFunction\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Default\", \"CCN\", \"Email\", \"Number\", \"SSN\", \"Text\"]\n        }\n      },\n      numberFrom: {\n        serializedName: \"properties.numberFrom\",\n        type: {\n          name: \"String\"\n        }\n      },\n      numberTo: {\n        serializedName: \"properties.numberTo\",\n        type: {\n          name: \"String\"\n        }\n      },\n      prefixSize: {\n        serializedName: \"properties.prefixSize\",\n        type: {\n          name: \"String\"\n        }\n      },\n      suffixSize: {\n        serializedName: \"properties.suffixSize\",\n        type: {\n          name: \"String\"\n        }\n      },\n      replacementString: {\n        serializedName: \"properties.replacementString\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const WorkloadGroup: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WorkloadGroup\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      minResourcePercent: {\n        serializedName: \"properties.minResourcePercent\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxResourcePercent: {\n        serializedName: \"properties.maxResourcePercent\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      minResourcePercentPerRequest: {\n        serializedName: \"properties.minResourcePercentPerRequest\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxResourcePercentPerRequest: {\n        serializedName: \"properties.maxResourcePercentPerRequest\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      importance: {\n        serializedName: \"properties.importance\",\n        type: {\n          name: \"String\"\n        }\n      },\n      queryExecutionTimeout: {\n        serializedName: \"properties.queryExecutionTimeout\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const WorkloadClassifier: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WorkloadClassifier\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      memberName: {\n        serializedName: \"properties.memberName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      label: {\n        serializedName: \"properties.label\",\n        type: {\n          name: \"String\"\n        }\n      },\n      context: {\n        serializedName: \"properties.context\",\n        type: {\n          name: \"String\"\n        }\n      },\n      startTime: {\n        serializedName: \"properties.startTime\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endTime: {\n        serializedName: \"properties.endTime\",\n        type: {\n          name: \"String\"\n        }\n      },\n      importance: {\n        serializedName: \"properties.importance\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServerBlobAuditingPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServerBlobAuditingPolicy\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      state: {\n        serializedName: \"properties.state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Enabled\", \"Disabled\"]\n        }\n      },\n      storageEndpoint: {\n        serializedName: \"properties.storageEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageAccountAccessKey: {\n        serializedName: \"properties.storageAccountAccessKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retentionDays: {\n        serializedName: \"properties.retentionDays\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      auditActionsAndGroups: {\n        serializedName: \"properties.auditActionsAndGroups\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      storageAccountSubscriptionId: {\n        serializedName: \"properties.storageAccountSubscriptionId\",\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      isStorageSecondaryKeyInUse: {\n        serializedName: \"properties.isStorageSecondaryKeyInUse\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isAzureMonitorTargetEnabled: {\n        serializedName: \"properties.isAzureMonitorTargetEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      queueDelayMs: {\n        serializedName: \"properties.queueDelayMs\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      isDevopsAuditEnabled: {\n        serializedName: \"properties.isDevopsAuditEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExtendedServerBlobAuditingPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExtendedServerBlobAuditingPolicy\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      predicateExpression: {\n        serializedName: \"properties.predicateExpression\",\n        type: {\n          name: \"String\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Enabled\", \"Disabled\"]\n        }\n      },\n      storageEndpoint: {\n        serializedName: \"properties.storageEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageAccountAccessKey: {\n        serializedName: \"properties.storageAccountAccessKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retentionDays: {\n        serializedName: \"properties.retentionDays\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      auditActionsAndGroups: {\n        serializedName: \"properties.auditActionsAndGroups\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      storageAccountSubscriptionId: {\n        serializedName: \"properties.storageAccountSubscriptionId\",\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      isStorageSecondaryKeyInUse: {\n        serializedName: \"properties.isStorageSecondaryKeyInUse\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isAzureMonitorTargetEnabled: {\n        serializedName: \"properties.isAzureMonitorTargetEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      queueDelayMs: {\n        serializedName: \"properties.queueDelayMs\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      isDevopsAuditEnabled: {\n        serializedName: \"properties.isDevopsAuditEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServerSecurityAlertPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServerSecurityAlertPolicy\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      state: {\n        serializedName: \"properties.state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"New\", \"Enabled\", \"Disabled\"]\n        }\n      },\n      disabledAlerts: {\n        serializedName: \"properties.disabledAlerts\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      emailAddresses: {\n        serializedName: \"properties.emailAddresses\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      emailAccountAdmins: {\n        serializedName: \"properties.emailAccountAdmins\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      storageEndpoint: {\n        serializedName: \"properties.storageEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageAccountAccessKey: {\n        serializedName: \"properties.storageAccountAccessKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retentionDays: {\n        serializedName: \"properties.retentionDays\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      creationTime: {\n        serializedName: \"properties.creationTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServerVulnerabilityAssessment: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServerVulnerabilityAssessment\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      storageContainerPath: {\n        serializedName: \"properties.storageContainerPath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageContainerSasKey: {\n        serializedName: \"properties.storageContainerSasKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageAccountAccessKey: {\n        serializedName: \"properties.storageAccountAccessKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      recurringScans: {\n        serializedName: \"properties.recurringScans\",\n        type: {\n          name: \"Composite\",\n          className: \"VulnerabilityAssessmentRecurringScansProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const EncryptionProtector: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EncryptionProtector\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      kind: {\n        serializedName: \"kind\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      subregion: {\n        serializedName: \"properties.subregion\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      serverKeyName: {\n        serializedName: \"properties.serverKeyName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serverKeyType: {\n        serializedName: \"properties.serverKeyType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      uri: {\n        serializedName: \"properties.uri\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      thumbprint: {\n        serializedName: \"properties.thumbprint\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RecoverableSqlPool: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RecoverableSqlPool\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      edition: {\n        serializedName: \"properties.edition\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      serviceLevelObjective: {\n        serializedName: \"properties.serviceLevelObjective\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      elasticPoolName: {\n        serializedName: \"properties.elasticPoolName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      lastAvailableBackupDate: {\n        serializedName: \"properties.lastAvailableBackupDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const WorkspaceAadAdminInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WorkspaceAadAdminInfo\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      tenantId: {\n        serializedName: \"properties.tenantId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      login: {\n        serializedName: \"properties.login\",\n        type: {\n          name: \"String\"\n        }\n      },\n      administratorType: {\n        serializedName: \"properties.administratorType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sid: {\n        serializedName: \"properties.sid\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedIdentitySqlControlSettingsModel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedIdentitySqlControlSettingsModel\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      grantSqlControlToManagedIdentity: {\n        serializedName: \"properties.grantSqlControlToManagedIdentity\",\n        type: {\n          name: \"Composite\",\n          className:\n            \"ManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentity\"\n        }\n      }\n    }\n  }\n};\n\nexport const RestorableDroppedSqlPool: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RestorableDroppedSqlPool\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      databaseName: {\n        serializedName: \"properties.databaseName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      edition: {\n        serializedName: \"properties.edition\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      maxSizeBytes: {\n        serializedName: \"properties.maxSizeBytes\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      serviceLevelObjective: {\n        serializedName: \"properties.serviceLevelObjective\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      elasticPoolName: {\n        serializedName: \"properties.elasticPoolName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      creationDate: {\n        serializedName: \"properties.creationDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      deletionDate: {\n        serializedName: \"properties.deletionDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      earliestRestoreDate: {\n        serializedName: \"properties.earliestRestoreDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const AttachedDatabaseConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AttachedDatabaseConfiguration\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      databaseName: {\n        serializedName: \"properties.databaseName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      kustoPoolResourceId: {\n        serializedName: \"properties.clusterResourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      attachedDatabaseNames: {\n        serializedName: \"properties.attachedDatabaseNames\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      defaultPrincipalsModificationKind: {\n        serializedName: \"properties.defaultPrincipalsModificationKind\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tableLevelSharingProperties: {\n        serializedName: \"properties.tableLevelSharingProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"TableLevelSharingProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const Database: coreClient.CompositeMapper = {\n  serializedName: \"Database\",\n  type: {\n    name: \"Composite\",\n    className: \"Database\",\n    uberParent: \"Resource\",\n    polymorphicDiscriminator: {\n      serializedName: \"kind\",\n      clientName: \"kind\"\n    },\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      kind: {\n        serializedName: \"kind\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      }\n    }\n  }\n};\n\nexport const DataConnection: coreClient.CompositeMapper = {\n  serializedName: \"DataConnection\",\n  type: {\n    name: \"Composite\",\n    className: \"DataConnection\",\n    uberParent: \"Resource\",\n    polymorphicDiscriminator: {\n      serializedName: \"kind\",\n      clientName: \"kind\"\n    },\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      kind: {\n        serializedName: \"kind\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      }\n    }\n  }\n};\n\nexport const ClusterPrincipalAssignment: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ClusterPrincipalAssignment\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      },\n      principalId: {\n        serializedName: \"properties.principalId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      role: {\n        serializedName: \"properties.role\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"properties.tenantId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      principalType: {\n        serializedName: \"properties.principalType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantName: {\n        serializedName: \"properties.tenantName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      principalName: {\n        serializedName: \"properties.principalName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DatabasePrincipalAssignment: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DatabasePrincipalAssignment\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      },\n      principalId: {\n        serializedName: \"properties.principalId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      role: {\n        serializedName: \"properties.role\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"properties.tenantId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      principalType: {\n        serializedName: \"properties.principalType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantName: {\n        serializedName: \"properties.tenantName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      principalName: {\n        serializedName: \"properties.principalName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateLinkHub: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateLinkHub\",\n    modelProperties: {\n      ...TrackedResource.type.modelProperties,\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      privateEndpointConnections: {\n        serializedName: \"properties.privateEndpointConnections\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PrivateEndpointConnectionForPrivateLinkHubBasic\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SqlPool: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SqlPool\",\n    modelProperties: {\n      ...TrackedResource.type.modelProperties,\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      maxSizeBytes: {\n        serializedName: \"properties.maxSizeBytes\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      collation: {\n        defaultValue: \"\",\n        serializedName: \"properties.collation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceDatabaseId: {\n        serializedName: \"properties.sourceDatabaseId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      recoverableDatabaseId: {\n        serializedName: \"properties.recoverableDatabaseId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"properties.status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      restorePointInTime: {\n        serializedName: \"properties.restorePointInTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      createMode: {\n        serializedName: \"properties.createMode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      creationDate: {\n        serializedName: \"properties.creationDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      storageAccountType: {\n        defaultValue: \"GRS\",\n        serializedName: \"properties.storageAccountType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceDatabaseDeletionDate: {\n        serializedName: \"properties.sourceDatabaseDeletionDate\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const Workspace: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Workspace\",\n    modelProperties: {\n      ...TrackedResource.type.modelProperties,\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedIdentity\"\n        }\n      },\n      defaultDataLakeStorage: {\n        serializedName: \"properties.defaultDataLakeStorage\",\n        type: {\n          name: \"Composite\",\n          className: \"DataLakeStorageAccountDetails\"\n        }\n      },\n      sqlAdministratorLoginPassword: {\n        serializedName: \"properties.sqlAdministratorLoginPassword\",\n        type: {\n          name: \"String\"\n        }\n      },\n      managedResourceGroupName: {\n        serializedName: \"properties.managedResourceGroupName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      sqlAdministratorLogin: {\n        serializedName: \"properties.sqlAdministratorLogin\",\n        type: {\n          name: \"String\"\n        }\n      },\n      virtualNetworkProfile: {\n        serializedName: \"properties.virtualNetworkProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"VirtualNetworkProfile\"\n        }\n      },\n      connectivityEndpoints: {\n        serializedName: \"properties.connectivityEndpoints\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      managedVirtualNetwork: {\n        serializedName: \"properties.managedVirtualNetwork\",\n        type: {\n          name: \"String\"\n        }\n      },\n      privateEndpointConnections: {\n        serializedName: \"properties.privateEndpointConnections\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PrivateEndpointConnection\"\n            }\n          }\n        }\n      },\n      encryption: {\n        serializedName: \"properties.encryption\",\n        type: {\n          name: \"Composite\",\n          className: \"EncryptionDetails\"\n        }\n      },\n      workspaceUID: {\n        serializedName: \"properties.workspaceUID\",\n        readOnly: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      extraProperties: {\n        serializedName: \"properties.extraProperties\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n          }\n        }\n      },\n      managedVirtualNetworkSettings: {\n        serializedName: \"properties.managedVirtualNetworkSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedVirtualNetworkSettings\"\n        }\n      },\n      workspaceRepositoryConfiguration: {\n        serializedName: \"properties.workspaceRepositoryConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"WorkspaceRepositoryConfiguration\"\n        }\n      },\n      purviewConfiguration: {\n        serializedName: \"properties.purviewConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"PurviewConfiguration\"\n        }\n      },\n      adlaResourceId: {\n        serializedName: \"properties.adlaResourceId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      publicNetworkAccess: {\n        serializedName: \"properties.publicNetworkAccess\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cspWorkspaceAdminProperties: {\n        serializedName: \"properties.cspWorkspaceAdminProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"CspWorkspaceAdminProperties\"\n        }\n      },\n      settings: {\n        serializedName: \"properties.settings\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n          }\n        }\n      },\n      azureADOnlyAuthentication: {\n        serializedName: \"properties.azureADOnlyAuthentication\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      trustedServiceBypassEnabled: {\n        defaultValue: false,\n        serializedName: \"properties.trustedServiceBypassEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const BigDataPoolResourceInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BigDataPoolResourceInfo\",\n    modelProperties: {\n      ...TrackedResource.type.modelProperties,\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      autoScale: {\n        serializedName: \"properties.autoScale\",\n        type: {\n          name: \"Composite\",\n          className: \"AutoScaleProperties\"\n        }\n      },\n      creationDate: {\n        serializedName: \"properties.creationDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      autoPause: {\n        serializedName: \"properties.autoPause\",\n        type: {\n          name: \"Composite\",\n          className: \"AutoPauseProperties\"\n        }\n      },\n      isComputeIsolationEnabled: {\n        serializedName: \"properties.isComputeIsolationEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      sessionLevelPackagesEnabled: {\n        serializedName: \"properties.sessionLevelPackagesEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      cacheSize: {\n        serializedName: \"properties.cacheSize\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      dynamicExecutorAllocation: {\n        serializedName: \"properties.dynamicExecutorAllocation\",\n        type: {\n          name: \"Composite\",\n          className: \"DynamicExecutorAllocation\"\n        }\n      },\n      sparkEventsFolder: {\n        serializedName: \"properties.sparkEventsFolder\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nodeCount: {\n        serializedName: \"properties.nodeCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      libraryRequirements: {\n        serializedName: \"properties.libraryRequirements\",\n        type: {\n          name: \"Composite\",\n          className: \"LibraryRequirements\"\n        }\n      },\n      customLibraries: {\n        serializedName: \"properties.customLibraries\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"LibraryInfo\"\n            }\n          }\n        }\n      },\n      sparkConfigProperties: {\n        serializedName: \"properties.sparkConfigProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"SparkConfigProperties\"\n        }\n      },\n      sparkVersion: {\n        serializedName: \"properties.sparkVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      defaultSparkLogFolder: {\n        serializedName: \"properties.defaultSparkLogFolder\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nodeSize: {\n        serializedName: \"properties.nodeSize\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nodeSizeFamily: {\n        serializedName: \"properties.nodeSizeFamily\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastSucceededTimestamp: {\n        serializedName: \"properties.lastSucceededTimestamp\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const KustoPool: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KustoPool\",\n    modelProperties: {\n      ...TrackedResource.type.modelProperties,\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"AzureSku\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      uri: {\n        serializedName: \"properties.uri\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      dataIngestionUri: {\n        serializedName: \"properties.dataIngestionUri\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      stateReason: {\n        serializedName: \"properties.stateReason\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      optimizedAutoscale: {\n        serializedName: \"properties.optimizedAutoscale\",\n        type: {\n          name: \"Composite\",\n          className: \"OptimizedAutoscale\"\n        }\n      },\n      enableStreamingIngest: {\n        defaultValue: false,\n        serializedName: \"properties.enableStreamingIngest\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enablePurge: {\n        defaultValue: false,\n        serializedName: \"properties.enablePurge\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      languageExtensions: {\n        serializedName: \"properties.languageExtensions\",\n        type: {\n          name: \"Composite\",\n          className: \"LanguageExtensionsList\"\n        }\n      },\n      workspaceUID: {\n        serializedName: \"properties.workspaceUID\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SubResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SubResource\",\n    modelProperties: {\n      ...AzureEntityResource.type.modelProperties\n    }\n  }\n};\n\nexport const ReadWriteDatabase: coreClient.CompositeMapper = {\n  serializedName: \"ReadWrite\",\n  type: {\n    name: \"Composite\",\n    className: \"ReadWriteDatabase\",\n    uberParent: \"Resource\",\n    polymorphicDiscriminator: Resource.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...Database.type.modelProperties,\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      softDeletePeriod: {\n        serializedName: \"properties.softDeletePeriod\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      hotCachePeriod: {\n        serializedName: \"properties.hotCachePeriod\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      statistics: {\n        serializedName: \"properties.statistics\",\n        type: {\n          name: \"Composite\",\n          className: \"DatabaseStatistics\"\n        }\n      },\n      isFollowed: {\n        serializedName: \"properties.isFollowed\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReadOnlyFollowingDatabase: coreClient.CompositeMapper = {\n  serializedName: \"ReadOnlyFollowing\",\n  type: {\n    name: \"Composite\",\n    className: \"ReadOnlyFollowingDatabase\",\n    uberParent: \"Resource\",\n    polymorphicDiscriminator: Resource.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...Database.type.modelProperties,\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      softDeletePeriod: {\n        serializedName: \"properties.softDeletePeriod\",\n        readOnly: true,\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      hotCachePeriod: {\n        serializedName: \"properties.hotCachePeriod\",\n        type: {\n          name: \"TimeSpan\"\n        }\n      },\n      statistics: {\n        serializedName: \"properties.statistics\",\n        type: {\n          name: \"Composite\",\n          className: \"DatabaseStatistics\"\n        }\n      },\n      leaderClusterResourceId: {\n        serializedName: \"properties.leaderClusterResourceId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      attachedDatabaseConfigurationName: {\n        serializedName: \"properties.attachedDatabaseConfigurationName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      principalsModificationKind: {\n        serializedName: \"properties.principalsModificationKind\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EventHubDataConnection: coreClient.CompositeMapper = {\n  serializedName: \"EventHub\",\n  type: {\n    name: \"Composite\",\n    className: \"EventHubDataConnection\",\n    uberParent: \"Resource\",\n    polymorphicDiscriminator: Resource.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DataConnection.type.modelProperties,\n      eventHubResourceId: {\n        serializedName: \"properties.eventHubResourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      consumerGroup: {\n        serializedName: \"properties.consumerGroup\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tableName: {\n        serializedName: \"properties.tableName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      mappingRuleName: {\n        serializedName: \"properties.mappingRuleName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dataFormat: {\n        serializedName: \"properties.dataFormat\",\n        type: {\n          name: \"String\"\n        }\n      },\n      eventSystemProperties: {\n        serializedName: \"properties.eventSystemProperties\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      compression: {\n        serializedName: \"properties.compression\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      managedIdentityResourceId: {\n        serializedName: \"properties.managedIdentityResourceId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IotHubDataConnection: coreClient.CompositeMapper = {\n  serializedName: \"IotHub\",\n  type: {\n    name: \"Composite\",\n    className: \"IotHubDataConnection\",\n    uberParent: \"Resource\",\n    polymorphicDiscriminator: Resource.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DataConnection.type.modelProperties,\n      iotHubResourceId: {\n        serializedName: \"properties.iotHubResourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      consumerGroup: {\n        serializedName: \"properties.consumerGroup\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tableName: {\n        serializedName: \"properties.tableName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      mappingRuleName: {\n        serializedName: \"properties.mappingRuleName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dataFormat: {\n        serializedName: \"properties.dataFormat\",\n        type: {\n          name: \"String\"\n        }\n      },\n      eventSystemProperties: {\n        serializedName: \"properties.eventSystemProperties\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      sharedAccessPolicyName: {\n        serializedName: \"properties.sharedAccessPolicyName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EventGridDataConnection: coreClient.CompositeMapper = {\n  serializedName: \"EventGrid\",\n  type: {\n    name: \"Composite\",\n    className: \"EventGridDataConnection\",\n    uberParent: \"Resource\",\n    polymorphicDiscriminator: Resource.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...DataConnection.type.modelProperties,\n      storageAccountResourceId: {\n        serializedName: \"properties.storageAccountResourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      eventHubResourceId: {\n        serializedName: \"properties.eventHubResourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      consumerGroup: {\n        serializedName: \"properties.consumerGroup\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tableName: {\n        serializedName: \"properties.tableName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      mappingRuleName: {\n        serializedName: \"properties.mappingRuleName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dataFormat: {\n        serializedName: \"properties.dataFormat\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ignoreFirstRecord: {\n        serializedName: \"properties.ignoreFirstRecord\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      blobStorageEventType: {\n        serializedName: \"properties.blobStorageEventType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LibraryResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LibraryResource\",\n    modelProperties: {\n      ...SubResource.type.modelProperties,\n      namePropertiesName: {\n        serializedName: \"properties.name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      path: {\n        serializedName: \"properties.path\",\n        type: {\n          name: \"String\"\n        }\n      },\n      containerName: {\n        serializedName: \"properties.containerName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      uploadedTimestamp: {\n        serializedName: \"properties.uploadedTimestamp\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      typePropertiesType: {\n        serializedName: \"properties.type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningStatus: {\n        serializedName: \"properties.provisioningStatus\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      creatorId: {\n        serializedName: \"properties.creatorId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IntegrationRuntimeResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IntegrationRuntimeResource\",\n    modelProperties: {\n      ...SubResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"IntegrationRuntime\"\n        }\n      }\n    }\n  }\n};\n\nexport const SparkConfigurationResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SparkConfigurationResource\",\n    modelProperties: {\n      ...SubResource.type.modelProperties,\n      description: {\n        serializedName: \"properties.description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      configs: {\n        serializedName: \"properties.configs\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      annotations: {\n        serializedName: \"properties.annotations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      notes: {\n        serializedName: \"properties.notes\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdBy: {\n        serializedName: \"properties.createdBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      created: {\n        serializedName: \"properties.created\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport let discriminators = {\n  IntegrationRuntime: IntegrationRuntime,\n  SsisObjectMetadata: SsisObjectMetadata,\n  IntegrationRuntimeStatus: IntegrationRuntimeStatus,\n  SecretBase: SecretBase,\n  CustomSetupBase: CustomSetupBase,\n  LinkedIntegrationRuntimeType: LinkedIntegrationRuntimeType,\n  \"IntegrationRuntime.Managed\": ManagedIntegrationRuntime,\n  \"IntegrationRuntime.SelfHosted\": SelfHostedIntegrationRuntime,\n  \"SsisObjectMetadata.Folder\": SsisFolder,\n  \"SsisObjectMetadata.Project\": SsisProject,\n  \"SsisObjectMetadata.Package\": SsisPackage,\n  \"SsisObjectMetadata.Environment\": SsisEnvironment,\n  \"IntegrationRuntimeStatus.Managed\": ManagedIntegrationRuntimeStatus,\n  \"IntegrationRuntimeStatus.SelfHosted\": SelfHostedIntegrationRuntimeStatus,\n  \"SecretBase.SecureString\": SecureString,\n  \"CustomSetupBase.CmdkeySetup\": CmdkeySetup,\n  \"CustomSetupBase.EnvironmentVariableSetup\": EnvironmentVariableSetup,\n  \"CustomSetupBase.ComponentSetup\": ComponentSetup,\n  \"LinkedIntegrationRuntimeType.Key\": LinkedIntegrationRuntimeKeyAuthorization,\n  \"LinkedIntegrationRuntimeType.RBAC\": LinkedIntegrationRuntimeRbacAuthorization,\n  \"Resource.Database\": Database,\n  \"Resource.DataConnection\": DataConnection,\n  \"Resource.ReadWrite\": ReadWriteDatabase,\n  \"Resource.ReadOnlyFollowing\": ReadOnlyFollowingDatabase,\n  \"Resource.EventHub\": EventHubDataConnection,\n  \"Resource.IotHub\": IotHubDataConnection,\n  \"Resource.EventGrid\": EventGridDataConnection\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\nimport {\n  AzureADOnlyAuthentication as AzureADOnlyAuthenticationMapper,\n  CheckNameAvailabilityRequest as CheckNameAvailabilityRequestMapper,\n  IpFirewallRuleInfo as IpFirewallRuleInfoMapper,\n  ReplaceAllIpFirewallRulesRequest as ReplaceAllIpFirewallRulesRequestMapper,\n  Key as KeyMapper,\n  PrivateEndpointConnection as PrivateEndpointConnectionMapper,\n  PrivateLinkHubPatchInfo as PrivateLinkHubPatchInfoMapper,\n  PrivateLinkHub as PrivateLinkHubMapper,\n  SqlPoolPatchInfo as SqlPoolPatchInfoMapper,\n  SqlPool as SqlPoolMapper,\n  ResourceMoveDefinition as ResourceMoveDefinitionMapper,\n  MetadataSyncConfig as MetadataSyncConfigMapper,\n  GeoBackupPolicy as GeoBackupPolicyMapper,\n  CreateSqlPoolRestorePointDefinition as CreateSqlPoolRestorePointDefinitionMapper,\n  MaintenanceWindows as MaintenanceWindowsMapper,\n  TransparentDataEncryption as TransparentDataEncryptionMapper,\n  SqlPoolBlobAuditingPolicy as SqlPoolBlobAuditingPolicyMapper,\n  SensitivityLabelUpdateList as SensitivityLabelUpdateListMapper,\n  SensitivityLabel as SensitivityLabelMapper,\n  RecommendedSensitivityLabelUpdateList as RecommendedSensitivityLabelUpdateListMapper,\n  SqlPoolVulnerabilityAssessment as SqlPoolVulnerabilityAssessmentMapper,\n  SqlPoolSecurityAlertPolicy as SqlPoolSecurityAlertPolicyMapper,\n  SqlPoolVulnerabilityAssessmentRuleBaseline as SqlPoolVulnerabilityAssessmentRuleBaselineMapper,\n  ExtendedSqlPoolBlobAuditingPolicy as ExtendedSqlPoolBlobAuditingPolicyMapper,\n  DataMaskingPolicy as DataMaskingPolicyMapper,\n  DataMaskingRule as DataMaskingRuleMapper,\n  WorkloadGroup as WorkloadGroupMapper,\n  WorkloadClassifier as WorkloadClassifierMapper,\n  ServerBlobAuditingPolicy as ServerBlobAuditingPolicyMapper,\n  ExtendedServerBlobAuditingPolicy as ExtendedServerBlobAuditingPolicyMapper,\n  ServerSecurityAlertPolicy as ServerSecurityAlertPolicyMapper,\n  ServerVulnerabilityAssessment as ServerVulnerabilityAssessmentMapper,\n  EncryptionProtector as EncryptionProtectorMapper,\n  WorkspacePatchInfo as WorkspacePatchInfoMapper,\n  Workspace as WorkspaceMapper,\n  WorkspaceAadAdminInfo as WorkspaceAadAdminInfoMapper,\n  ManagedIdentitySqlControlSettingsModel as ManagedIdentitySqlControlSettingsModelMapper,\n  BigDataPoolPatchInfo as BigDataPoolPatchInfoMapper,\n  BigDataPoolResourceInfo as BigDataPoolResourceInfoMapper,\n  UpdateIntegrationRuntimeRequest as UpdateIntegrationRuntimeRequestMapper,\n  IntegrationRuntimeResource as IntegrationRuntimeResourceMapper,\n  GetSsisObjectMetadataRequest as GetSsisObjectMetadataRequestMapper,\n  UpdateIntegrationRuntimeNodeRequest as UpdateIntegrationRuntimeNodeRequestMapper,\n  IntegrationRuntimeRegenerateKeyParameters as IntegrationRuntimeRegenerateKeyParametersMapper,\n  KustoPoolCheckNameRequest as KustoPoolCheckNameRequestMapper,\n  KustoPool as KustoPoolMapper,\n  KustoPoolUpdate as KustoPoolUpdateMapper,\n  LanguageExtensionsList as LanguageExtensionsListMapper,\n  FollowerDatabaseDefinition as FollowerDatabaseDefinitionMapper,\n  DatabaseCheckNameRequest as DatabaseCheckNameRequestMapper,\n  AttachedDatabaseConfiguration as AttachedDatabaseConfigurationMapper,\n  Database as DatabaseMapper,\n  DataConnectionCheckNameRequest as DataConnectionCheckNameRequestMapper,\n  DataConnectionValidation as DataConnectionValidationMapper,\n  DataConnection as DataConnectionMapper,\n  ClusterPrincipalAssignmentCheckNameRequest as ClusterPrincipalAssignmentCheckNameRequestMapper,\n  ClusterPrincipalAssignment as ClusterPrincipalAssignmentMapper,\n  DatabasePrincipalAssignmentCheckNameRequest as DatabasePrincipalAssignmentCheckNameRequestMapper,\n  DatabasePrincipalAssignment as DatabasePrincipalAssignmentMapper\n} from \"../models/mappers\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2021-06-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const subscriptionId: OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    constraints: {\n      MinLength: 1\n    },\n    serializedName: \"subscriptionId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const resourceGroupName: OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    constraints: {\n      MaxLength: 90,\n      MinLength: 1\n    },\n    serializedName: \"resourceGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const workspaceName: OperationURLParameter = {\n  parameterPath: \"workspaceName\",\n  mapper: {\n    serializedName: \"workspaceName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const azureADOnlyAuthenticationName: OperationURLParameter = {\n  parameterPath: \"azureADOnlyAuthenticationName\",\n  mapper: {\n    serializedName: \"azureADOnlyAuthenticationName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const azureADOnlyAuthenticationInfo: OperationParameter = {\n  parameterPath: \"azureADOnlyAuthenticationInfo\",\n  mapper: AzureADOnlyAuthenticationMapper\n};\n\nexport const nextLink: OperationURLParameter = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const request: OperationParameter = {\n  parameterPath: \"request\",\n  mapper: CheckNameAvailabilityRequestMapper\n};\n\nexport const operationId: OperationURLParameter = {\n  parameterPath: \"operationId\",\n  mapper: {\n    serializedName: \"operationId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const ipFirewallRuleInfo: OperationParameter = {\n  parameterPath: \"ipFirewallRuleInfo\",\n  mapper: IpFirewallRuleInfoMapper\n};\n\nexport const ruleName: OperationURLParameter = {\n  parameterPath: \"ruleName\",\n  mapper: {\n    serializedName: \"ruleName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const request1: OperationParameter = {\n  parameterPath: \"request\",\n  mapper: ReplaceAllIpFirewallRulesRequestMapper\n};\n\nexport const keyName: OperationURLParameter = {\n  parameterPath: \"keyName\",\n  mapper: {\n    serializedName: \"keyName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const keyProperties: OperationParameter = {\n  parameterPath: \"keyProperties\",\n  mapper: KeyMapper\n};\n\nexport const privateEndpointConnectionName: OperationURLParameter = {\n  parameterPath: \"privateEndpointConnectionName\",\n  mapper: {\n    serializedName: \"privateEndpointConnectionName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const request2: OperationParameter = {\n  parameterPath: \"request\",\n  mapper: PrivateEndpointConnectionMapper\n};\n\nexport const privateLinkResourceName: OperationURLParameter = {\n  parameterPath: \"privateLinkResourceName\",\n  mapper: {\n    serializedName: \"privateLinkResourceName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const privateLinkHubName: OperationURLParameter = {\n  parameterPath: \"privateLinkHubName\",\n  mapper: {\n    serializedName: \"privateLinkHubName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const privateLinkHubPatchInfo: OperationParameter = {\n  parameterPath: \"privateLinkHubPatchInfo\",\n  mapper: PrivateLinkHubPatchInfoMapper\n};\n\nexport const privateLinkHubInfo: OperationParameter = {\n  parameterPath: \"privateLinkHubInfo\",\n  mapper: PrivateLinkHubMapper\n};\n\nexport const sqlPoolName: OperationURLParameter = {\n  parameterPath: \"sqlPoolName\",\n  mapper: {\n    serializedName: \"sqlPoolName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const sqlPoolInfo: OperationParameter = {\n  parameterPath: \"sqlPoolInfo\",\n  mapper: SqlPoolPatchInfoMapper\n};\n\nexport const sqlPoolInfo1: OperationParameter = {\n  parameterPath: \"sqlPoolInfo\",\n  mapper: SqlPoolMapper\n};\n\nexport const parameters: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ResourceMoveDefinitionMapper\n};\n\nexport const metadataSyncConfiguration: OperationParameter = {\n  parameterPath: \"metadataSyncConfiguration\",\n  mapper: MetadataSyncConfigMapper\n};\n\nexport const parameters1: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: GeoBackupPolicyMapper\n};\n\nexport const geoBackupPolicyName: OperationURLParameter = {\n  parameterPath: \"geoBackupPolicyName\",\n  mapper: {\n    serializedName: \"geoBackupPolicyName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const dataWarehouseUserActivityName: OperationURLParameter = {\n  parameterPath: \"dataWarehouseUserActivityName\",\n  mapper: {\n    serializedName: \"dataWarehouseUserActivityName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters2: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: CreateSqlPoolRestorePointDefinitionMapper\n};\n\nexport const restorePointName: OperationURLParameter = {\n  parameterPath: \"restorePointName\",\n  mapper: {\n    serializedName: \"restorePointName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const linkId: OperationURLParameter = {\n  parameterPath: \"linkId\",\n  mapper: {\n    serializedName: \"linkId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const maintenanceWindowName: OperationQueryParameter = {\n  parameterPath: \"maintenanceWindowName\",\n  mapper: {\n    serializedName: \"maintenanceWindowName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters3: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: MaintenanceWindowsMapper\n};\n\nexport const maintenanceWindowOptionsName: OperationQueryParameter = {\n  parameterPath: \"maintenanceWindowOptionsName\",\n  mapper: {\n    serializedName: \"maintenanceWindowOptionsName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const transparentDataEncryptionName: OperationURLParameter = {\n  parameterPath: \"transparentDataEncryptionName\",\n  mapper: {\n    serializedName: \"transparentDataEncryptionName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters4: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: TransparentDataEncryptionMapper\n};\n\nexport const blobAuditingPolicyName: OperationURLParameter = {\n  parameterPath: \"blobAuditingPolicyName\",\n  mapper: {\n    defaultValue: \"default\",\n    isConstant: true,\n    serializedName: \"blobAuditingPolicyName\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters5: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: SqlPoolBlobAuditingPolicyMapper\n};\n\nexport const filter: OperationQueryParameter = {\n  parameterPath: [\"options\", \"filter\"],\n  mapper: {\n    serializedName: \"$filter\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters6: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: SensitivityLabelUpdateListMapper\n};\n\nexport const includeDisabledRecommendations: OperationQueryParameter = {\n  parameterPath: [\"options\", \"includeDisabledRecommendations\"],\n  mapper: {\n    serializedName: \"includeDisabledRecommendations\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const skipToken: OperationQueryParameter = {\n  parameterPath: [\"options\", \"skipToken\"],\n  mapper: {\n    serializedName: \"$skipToken\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters7: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: SensitivityLabelMapper\n};\n\nexport const schemaName: OperationURLParameter = {\n  parameterPath: \"schemaName\",\n  mapper: {\n    serializedName: \"schemaName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const tableName: OperationURLParameter = {\n  parameterPath: \"tableName\",\n  mapper: {\n    serializedName: \"tableName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const columnName: OperationURLParameter = {\n  parameterPath: \"columnName\",\n  mapper: {\n    serializedName: \"columnName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const sensitivityLabelSource: OperationURLParameter = {\n  parameterPath: \"sensitivityLabelSource\",\n  mapper: {\n    defaultValue: \"current\",\n    isConstant: true,\n    serializedName: \"sensitivityLabelSource\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const sensitivityLabelSource1: OperationURLParameter = {\n  parameterPath: \"sensitivityLabelSource\",\n  mapper: {\n    serializedName: \"sensitivityLabelSource\",\n    required: true,\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"current\", \"recommended\"]\n    }\n  }\n};\n\nexport const sensitivityLabelSource2: OperationURLParameter = {\n  parameterPath: \"sensitivityLabelSource\",\n  mapper: {\n    defaultValue: \"recommended\",\n    isConstant: true,\n    serializedName: \"sensitivityLabelSource\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters8: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: RecommendedSensitivityLabelUpdateListMapper\n};\n\nexport const connectionPolicyName: OperationURLParameter = {\n  parameterPath: \"connectionPolicyName\",\n  mapper: {\n    serializedName: \"connectionPolicyName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const vulnerabilityAssessmentName: OperationURLParameter = {\n  parameterPath: \"vulnerabilityAssessmentName\",\n  mapper: {\n    serializedName: \"vulnerabilityAssessmentName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters9: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: SqlPoolVulnerabilityAssessmentMapper\n};\n\nexport const scanId: OperationURLParameter = {\n  parameterPath: \"scanId\",\n  mapper: {\n    serializedName: \"scanId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const securityAlertPolicyName: OperationURLParameter = {\n  parameterPath: \"securityAlertPolicyName\",\n  mapper: {\n    serializedName: \"securityAlertPolicyName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters10: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: SqlPoolSecurityAlertPolicyMapper\n};\n\nexport const parameters11: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: SqlPoolVulnerabilityAssessmentRuleBaselineMapper\n};\n\nexport const ruleId: OperationURLParameter = {\n  parameterPath: \"ruleId\",\n  mapper: {\n    serializedName: \"ruleId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const baselineName: OperationURLParameter = {\n  parameterPath: \"baselineName\",\n  mapper: {\n    serializedName: \"baselineName\",\n    required: true,\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"master\", \"default\"]\n    }\n  }\n};\n\nexport const parameters12: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ExtendedSqlPoolBlobAuditingPolicyMapper\n};\n\nexport const parameters13: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: DataMaskingPolicyMapper\n};\n\nexport const dataMaskingPolicyName: OperationURLParameter = {\n  parameterPath: \"dataMaskingPolicyName\",\n  mapper: {\n    defaultValue: \"Default\",\n    isConstant: true,\n    serializedName: \"dataMaskingPolicyName\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters14: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: DataMaskingRuleMapper\n};\n\nexport const dataMaskingRuleName: OperationURLParameter = {\n  parameterPath: \"dataMaskingRuleName\",\n  mapper: {\n    serializedName: \"dataMaskingRuleName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const workloadGroupName: OperationURLParameter = {\n  parameterPath: \"workloadGroupName\",\n  mapper: {\n    serializedName: \"workloadGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters15: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: WorkloadGroupMapper\n};\n\nexport const workloadClassifierName: OperationURLParameter = {\n  parameterPath: \"workloadClassifierName\",\n  mapper: {\n    serializedName: \"workloadClassifierName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters16: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: WorkloadClassifierMapper\n};\n\nexport const blobAuditingPolicyName1: OperationURLParameter = {\n  parameterPath: \"blobAuditingPolicyName\",\n  mapper: {\n    serializedName: \"blobAuditingPolicyName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters17: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ServerBlobAuditingPolicyMapper\n};\n\nexport const parameters18: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ExtendedServerBlobAuditingPolicyMapper\n};\n\nexport const securityAlertPolicyName1: OperationURLParameter = {\n  parameterPath: \"securityAlertPolicyName\",\n  mapper: {\n    serializedName: \"securityAlertPolicyName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters19: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ServerSecurityAlertPolicyMapper\n};\n\nexport const parameters20: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ServerVulnerabilityAssessmentMapper\n};\n\nexport const encryptionProtectorName: OperationURLParameter = {\n  parameterPath: \"encryptionProtectorName\",\n  mapper: {\n    serializedName: \"encryptionProtectorName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters21: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: EncryptionProtectorMapper\n};\n\nexport const workspacePatchInfo: OperationParameter = {\n  parameterPath: \"workspacePatchInfo\",\n  mapper: WorkspacePatchInfoMapper\n};\n\nexport const workspaceInfo: OperationParameter = {\n  parameterPath: \"workspaceInfo\",\n  mapper: WorkspaceMapper\n};\n\nexport const aadAdminInfo: OperationParameter = {\n  parameterPath: \"aadAdminInfo\",\n  mapper: WorkspaceAadAdminInfoMapper\n};\n\nexport const managedIdentitySqlControlSettings: OperationParameter = {\n  parameterPath: \"managedIdentitySqlControlSettings\",\n  mapper: ManagedIdentitySqlControlSettingsModelMapper\n};\n\nexport const restorableDroppedSqlPoolId: OperationURLParameter = {\n  parameterPath: \"restorableDroppedSqlPoolId\",\n  mapper: {\n    serializedName: \"restorableDroppedSqlPoolId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const apiVersion1: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2021-06-01-preview\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const bigDataPoolName: OperationURLParameter = {\n  parameterPath: \"bigDataPoolName\",\n  mapper: {\n    serializedName: \"bigDataPoolName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const bigDataPoolPatchInfo: OperationParameter = {\n  parameterPath: \"bigDataPoolPatchInfo\",\n  mapper: BigDataPoolPatchInfoMapper\n};\n\nexport const bigDataPoolInfo: OperationParameter = {\n  parameterPath: \"bigDataPoolInfo\",\n  mapper: BigDataPoolResourceInfoMapper\n};\n\nexport const force: OperationQueryParameter = {\n  parameterPath: [\"options\", \"force\"],\n  mapper: {\n    defaultValue: false,\n    serializedName: \"force\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const libraryName: OperationURLParameter = {\n  parameterPath: \"libraryName\",\n  mapper: {\n    serializedName: \"libraryName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const updateIntegrationRuntimeRequest: OperationParameter = {\n  parameterPath: \"updateIntegrationRuntimeRequest\",\n  mapper: UpdateIntegrationRuntimeRequestMapper\n};\n\nexport const integrationRuntimeName: OperationURLParameter = {\n  parameterPath: \"integrationRuntimeName\",\n  mapper: {\n    serializedName: \"integrationRuntimeName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const ifNoneMatch: OperationParameter = {\n  parameterPath: [\"options\", \"ifNoneMatch\"],\n  mapper: {\n    serializedName: \"If-None-Match\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const integrationRuntime: OperationParameter = {\n  parameterPath: \"integrationRuntime\",\n  mapper: IntegrationRuntimeResourceMapper\n};\n\nexport const ifMatch: OperationParameter = {\n  parameterPath: [\"options\", \"ifMatch\"],\n  mapper: {\n    serializedName: \"If-Match\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const nodeName: OperationURLParameter = {\n  parameterPath: \"nodeName\",\n  mapper: {\n    serializedName: \"nodeName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const getMetadataRequest: OperationParameter = {\n  parameterPath: [\"options\", \"getMetadataRequest\"],\n  mapper: GetSsisObjectMetadataRequestMapper\n};\n\nexport const updateIntegrationRuntimeNodeRequest: OperationParameter = {\n  parameterPath: \"updateIntegrationRuntimeNodeRequest\",\n  mapper: UpdateIntegrationRuntimeNodeRequestMapper\n};\n\nexport const regenerateKeyParameters: OperationParameter = {\n  parameterPath: \"regenerateKeyParameters\",\n  mapper: IntegrationRuntimeRegenerateKeyParametersMapper\n};\n\nexport const sparkConfigurationName: OperationURLParameter = {\n  parameterPath: \"sparkConfigurationName\",\n  mapper: {\n    serializedName: \"sparkConfigurationName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const kustoPoolName: OperationParameter = {\n  parameterPath: \"kustoPoolName\",\n  mapper: KustoPoolCheckNameRequestMapper\n};\n\nexport const location: OperationURLParameter = {\n  parameterPath: \"location\",\n  mapper: {\n    constraints: {\n      MinLength: 1\n    },\n    serializedName: \"location\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const kustoPoolName1: OperationURLParameter = {\n  parameterPath: \"kustoPoolName\",\n  mapper: {\n    serializedName: \"kustoPoolName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters22: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: KustoPoolMapper\n};\n\nexport const parameters23: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: KustoPoolUpdateMapper\n};\n\nexport const languageExtensionsToAdd: OperationParameter = {\n  parameterPath: \"languageExtensionsToAdd\",\n  mapper: LanguageExtensionsListMapper\n};\n\nexport const languageExtensionsToRemove: OperationParameter = {\n  parameterPath: \"languageExtensionsToRemove\",\n  mapper: LanguageExtensionsListMapper\n};\n\nexport const followerDatabaseToRemove: OperationParameter = {\n  parameterPath: \"followerDatabaseToRemove\",\n  mapper: FollowerDatabaseDefinitionMapper\n};\n\nexport const resourceName: OperationParameter = {\n  parameterPath: \"resourceName\",\n  mapper: DatabaseCheckNameRequestMapper\n};\n\nexport const attachedDatabaseConfigurationName: OperationURLParameter = {\n  parameterPath: \"attachedDatabaseConfigurationName\",\n  mapper: {\n    serializedName: \"attachedDatabaseConfigurationName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters24: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: AttachedDatabaseConfigurationMapper\n};\n\nexport const databaseName: OperationURLParameter = {\n  parameterPath: \"databaseName\",\n  mapper: {\n    serializedName: \"databaseName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters25: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: DatabaseMapper\n};\n\nexport const dataConnectionName: OperationParameter = {\n  parameterPath: \"dataConnectionName\",\n  mapper: DataConnectionCheckNameRequestMapper\n};\n\nexport const parameters26: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: DataConnectionValidationMapper\n};\n\nexport const dataConnectionName1: OperationURLParameter = {\n  parameterPath: \"dataConnectionName\",\n  mapper: {\n    serializedName: \"dataConnectionName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters27: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: DataConnectionMapper\n};\n\nexport const principalAssignmentName: OperationParameter = {\n  parameterPath: \"principalAssignmentName\",\n  mapper: ClusterPrincipalAssignmentCheckNameRequestMapper\n};\n\nexport const principalAssignmentName1: OperationURLParameter = {\n  parameterPath: \"principalAssignmentName\",\n  mapper: {\n    serializedName: \"principalAssignmentName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters28: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ClusterPrincipalAssignmentMapper\n};\n\nexport const principalAssignmentName2: OperationParameter = {\n  parameterPath: \"principalAssignmentName\",\n  mapper: DatabasePrincipalAssignmentCheckNameRequestMapper\n};\n\nexport const parameters29: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: DatabasePrincipalAssignmentMapper\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { LongRunningOperation, LroResponse } from \"@azure/core-lro\";\n\nexport class LroImpl<T> implements LongRunningOperation<T> {\n  constructor(\n    private sendOperationFn: (args: any, spec: any) => Promise<LroResponse<T>>,\n    private args: Record<string, unknown>,\n    private spec: {\n      readonly requestBody?: unknown;\n      readonly path?: string;\n      readonly httpMethod: string;\n    } & Record<string, any>,\n    public requestPath: string = spec.path!,\n    public requestMethod: string = spec.httpMethod\n  ) {}\n  public async sendInitialRequest(): Promise<LroResponse<T>> {\n    return this.sendOperationFn(this.args, this.spec);\n  }\n  public async sendPollRequest(path: string): Promise<LroResponse<T>> {\n    const { requestBody, ...restSpec } = this.spec;\n    return this.sendOperationFn(this.args, {\n      ...restSpec,\n      path,\n      httpMethod: \"GET\"\n    });\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { AzureADOnlyAuthentications } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  AzureADOnlyAuthentication,\n  AzureADOnlyAuthenticationsListNextOptionalParams,\n  AzureADOnlyAuthenticationsListOptionalParams,\n  AzureADOnlyAuthenticationName,\n  AzureADOnlyAuthenticationsGetOptionalParams,\n  AzureADOnlyAuthenticationsGetResponse,\n  AzureADOnlyAuthenticationsCreateOptionalParams,\n  AzureADOnlyAuthenticationsCreateResponse,\n  AzureADOnlyAuthenticationsListResponse,\n  AzureADOnlyAuthenticationsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing AzureADOnlyAuthentications operations. */\nexport class AzureADOnlyAuthenticationsImpl\n  implements AzureADOnlyAuthentications {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class AzureADOnlyAuthentications class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of Azure Active Directory only authentication property for a workspace\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: AzureADOnlyAuthenticationsListOptionalParams\n  ): PagedAsyncIterableIterator<AzureADOnlyAuthentication> {\n    const iter = this.listPagingAll(resourceGroupName, workspaceName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(resourceGroupName, workspaceName, options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: AzureADOnlyAuthenticationsListOptionalParams\n  ): AsyncIterableIterator<AzureADOnlyAuthentication[]> {\n    let result = await this._list(resourceGroupName, workspaceName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: AzureADOnlyAuthenticationsListOptionalParams\n  ): AsyncIterableIterator<AzureADOnlyAuthentication> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a Azure Active Directory only authentication property\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param azureADOnlyAuthenticationName name of the property\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    azureADOnlyAuthenticationName: AzureADOnlyAuthenticationName,\n    options?: AzureADOnlyAuthenticationsGetOptionalParams\n  ): Promise<AzureADOnlyAuthenticationsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        azureADOnlyAuthenticationName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or Update a Azure Active Directory only authentication property for the workspaces\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param azureADOnlyAuthenticationName name of the property\n   * @param azureADOnlyAuthenticationInfo Azure Active Directory Property\n   * @param options The options parameters.\n   */\n  async beginCreate(\n    resourceGroupName: string,\n    workspaceName: string,\n    azureADOnlyAuthenticationName: AzureADOnlyAuthenticationName,\n    azureADOnlyAuthenticationInfo: AzureADOnlyAuthentication,\n    options?: AzureADOnlyAuthenticationsCreateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<AzureADOnlyAuthenticationsCreateResponse>,\n      AzureADOnlyAuthenticationsCreateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<AzureADOnlyAuthenticationsCreateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        workspaceName,\n        azureADOnlyAuthenticationName,\n        azureADOnlyAuthenticationInfo,\n        options\n      },\n      createOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"location\"\n    });\n  }\n\n  /**\n   * Create or Update a Azure Active Directory only authentication property for the workspaces\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param azureADOnlyAuthenticationName name of the property\n   * @param azureADOnlyAuthenticationInfo Azure Active Directory Property\n   * @param options The options parameters.\n   */\n  async beginCreateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    azureADOnlyAuthenticationName: AzureADOnlyAuthenticationName,\n    azureADOnlyAuthenticationInfo: AzureADOnlyAuthentication,\n    options?: AzureADOnlyAuthenticationsCreateOptionalParams\n  ): Promise<AzureADOnlyAuthenticationsCreateResponse> {\n    const poller = await this.beginCreate(\n      resourceGroupName,\n      workspaceName,\n      azureADOnlyAuthenticationName,\n      azureADOnlyAuthenticationInfo,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a list of Azure Active Directory only authentication property for a workspace\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: AzureADOnlyAuthenticationsListOptionalParams\n  ): Promise<AzureADOnlyAuthenticationsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    nextLink: string,\n    options?: AzureADOnlyAuthenticationsListNextOptionalParams\n  ): Promise<AzureADOnlyAuthenticationsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/azureADOnlyAuthentications/{azureADOnlyAuthenticationName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AzureADOnlyAuthentication\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.azureADOnlyAuthenticationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/azureADOnlyAuthentications/{azureADOnlyAuthenticationName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AzureADOnlyAuthentication\n    },\n    201: {\n      bodyMapper: Mappers.AzureADOnlyAuthentication\n    },\n    202: {\n      bodyMapper: Mappers.AzureADOnlyAuthentication\n    },\n    204: {\n      bodyMapper: Mappers.AzureADOnlyAuthentication\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.azureADOnlyAuthenticationInfo,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.azureADOnlyAuthenticationName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/azureADOnlyAuthentications\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AzureADOnlyAuthenticationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AzureADOnlyAuthenticationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Operations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  CheckNameAvailabilityRequest,\n  OperationsCheckNameAvailabilityOptionalParams,\n  OperationsCheckNameAvailabilityResponse,\n  OperationsListOptionalParams,\n  OperationsListResponse,\n  OperationsGetLocationHeaderResultOptionalParams,\n  OperationsGetAzureAsyncHeaderResultOptionalParams,\n  OperationsGetAzureAsyncHeaderResultResponse\n} from \"../models\";\n\n/** Class containing Operations operations. */\nexport class OperationsImpl implements Operations {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class Operations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Check whether a workspace name is available\n   * @param request The check request\n   * @param options The options parameters.\n   */\n  checkNameAvailability(\n    request: CheckNameAvailabilityRequest,\n    options?: OperationsCheckNameAvailabilityOptionalParams\n  ): Promise<OperationsCheckNameAvailabilityResponse> {\n    return this.client.sendOperationRequest(\n      { request, options },\n      checkNameAvailabilityOperationSpec\n    );\n  }\n\n  /**\n   * Get all available operations\n   * @param options The options parameters.\n   */\n  list(\n    options?: OperationsListOptionalParams\n  ): Promise<OperationsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * Get the result of an operation\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param operationId Operation ID\n   * @param options The options parameters.\n   */\n  getLocationHeaderResult(\n    resourceGroupName: string,\n    workspaceName: string,\n    operationId: string,\n    options?: OperationsGetLocationHeaderResultOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, operationId, options },\n      getLocationHeaderResultOperationSpec\n    );\n  }\n\n  /**\n   * Get the status of an operation\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param operationId Operation ID\n   * @param options The options parameters.\n   */\n  getAzureAsyncHeaderResult(\n    resourceGroupName: string,\n    workspaceName: string,\n    operationId: string,\n    options?: OperationsGetAzureAsyncHeaderResultOptionalParams\n  ): Promise<OperationsGetAzureAsyncHeaderResultResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, operationId, options },\n      getAzureAsyncHeaderResultOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst checkNameAvailabilityOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Synapse/checkNameAvailability\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CheckNameAvailabilityResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.request,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Synapse/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"AvailableRpOperation\" }\n          }\n        }\n      }\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getLocationHeaderResultOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/operationResults/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.operationId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAzureAsyncHeaderResultOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/operationStatuses/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationResource\n    },\n    404: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.operationId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { IpFirewallRules } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  IpFirewallRuleInfo,\n  IpFirewallRulesListByWorkspaceNextOptionalParams,\n  IpFirewallRulesListByWorkspaceOptionalParams,\n  IpFirewallRulesListByWorkspaceResponse,\n  IpFirewallRulesCreateOrUpdateOptionalParams,\n  IpFirewallRulesCreateOrUpdateResponse,\n  IpFirewallRulesDeleteOptionalParams,\n  IpFirewallRulesDeleteResponse,\n  IpFirewallRulesGetOptionalParams,\n  IpFirewallRulesGetResponse,\n  ReplaceAllIpFirewallRulesRequest,\n  IpFirewallRulesReplaceAllOptionalParams,\n  IpFirewallRulesReplaceAllResponse,\n  IpFirewallRulesListByWorkspaceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing IpFirewallRules operations. */\nexport class IpFirewallRulesImpl implements IpFirewallRules {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class IpFirewallRules class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Returns a list of firewall rules\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  public listByWorkspace(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: IpFirewallRulesListByWorkspaceOptionalParams\n  ): PagedAsyncIterableIterator<IpFirewallRuleInfo> {\n    const iter = this.listByWorkspacePagingAll(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByWorkspacePagingPage(\n          resourceGroupName,\n          workspaceName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listByWorkspacePagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: IpFirewallRulesListByWorkspaceOptionalParams\n  ): AsyncIterableIterator<IpFirewallRuleInfo[]> {\n    let result = await this._listByWorkspace(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByWorkspaceNext(\n        resourceGroupName,\n        workspaceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByWorkspacePagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: IpFirewallRulesListByWorkspaceOptionalParams\n  ): AsyncIterableIterator<IpFirewallRuleInfo> {\n    for await (const page of this.listByWorkspacePagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Returns a list of firewall rules\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  private _listByWorkspace(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: IpFirewallRulesListByWorkspaceOptionalParams\n  ): Promise<IpFirewallRulesListByWorkspaceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listByWorkspaceOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a firewall rule\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param ruleName The IP firewall rule name\n   * @param ipFirewallRuleInfo IP firewall rule properties\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    ruleName: string,\n    ipFirewallRuleInfo: IpFirewallRuleInfo,\n    options?: IpFirewallRulesCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<IpFirewallRulesCreateOrUpdateResponse>,\n      IpFirewallRulesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<IpFirewallRulesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        workspaceName,\n        ruleName,\n        ipFirewallRuleInfo,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"location\"\n    });\n  }\n\n  /**\n   * Creates or updates a firewall rule\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param ruleName The IP firewall rule name\n   * @param ipFirewallRuleInfo IP firewall rule properties\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    ruleName: string,\n    ipFirewallRuleInfo: IpFirewallRuleInfo,\n    options?: IpFirewallRulesCreateOrUpdateOptionalParams\n  ): Promise<IpFirewallRulesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      workspaceName,\n      ruleName,\n      ipFirewallRuleInfo,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes a firewall rule\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param ruleName The IP firewall rule name\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    workspaceName: string,\n    ruleName: string,\n    options?: IpFirewallRulesDeleteOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<IpFirewallRulesDeleteResponse>,\n      IpFirewallRulesDeleteResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<IpFirewallRulesDeleteResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, ruleName, options },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"location\"\n    });\n  }\n\n  /**\n   * Deletes a firewall rule\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param ruleName The IP firewall rule name\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    ruleName: string,\n    options?: IpFirewallRulesDeleteOptionalParams\n  ): Promise<IpFirewallRulesDeleteResponse> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      workspaceName,\n      ruleName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Get a firewall rule\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param ruleName The IP firewall rule name\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    ruleName: string,\n    options?: IpFirewallRulesGetOptionalParams\n  ): Promise<IpFirewallRulesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, ruleName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Replaces firewall rules\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param request Replace all IP firewall rules request\n   * @param options The options parameters.\n   */\n  async beginReplaceAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    request: ReplaceAllIpFirewallRulesRequest,\n    options?: IpFirewallRulesReplaceAllOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<IpFirewallRulesReplaceAllResponse>,\n      IpFirewallRulesReplaceAllResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<IpFirewallRulesReplaceAllResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, request, options },\n      replaceAllOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"location\"\n    });\n  }\n\n  /**\n   * Replaces firewall rules\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param request Replace all IP firewall rules request\n   * @param options The options parameters.\n   */\n  async beginReplaceAllAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    request: ReplaceAllIpFirewallRulesRequest,\n    options?: IpFirewallRulesReplaceAllOptionalParams\n  ): Promise<IpFirewallRulesReplaceAllResponse> {\n    const poller = await this.beginReplaceAll(\n      resourceGroupName,\n      workspaceName,\n      request,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByWorkspaceNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param nextLink The nextLink from the previous successful call to the ListByWorkspace method.\n   * @param options The options parameters.\n   */\n  private _listByWorkspaceNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    nextLink: string,\n    options?: IpFirewallRulesListByWorkspaceNextOptionalParams\n  ): Promise<IpFirewallRulesListByWorkspaceNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, nextLink, options },\n      listByWorkspaceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByWorkspaceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/firewallRules\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IpFirewallRuleInfoListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/firewallRules/{ruleName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IpFirewallRuleInfo\n    },\n    201: {\n      bodyMapper: Mappers.IpFirewallRuleInfo\n    },\n    202: {\n      bodyMapper: Mappers.IpFirewallRuleInfo\n    },\n    204: {\n      bodyMapper: Mappers.IpFirewallRuleInfo\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.ipFirewallRuleInfo,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.ruleName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/firewallRules/{ruleName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n      }\n    },\n    201: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n      }\n    },\n    202: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n      }\n    },\n    204: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n      }\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.ruleName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/firewallRules/{ruleName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IpFirewallRuleInfo\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.ruleName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst replaceAllOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/replaceAllIpFirewallRules\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReplaceAllFirewallRulesOperationResponse\n    },\n    201: {\n      bodyMapper: Mappers.ReplaceAllFirewallRulesOperationResponse\n    },\n    202: {\n      bodyMapper: Mappers.ReplaceAllFirewallRulesOperationResponse\n    },\n    204: {\n      bodyMapper: Mappers.ReplaceAllFirewallRulesOperationResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.request1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByWorkspaceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IpFirewallRuleInfoListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { Keys } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  Key,\n  KeysListByWorkspaceNextOptionalParams,\n  KeysListByWorkspaceOptionalParams,\n  KeysListByWorkspaceResponse,\n  KeysGetOptionalParams,\n  KeysGetResponse,\n  KeysCreateOrUpdateOptionalParams,\n  KeysCreateOrUpdateResponse,\n  KeysDeleteOptionalParams,\n  KeysDeleteResponse,\n  KeysListByWorkspaceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Keys operations. */\nexport class KeysImpl implements Keys {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class Keys class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Returns a list of keys in a workspace\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  public listByWorkspace(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: KeysListByWorkspaceOptionalParams\n  ): PagedAsyncIterableIterator<Key> {\n    const iter = this.listByWorkspacePagingAll(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByWorkspacePagingPage(\n          resourceGroupName,\n          workspaceName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listByWorkspacePagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: KeysListByWorkspaceOptionalParams\n  ): AsyncIterableIterator<Key[]> {\n    let result = await this._listByWorkspace(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByWorkspaceNext(\n        resourceGroupName,\n        workspaceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByWorkspacePagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: KeysListByWorkspaceOptionalParams\n  ): AsyncIterableIterator<Key> {\n    for await (const page of this.listByWorkspacePagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Returns a list of keys in a workspace\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  private _listByWorkspace(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: KeysListByWorkspaceOptionalParams\n  ): Promise<KeysListByWorkspaceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listByWorkspaceOperationSpec\n    );\n  }\n\n  /**\n   * Gets a workspace key\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param keyName The name of the workspace key\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    keyName: string,\n    options?: KeysGetOptionalParams\n  ): Promise<KeysGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, keyName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a workspace key\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param keyName The name of the workspace key\n   * @param keyProperties Key put request properties\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    keyName: string,\n    keyProperties: Key,\n    options?: KeysCreateOrUpdateOptionalParams\n  ): Promise<KeysCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, keyName, keyProperties, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a workspace key\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param keyName The name of the workspace key\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    workspaceName: string,\n    keyName: string,\n    options?: KeysDeleteOptionalParams\n  ): Promise<KeysDeleteResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, keyName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * ListByWorkspaceNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param nextLink The nextLink from the previous successful call to the ListByWorkspace method.\n   * @param options The options parameters.\n   */\n  private _listByWorkspaceNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    nextLink: string,\n    options?: KeysListByWorkspaceNextOptionalParams\n  ): Promise<KeysListByWorkspaceNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, nextLink, options },\n      listByWorkspaceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByWorkspaceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/keys\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyInfoListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/keys/{keyName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Key\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.keyName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/keys/{keyName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Key\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.keyProperties,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.keyName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/keys/{keyName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Key\n    },\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.keyName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByWorkspaceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyInfoListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { PrivateEndpointConnections } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  PrivateEndpointConnection,\n  PrivateEndpointConnectionsListNextOptionalParams,\n  PrivateEndpointConnectionsListOptionalParams,\n  PrivateEndpointConnectionsGetOptionalParams,\n  PrivateEndpointConnectionsGetResponse,\n  PrivateEndpointConnectionsCreateOptionalParams,\n  PrivateEndpointConnectionsCreateResponse,\n  PrivateEndpointConnectionsDeleteOptionalParams,\n  PrivateEndpointConnectionsListResponse,\n  PrivateEndpointConnectionsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing PrivateEndpointConnections operations. */\nexport class PrivateEndpointConnectionsImpl\n  implements PrivateEndpointConnections {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class PrivateEndpointConnections class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists private endpoint connection in workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: PrivateEndpointConnectionsListOptionalParams\n  ): PagedAsyncIterableIterator<PrivateEndpointConnection> {\n    const iter = this.listPagingAll(resourceGroupName, workspaceName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(resourceGroupName, workspaceName, options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: PrivateEndpointConnectionsListOptionalParams\n  ): AsyncIterableIterator<PrivateEndpointConnection[]> {\n    let result = await this._list(resourceGroupName, workspaceName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: PrivateEndpointConnectionsListOptionalParams\n  ): AsyncIterableIterator<PrivateEndpointConnection> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a private endpoint connection.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param privateEndpointConnectionName The name of the private endpoint connection.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    privateEndpointConnectionName: string,\n    options?: PrivateEndpointConnectionsGetOptionalParams\n  ): Promise<PrivateEndpointConnectionsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        privateEndpointConnectionName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Approve or reject a private endpoint connection.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param privateEndpointConnectionName The name of the private endpoint connection.\n   * @param request Request body of private endpoint connection to create.\n   * @param options The options parameters.\n   */\n  async beginCreate(\n    resourceGroupName: string,\n    workspaceName: string,\n    privateEndpointConnectionName: string,\n    request: PrivateEndpointConnection,\n    options?: PrivateEndpointConnectionsCreateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<PrivateEndpointConnectionsCreateResponse>,\n      PrivateEndpointConnectionsCreateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<PrivateEndpointConnectionsCreateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        workspaceName,\n        privateEndpointConnectionName,\n        request,\n        options\n      },\n      createOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n  }\n\n  /**\n   * Approve or reject a private endpoint connection.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param privateEndpointConnectionName The name of the private endpoint connection.\n   * @param request Request body of private endpoint connection to create.\n   * @param options The options parameters.\n   */\n  async beginCreateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    privateEndpointConnectionName: string,\n    request: PrivateEndpointConnection,\n    options?: PrivateEndpointConnectionsCreateOptionalParams\n  ): Promise<PrivateEndpointConnectionsCreateResponse> {\n    const poller = await this.beginCreate(\n      resourceGroupName,\n      workspaceName,\n      privateEndpointConnectionName,\n      request,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Delete a private endpoint connection.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param privateEndpointConnectionName The name of the private endpoint connection.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    workspaceName: string,\n    privateEndpointConnectionName: string,\n    options?: PrivateEndpointConnectionsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        workspaceName,\n        privateEndpointConnectionName,\n        options\n      },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Delete a private endpoint connection.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param privateEndpointConnectionName The name of the private endpoint connection.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    privateEndpointConnectionName: string,\n    options?: PrivateEndpointConnectionsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      workspaceName,\n      privateEndpointConnectionName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Lists private endpoint connection in workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: PrivateEndpointConnectionsListOptionalParams\n  ): Promise<PrivateEndpointConnectionsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    nextLink: string,\n    options?: PrivateEndpointConnectionsListNextOptionalParams\n  ): Promise<PrivateEndpointConnectionsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.privateEndpointConnectionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    201: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    202: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    204: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.request2,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.privateEndpointConnectionName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.privateEndpointConnectionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/privateEndpointConnections\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateEndpointConnectionList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateEndpointConnectionList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { PrivateLinkResources } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  PrivateLinkResource,\n  PrivateLinkResourcesListNextOptionalParams,\n  PrivateLinkResourcesListOptionalParams,\n  PrivateLinkResourcesListResponse,\n  PrivateLinkResourcesGetOptionalParams,\n  PrivateLinkResourcesGetResponse,\n  PrivateLinkResourcesListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing PrivateLinkResources operations. */\nexport class PrivateLinkResourcesImpl implements PrivateLinkResources {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class PrivateLinkResources class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get all private link resources for a workspaces\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: PrivateLinkResourcesListOptionalParams\n  ): PagedAsyncIterableIterator<PrivateLinkResource> {\n    const iter = this.listPagingAll(resourceGroupName, workspaceName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(resourceGroupName, workspaceName, options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: PrivateLinkResourcesListOptionalParams\n  ): AsyncIterableIterator<PrivateLinkResource[]> {\n    let result = await this._list(resourceGroupName, workspaceName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: PrivateLinkResourcesListOptionalParams\n  ): AsyncIterableIterator<PrivateLinkResource> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get all private link resources for a workspaces\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: PrivateLinkResourcesListOptionalParams\n  ): Promise<PrivateLinkResourcesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Get private link resource in workspace\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param privateLinkResourceName The name of the private link resource\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    privateLinkResourceName: string,\n    options?: PrivateLinkResourcesGetOptionalParams\n  ): Promise<PrivateLinkResourcesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, privateLinkResourceName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    nextLink: string,\n    options?: PrivateLinkResourcesListNextOptionalParams\n  ): Promise<PrivateLinkResourcesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/privateLinkResources\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateLinkResourceListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/privateLinkResources/{privateLinkResourceName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateLinkResource\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.privateLinkResourceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateLinkResourceListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { PrivateLinkHubPrivateLinkResources } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  PrivateLinkResource,\n  PrivateLinkHubPrivateLinkResourcesListNextOptionalParams,\n  PrivateLinkHubPrivateLinkResourcesListOptionalParams,\n  PrivateLinkHubPrivateLinkResourcesListResponse,\n  PrivateLinkHubPrivateLinkResourcesGetOptionalParams,\n  PrivateLinkHubPrivateLinkResourcesGetResponse,\n  PrivateLinkHubPrivateLinkResourcesListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing PrivateLinkHubPrivateLinkResources operations. */\nexport class PrivateLinkHubPrivateLinkResourcesImpl\n  implements PrivateLinkHubPrivateLinkResources {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class PrivateLinkHubPrivateLinkResources class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get all private link resources for a private link hub\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param privateLinkHubName The name of the private link hub\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    privateLinkHubName: string,\n    options?: PrivateLinkHubPrivateLinkResourcesListOptionalParams\n  ): PagedAsyncIterableIterator<PrivateLinkResource> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      privateLinkHubName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(\n          resourceGroupName,\n          privateLinkHubName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    privateLinkHubName: string,\n    options?: PrivateLinkHubPrivateLinkResourcesListOptionalParams\n  ): AsyncIterableIterator<PrivateLinkResource[]> {\n    let result = await this._list(\n      resourceGroupName,\n      privateLinkHubName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        privateLinkHubName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    privateLinkHubName: string,\n    options?: PrivateLinkHubPrivateLinkResourcesListOptionalParams\n  ): AsyncIterableIterator<PrivateLinkResource> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      privateLinkHubName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get all private link resources for a private link hub\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param privateLinkHubName The name of the private link hub\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    privateLinkHubName: string,\n    options?: PrivateLinkHubPrivateLinkResourcesListOptionalParams\n  ): Promise<PrivateLinkHubPrivateLinkResourcesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, privateLinkHubName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Get private link resource in private link hub\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param privateLinkHubName The name of the private link hub\n   * @param privateLinkResourceName The name of the private link resource\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    privateLinkHubName: string,\n    privateLinkResourceName: string,\n    options?: PrivateLinkHubPrivateLinkResourcesGetOptionalParams\n  ): Promise<PrivateLinkHubPrivateLinkResourcesGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        privateLinkHubName,\n        privateLinkResourceName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param privateLinkHubName The name of the private link hub\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    privateLinkHubName: string,\n    nextLink: string,\n    options?: PrivateLinkHubPrivateLinkResourcesListNextOptionalParams\n  ): Promise<PrivateLinkHubPrivateLinkResourcesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, privateLinkHubName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/privateLinkHubs/{privateLinkHubName}/privateLinkResources\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateLinkResourceListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.privateLinkHubName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/privateLinkHubs/{privateLinkHubName}/privateLinkResources/{privateLinkResourceName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateLinkResource\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.privateLinkResourceName,\n    Parameters.privateLinkHubName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateLinkResourceListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink,\n    Parameters.privateLinkHubName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { PrivateLinkHubs } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  PrivateLinkHub,\n  PrivateLinkHubsListByResourceGroupNextOptionalParams,\n  PrivateLinkHubsListByResourceGroupOptionalParams,\n  PrivateLinkHubsListNextOptionalParams,\n  PrivateLinkHubsListOptionalParams,\n  PrivateLinkHubsListByResourceGroupResponse,\n  PrivateLinkHubsGetOptionalParams,\n  PrivateLinkHubsGetResponse,\n  PrivateLinkHubPatchInfo,\n  PrivateLinkHubsUpdateOptionalParams,\n  PrivateLinkHubsUpdateResponse,\n  PrivateLinkHubsCreateOrUpdateOptionalParams,\n  PrivateLinkHubsCreateOrUpdateResponse,\n  PrivateLinkHubsDeleteOptionalParams,\n  PrivateLinkHubsListResponse,\n  PrivateLinkHubsListByResourceGroupNextResponse,\n  PrivateLinkHubsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing PrivateLinkHubs operations. */\nexport class PrivateLinkHubsImpl implements PrivateLinkHubs {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class PrivateLinkHubs class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Returns a list of privateLinkHubs in a resource group\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: PrivateLinkHubsListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<PrivateLinkHub> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByResourceGroupPagingPage(resourceGroupName, options);\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: PrivateLinkHubsListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<PrivateLinkHub[]> {\n    let result = await this._listByResourceGroup(resourceGroupName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: PrivateLinkHubsListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<PrivateLinkHub> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Returns a list of privateLinkHubs in a subscription\n   * @param options The options parameters.\n   */\n  public list(\n    options?: PrivateLinkHubsListOptionalParams\n  ): PagedAsyncIterableIterator<PrivateLinkHub> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: PrivateLinkHubsListOptionalParams\n  ): AsyncIterableIterator<PrivateLinkHub[]> {\n    let result = await this._list(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    options?: PrivateLinkHubsListOptionalParams\n  ): AsyncIterableIterator<PrivateLinkHub> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Returns a list of privateLinkHubs in a resource group\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: PrivateLinkHubsListByResourceGroupOptionalParams\n  ): Promise<PrivateLinkHubsListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Gets a privateLinkHub\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param privateLinkHubName Name of the privateLinkHub\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    privateLinkHubName: string,\n    options?: PrivateLinkHubsGetOptionalParams\n  ): Promise<PrivateLinkHubsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, privateLinkHubName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Updates a privateLinkHub\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param privateLinkHubName Name of the privateLinkHub\n   * @param privateLinkHubPatchInfo PrivateLinkHub patch request properties\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    privateLinkHubName: string,\n    privateLinkHubPatchInfo: PrivateLinkHubPatchInfo,\n    options?: PrivateLinkHubsUpdateOptionalParams\n  ): Promise<PrivateLinkHubsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        privateLinkHubName,\n        privateLinkHubPatchInfo,\n        options\n      },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a privateLinkHub\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param privateLinkHubName Name of the privateLinkHub\n   * @param privateLinkHubInfo PrivateLinkHub create or update request properties\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    privateLinkHubName: string,\n    privateLinkHubInfo: PrivateLinkHub,\n    options?: PrivateLinkHubsCreateOrUpdateOptionalParams\n  ): Promise<PrivateLinkHubsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, privateLinkHubName, privateLinkHubInfo, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a privateLinkHub\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param privateLinkHubName Name of the privateLinkHub\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    privateLinkHubName: string,\n    options?: PrivateLinkHubsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, privateLinkHubName, options },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Deletes a privateLinkHub\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param privateLinkHubName Name of the privateLinkHub\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    privateLinkHubName: string,\n    options?: PrivateLinkHubsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      privateLinkHubName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Returns a list of privateLinkHubs in a subscription\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: PrivateLinkHubsListOptionalParams\n  ): Promise<PrivateLinkHubsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: PrivateLinkHubsListByResourceGroupNextOptionalParams\n  ): Promise<PrivateLinkHubsListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: PrivateLinkHubsListNextOptionalParams\n  ): Promise<PrivateLinkHubsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/privateLinkHubs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateLinkHubInfoListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/privateLinkHubs/{privateLinkHubName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateLinkHub\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.privateLinkHubName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/privateLinkHubs/{privateLinkHubName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateLinkHub\n    },\n    201: {\n      bodyMapper: Mappers.PrivateLinkHub\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.privateLinkHubPatchInfo,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.privateLinkHubName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/privateLinkHubs/{privateLinkHubName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateLinkHub\n    },\n    201: {\n      bodyMapper: Mappers.PrivateLinkHub\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.privateLinkHubInfo,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.privateLinkHubName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/privateLinkHubs/{privateLinkHubName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.privateLinkHubName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Synapse/privateLinkHubs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateLinkHubInfoListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateLinkHubInfoListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateLinkHubInfoListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { PrivateEndpointConnectionsPrivateLinkHub } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  PrivateEndpointConnectionForPrivateLinkHub,\n  PrivateEndpointConnectionsPrivateLinkHubListNextOptionalParams,\n  PrivateEndpointConnectionsPrivateLinkHubListOptionalParams,\n  PrivateEndpointConnectionsPrivateLinkHubListResponse,\n  PrivateEndpointConnectionsPrivateLinkHubGetOptionalParams,\n  PrivateEndpointConnectionsPrivateLinkHubGetResponse,\n  PrivateEndpointConnectionsPrivateLinkHubListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing PrivateEndpointConnectionsPrivateLinkHub operations. */\nexport class PrivateEndpointConnectionsPrivateLinkHubImpl\n  implements PrivateEndpointConnectionsPrivateLinkHub {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class PrivateEndpointConnectionsPrivateLinkHub class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get all PrivateEndpointConnections in the PrivateLinkHub\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param privateLinkHubName Name of the privateLinkHub\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    privateLinkHubName: string,\n    options?: PrivateEndpointConnectionsPrivateLinkHubListOptionalParams\n  ): PagedAsyncIterableIterator<PrivateEndpointConnectionForPrivateLinkHub> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      privateLinkHubName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(\n          resourceGroupName,\n          privateLinkHubName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    privateLinkHubName: string,\n    options?: PrivateEndpointConnectionsPrivateLinkHubListOptionalParams\n  ): AsyncIterableIterator<PrivateEndpointConnectionForPrivateLinkHub[]> {\n    let result = await this._list(\n      resourceGroupName,\n      privateLinkHubName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        privateLinkHubName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    privateLinkHubName: string,\n    options?: PrivateEndpointConnectionsPrivateLinkHubListOptionalParams\n  ): AsyncIterableIterator<PrivateEndpointConnectionForPrivateLinkHub> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      privateLinkHubName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get all PrivateEndpointConnections in the PrivateLinkHub\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param privateLinkHubName Name of the privateLinkHub\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    privateLinkHubName: string,\n    options?: PrivateEndpointConnectionsPrivateLinkHubListOptionalParams\n  ): Promise<PrivateEndpointConnectionsPrivateLinkHubListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, privateLinkHubName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Get all PrivateEndpointConnection in the PrivateLinkHub by name\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param privateLinkHubName Name of the privateLinkHub\n   * @param privateEndpointConnectionName Name of the privateEndpointConnection\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    privateLinkHubName: string,\n    privateEndpointConnectionName: string,\n    options?: PrivateEndpointConnectionsPrivateLinkHubGetOptionalParams\n  ): Promise<PrivateEndpointConnectionsPrivateLinkHubGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        privateLinkHubName,\n        privateEndpointConnectionName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param privateLinkHubName Name of the privateLinkHub\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    privateLinkHubName: string,\n    nextLink: string,\n    options?: PrivateEndpointConnectionsPrivateLinkHubListNextOptionalParams\n  ): Promise<PrivateEndpointConnectionsPrivateLinkHubListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, privateLinkHubName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/privateLinkHubs/{privateLinkHubName}/privateEndpointConnections\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PrivateEndpointConnectionForPrivateLinkHubResourceCollectionResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.privateLinkHubName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/privateLinkHubs/{privateLinkHubName}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateEndpointConnectionForPrivateLinkHub\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.privateEndpointConnectionName,\n    Parameters.privateLinkHubName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PrivateEndpointConnectionForPrivateLinkHubResourceCollectionResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink,\n    Parameters.privateLinkHubName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SqlPools } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  SqlPool,\n  SqlPoolsListByWorkspaceNextOptionalParams,\n  SqlPoolsListByWorkspaceOptionalParams,\n  SqlPoolsGetOptionalParams,\n  SqlPoolsGetResponse,\n  SqlPoolPatchInfo,\n  SqlPoolsUpdateOptionalParams,\n  SqlPoolsUpdateResponse,\n  SqlPoolsCreateOptionalParams,\n  SqlPoolsCreateResponse,\n  SqlPoolsDeleteOptionalParams,\n  SqlPoolsDeleteResponse,\n  SqlPoolsListByWorkspaceResponse,\n  SqlPoolsPauseOptionalParams,\n  SqlPoolsPauseResponse,\n  SqlPoolsResumeOptionalParams,\n  SqlPoolsResumeResponse,\n  ResourceMoveDefinition,\n  SqlPoolsRenameOptionalParams,\n  SqlPoolsListByWorkspaceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing SqlPools operations. */\nexport class SqlPoolsImpl implements SqlPools {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class SqlPools class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List all SQL pools\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  public listByWorkspace(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: SqlPoolsListByWorkspaceOptionalParams\n  ): PagedAsyncIterableIterator<SqlPool> {\n    const iter = this.listByWorkspacePagingAll(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByWorkspacePagingPage(\n          resourceGroupName,\n          workspaceName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listByWorkspacePagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: SqlPoolsListByWorkspaceOptionalParams\n  ): AsyncIterableIterator<SqlPool[]> {\n    let result = await this._listByWorkspace(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByWorkspaceNext(\n        resourceGroupName,\n        workspaceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByWorkspacePagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: SqlPoolsListByWorkspaceOptionalParams\n  ): AsyncIterableIterator<SqlPool> {\n    for await (const page of this.listByWorkspacePagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get SQL pool properties\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolsGetOptionalParams\n  ): Promise<SqlPoolsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Apply a partial update to a SQL pool\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param sqlPoolInfo The updated SQL pool properties\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    sqlPoolInfo: SqlPoolPatchInfo,\n    options?: SqlPoolsUpdateOptionalParams\n  ): Promise<SqlPoolsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, sqlPoolInfo, options },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * Create a SQL pool\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param sqlPoolInfo The SQL pool to create\n   * @param options The options parameters.\n   */\n  async beginCreate(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    sqlPoolInfo: SqlPool,\n    options?: SqlPoolsCreateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<SqlPoolsCreateResponse>,\n      SqlPoolsCreateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<SqlPoolsCreateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, sqlPoolName, sqlPoolInfo, options },\n      createOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"location\"\n    });\n  }\n\n  /**\n   * Create a SQL pool\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param sqlPoolInfo The SQL pool to create\n   * @param options The options parameters.\n   */\n  async beginCreateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    sqlPoolInfo: SqlPool,\n    options?: SqlPoolsCreateOptionalParams\n  ): Promise<SqlPoolsCreateResponse> {\n    const poller = await this.beginCreate(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      sqlPoolInfo,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Delete a SQL pool\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolsDeleteOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<SqlPoolsDeleteResponse>,\n      SqlPoolsDeleteResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<SqlPoolsDeleteResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, sqlPoolName, options },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"location\"\n    });\n  }\n\n  /**\n   * Delete a SQL pool\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolsDeleteOptionalParams\n  ): Promise<SqlPoolsDeleteResponse> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * List all SQL pools\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  private _listByWorkspace(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: SqlPoolsListByWorkspaceOptionalParams\n  ): Promise<SqlPoolsListByWorkspaceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listByWorkspaceOperationSpec\n    );\n  }\n\n  /**\n   * Pause a SQL pool\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  async beginPause(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolsPauseOptionalParams\n  ): Promise<\n    PollerLike<PollOperationState<SqlPoolsPauseResponse>, SqlPoolsPauseResponse>\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<SqlPoolsPauseResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, sqlPoolName, options },\n      pauseOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"location\"\n    });\n  }\n\n  /**\n   * Pause a SQL pool\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  async beginPauseAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolsPauseOptionalParams\n  ): Promise<SqlPoolsPauseResponse> {\n    const poller = await this.beginPause(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Resume a SQL pool\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  async beginResume(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolsResumeOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<SqlPoolsResumeResponse>,\n      SqlPoolsResumeResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<SqlPoolsResumeResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, sqlPoolName, options },\n      resumeOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"location\"\n    });\n  }\n\n  /**\n   * Resume a SQL pool\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  async beginResumeAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolsResumeOptionalParams\n  ): Promise<SqlPoolsResumeResponse> {\n    const poller = await this.beginResume(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Rename a SQL pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param parameters The resource move definition for renaming this Sql pool.\n   * @param options The options parameters.\n   */\n  rename(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    parameters: ResourceMoveDefinition,\n    options?: SqlPoolsRenameOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, parameters, options },\n      renameOperationSpec\n    );\n  }\n\n  /**\n   * ListByWorkspaceNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param nextLink The nextLink from the previous successful call to the ListByWorkspace method.\n   * @param options The options parameters.\n   */\n  private _listByWorkspaceNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    nextLink: string,\n    options?: SqlPoolsListByWorkspaceNextOptionalParams\n  ): Promise<SqlPoolsListByWorkspaceNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, nextLink, options },\n      listByWorkspaceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SqlPool\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SqlPool\n    },\n    202: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.sqlPoolInfo,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SqlPool\n    },\n    201: {\n      bodyMapper: Mappers.SqlPool\n    },\n    202: {\n      bodyMapper: Mappers.SqlPool\n    },\n    204: {\n      bodyMapper: Mappers.SqlPool\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.sqlPoolInfo1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n      }\n    },\n    201: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n      }\n    },\n    202: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n      }\n    },\n    204: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n      }\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByWorkspaceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SqlPoolInfoListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst pauseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/pause\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n      }\n    },\n    201: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n      }\n    },\n    202: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n      }\n    },\n    204: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n      }\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst resumeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/resume\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n      }\n    },\n    201: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n      }\n    },\n    202: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n      }\n    },\n    204: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n      }\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst renameOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/move\",\n  httpMethod: \"POST\",\n  responses: { 200: {}, default: {} },\n  requestBody: Parameters.parameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByWorkspaceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SqlPoolInfoListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { SqlPoolMetadataSyncConfigs } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  SqlPoolMetadataSyncConfigsGetOptionalParams,\n  SqlPoolMetadataSyncConfigsGetResponse,\n  MetadataSyncConfig,\n  SqlPoolMetadataSyncConfigsCreateOptionalParams,\n  SqlPoolMetadataSyncConfigsCreateResponse\n} from \"../models\";\n\n/** Class containing SqlPoolMetadataSyncConfigs operations. */\nexport class SqlPoolMetadataSyncConfigsImpl\n  implements SqlPoolMetadataSyncConfigs {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class SqlPoolMetadataSyncConfigs class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get the metadata sync configuration for a SQL pool\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolMetadataSyncConfigsGetOptionalParams\n  ): Promise<SqlPoolMetadataSyncConfigsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Set the metadata sync configuration for a SQL pool\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param metadataSyncConfiguration Metadata sync configuration\n   * @param options The options parameters.\n   */\n  create(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    metadataSyncConfiguration: MetadataSyncConfig,\n    options?: SqlPoolMetadataSyncConfigsCreateOptionalParams\n  ): Promise<SqlPoolMetadataSyncConfigsCreateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        metadataSyncConfiguration,\n        options\n      },\n      createOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/metadataSync/config\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MetadataSyncConfig\n    },\n    404: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/metadataSync/config\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MetadataSyncConfig\n    },\n    404: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.metadataSyncConfiguration,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { SqlPoolOperationResults } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  SqlPoolOperationResultsGetLocationHeaderResultOptionalParams,\n  SqlPoolOperationResultsGetLocationHeaderResultResponse\n} from \"../models\";\n\n/** Class containing SqlPoolOperationResults operations. */\nexport class SqlPoolOperationResultsImpl implements SqlPoolOperationResults {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class SqlPoolOperationResults class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get the status of a SQL pool operation\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param operationId Operation ID\n   * @param options The options parameters.\n   */\n  getLocationHeaderResult(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    operationId: string,\n    options?: SqlPoolOperationResultsGetLocationHeaderResultOptionalParams\n  ): Promise<SqlPoolOperationResultsGetLocationHeaderResultResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, operationId, options },\n      getLocationHeaderResultOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getLocationHeaderResultOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/operationResults/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n      }\n    },\n    202: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n      }\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.operationId,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SqlPoolGeoBackupPolicies } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  GeoBackupPolicy,\n  SqlPoolGeoBackupPoliciesListOptionalParams,\n  SqlPoolGeoBackupPoliciesListResponse,\n  GeoBackupPolicyName,\n  SqlPoolGeoBackupPoliciesCreateOrUpdateOptionalParams,\n  SqlPoolGeoBackupPoliciesCreateOrUpdateResponse,\n  SqlPoolGeoBackupPoliciesGetOptionalParams,\n  SqlPoolGeoBackupPoliciesGetResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing SqlPoolGeoBackupPolicies operations. */\nexport class SqlPoolGeoBackupPoliciesImpl implements SqlPoolGeoBackupPolicies {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class SqlPoolGeoBackupPolicies class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get list of SQL pool geo backup policies\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolGeoBackupPoliciesListOptionalParams\n  ): PagedAsyncIterableIterator<GeoBackupPolicy> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(\n          resourceGroupName,\n          workspaceName,\n          sqlPoolName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolGeoBackupPoliciesListOptionalParams\n  ): AsyncIterableIterator<GeoBackupPolicy[]> {\n    let result = await this._list(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    );\n    yield result.value || [];\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolGeoBackupPoliciesListOptionalParams\n  ): AsyncIterableIterator<GeoBackupPolicy> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get list of SQL pool geo backup policies\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolGeoBackupPoliciesListOptionalParams\n  ): Promise<SqlPoolGeoBackupPoliciesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Updates a SQL Pool geo backup policy.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param geoBackupPolicyName The name of the geo backup policy.\n   * @param parameters The required parameters for creating or updating the geo backup policy.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    geoBackupPolicyName: GeoBackupPolicyName,\n    parameters: GeoBackupPolicy,\n    options?: SqlPoolGeoBackupPoliciesCreateOrUpdateOptionalParams\n  ): Promise<SqlPoolGeoBackupPoliciesCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        geoBackupPolicyName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Get the specified SQL pool geo backup policy\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param geoBackupPolicyName The name of the geo backup policy.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    geoBackupPolicyName: GeoBackupPolicyName,\n    options?: SqlPoolGeoBackupPoliciesGetOptionalParams\n  ): Promise<SqlPoolGeoBackupPoliciesGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        geoBackupPolicyName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/geoBackupPolicies\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GeoBackupPolicyListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/geoBackupPolicies/{geoBackupPolicyName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GeoBackupPolicy\n    },\n    201: {\n      bodyMapper: Mappers.GeoBackupPolicy\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.geoBackupPolicyName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/geoBackupPolicies/{geoBackupPolicyName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GeoBackupPolicy\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.geoBackupPolicyName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { SqlPoolDataWarehouseUserActivities } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  DataWarehouseUserActivityName,\n  SqlPoolDataWarehouseUserActivitiesGetOptionalParams,\n  SqlPoolDataWarehouseUserActivitiesGetResponse\n} from \"../models\";\n\n/** Class containing SqlPoolDataWarehouseUserActivities operations. */\nexport class SqlPoolDataWarehouseUserActivitiesImpl\n  implements SqlPoolDataWarehouseUserActivities {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class SqlPoolDataWarehouseUserActivities class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the user activities of a SQL pool which includes running and suspended queries\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param dataWarehouseUserActivityName The activity name of the Sql pool.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    dataWarehouseUserActivityName: DataWarehouseUserActivityName,\n    options?: SqlPoolDataWarehouseUserActivitiesGetOptionalParams\n  ): Promise<SqlPoolDataWarehouseUserActivitiesGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        dataWarehouseUserActivityName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/dataWarehouseUserActivities/{dataWarehouseUserActivityName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataWarehouseUserActivities\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.dataWarehouseUserActivityName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SqlPoolRestorePoints } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  RestorePoint,\n  SqlPoolRestorePointsListNextOptionalParams,\n  SqlPoolRestorePointsListOptionalParams,\n  SqlPoolRestorePointsListResponse,\n  CreateSqlPoolRestorePointDefinition,\n  SqlPoolRestorePointsCreateOptionalParams,\n  SqlPoolRestorePointsCreateResponse,\n  SqlPoolRestorePointsGetOptionalParams,\n  SqlPoolRestorePointsGetResponse,\n  SqlPoolRestorePointsDeleteOptionalParams,\n  SqlPoolRestorePointsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing SqlPoolRestorePoints operations. */\nexport class SqlPoolRestorePointsImpl implements SqlPoolRestorePoints {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class SqlPoolRestorePoints class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get SQL pool backup information\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolRestorePointsListOptionalParams\n  ): PagedAsyncIterableIterator<RestorePoint> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(\n          resourceGroupName,\n          workspaceName,\n          sqlPoolName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolRestorePointsListOptionalParams\n  ): AsyncIterableIterator<RestorePoint[]> {\n    let result = await this._list(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolRestorePointsListOptionalParams\n  ): AsyncIterableIterator<RestorePoint> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get SQL pool backup information\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolRestorePointsListOptionalParams\n  ): Promise<SqlPoolRestorePointsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Creates a restore point for a data warehouse.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param parameters The definition for creating the restore point of this Sql pool.\n   * @param options The options parameters.\n   */\n  async beginCreate(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    parameters: CreateSqlPoolRestorePointDefinition,\n    options?: SqlPoolRestorePointsCreateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<SqlPoolRestorePointsCreateResponse>,\n      SqlPoolRestorePointsCreateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<SqlPoolRestorePointsCreateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, sqlPoolName, parameters, options },\n      createOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"location\"\n    });\n  }\n\n  /**\n   * Creates a restore point for a data warehouse.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param parameters The definition for creating the restore point of this Sql pool.\n   * @param options The options parameters.\n   */\n  async beginCreateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    parameters: CreateSqlPoolRestorePointDefinition,\n    options?: SqlPoolRestorePointsCreateOptionalParams\n  ): Promise<SqlPoolRestorePointsCreateResponse> {\n    const poller = await this.beginCreate(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a restore point.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param restorePointName The name of the restore point.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    restorePointName: string,\n    options?: SqlPoolRestorePointsGetOptionalParams\n  ): Promise<SqlPoolRestorePointsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        restorePointName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a restore point.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param restorePointName The name of the restore point.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    restorePointName: string,\n    options?: SqlPoolRestorePointsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        restorePointName,\n        options\n      },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    nextLink: string,\n    options?: SqlPoolRestorePointsListNextOptionalParams\n  ): Promise<SqlPoolRestorePointsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/restorePoints\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RestorePointListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/restorePoints\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RestorePoint\n    },\n    201: {\n      bodyMapper: Mappers.RestorePoint\n    },\n    202: {\n      bodyMapper: Mappers.RestorePoint\n    },\n    204: {\n      bodyMapper: Mappers.RestorePoint\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters2,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/restorePoints/{restorePointName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RestorePoint\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.restorePointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/restorePoints/{restorePointName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.restorePointName\n  ],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RestorePointListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SqlPoolReplicationLinks } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  ReplicationLink,\n  SqlPoolReplicationLinksListNextOptionalParams,\n  SqlPoolReplicationLinksListOptionalParams,\n  SqlPoolReplicationLinksListResponse,\n  SqlPoolReplicationLinksGetByNameOptionalParams,\n  SqlPoolReplicationLinksGetByNameResponse,\n  SqlPoolReplicationLinksListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing SqlPoolReplicationLinks operations. */\nexport class SqlPoolReplicationLinksImpl implements SqlPoolReplicationLinks {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class SqlPoolReplicationLinks class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists a Sql pool's replication links.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolReplicationLinksListOptionalParams\n  ): PagedAsyncIterableIterator<ReplicationLink> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(\n          resourceGroupName,\n          workspaceName,\n          sqlPoolName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolReplicationLinksListOptionalParams\n  ): AsyncIterableIterator<ReplicationLink[]> {\n    let result = await this._list(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolReplicationLinksListOptionalParams\n  ): AsyncIterableIterator<ReplicationLink> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists a Sql pool's replication links.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolReplicationLinksListOptionalParams\n  ): Promise<SqlPoolReplicationLinksListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Get SQL pool replication link by name.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param linkId The ID of the replication link.\n   * @param options The options parameters.\n   */\n  getByName(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    linkId: string,\n    options?: SqlPoolReplicationLinksGetByNameOptionalParams\n  ): Promise<SqlPoolReplicationLinksGetByNameResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, linkId, options },\n      getByNameOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    nextLink: string,\n    options?: SqlPoolReplicationLinksListNextOptionalParams\n  ): Promise<SqlPoolReplicationLinksListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/replicationLinks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReplicationLinkListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getByNameOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/replicationLinks/{linkId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReplicationLink\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.linkId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReplicationLinkListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { SqlPoolMaintenanceWindows } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  SqlPoolMaintenanceWindowsGetOptionalParams,\n  SqlPoolMaintenanceWindowsGetResponse,\n  MaintenanceWindows,\n  SqlPoolMaintenanceWindowsCreateOrUpdateOptionalParams\n} from \"../models\";\n\n/** Class containing SqlPoolMaintenanceWindows operations. */\nexport class SqlPoolMaintenanceWindowsImpl\n  implements SqlPoolMaintenanceWindows {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class SqlPoolMaintenanceWindows class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get a SQL pool's Maintenance Windows.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param maintenanceWindowName Maintenance window name.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    maintenanceWindowName: string,\n    options?: SqlPoolMaintenanceWindowsGetOptionalParams\n  ): Promise<SqlPoolMaintenanceWindowsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        maintenanceWindowName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a Sql pool's maintenance windows settings.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param maintenanceWindowName Maintenance window name.\n   * @param parameters The required parameters for creating or updating Maintenance Windows settings\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    maintenanceWindowName: string,\n    parameters: MaintenanceWindows,\n    options?: SqlPoolMaintenanceWindowsCreateOrUpdateOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        maintenanceWindowName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/maintenancewindows/current\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MaintenanceWindows\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.maintenanceWindowName],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/maintenancewindows/current\",\n  httpMethod: \"PUT\",\n  responses: { 200: {}, default: {} },\n  requestBody: Parameters.parameters3,\n  queryParameters: [Parameters.apiVersion, Parameters.maintenanceWindowName],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { SqlPoolMaintenanceWindowOptions } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  SqlPoolMaintenanceWindowOptionsGetOptionalParams,\n  SqlPoolMaintenanceWindowOptionsGetResponse\n} from \"../models\";\n\n/** Class containing SqlPoolMaintenanceWindowOptions operations. */\nexport class SqlPoolMaintenanceWindowOptionsImpl\n  implements SqlPoolMaintenanceWindowOptions {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class SqlPoolMaintenanceWindowOptions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get list of SQL pool's available maintenance windows.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param maintenanceWindowOptionsName Maintenance window options name.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    maintenanceWindowOptionsName: string,\n    options?: SqlPoolMaintenanceWindowOptionsGetOptionalParams\n  ): Promise<SqlPoolMaintenanceWindowOptionsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        maintenanceWindowOptionsName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/maintenanceWindowOptions/current\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MaintenanceWindowOptions\n    },\n    default: {}\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.maintenanceWindowOptionsName\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SqlPoolTransparentDataEncryptions } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  TransparentDataEncryption,\n  SqlPoolTransparentDataEncryptionsListNextOptionalParams,\n  SqlPoolTransparentDataEncryptionsListOptionalParams,\n  TransparentDataEncryptionName,\n  SqlPoolTransparentDataEncryptionsGetOptionalParams,\n  SqlPoolTransparentDataEncryptionsGetResponse,\n  SqlPoolTransparentDataEncryptionsCreateOrUpdateOptionalParams,\n  SqlPoolTransparentDataEncryptionsCreateOrUpdateResponse,\n  SqlPoolTransparentDataEncryptionsListResponse,\n  SqlPoolTransparentDataEncryptionsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing SqlPoolTransparentDataEncryptions operations. */\nexport class SqlPoolTransparentDataEncryptionsImpl\n  implements SqlPoolTransparentDataEncryptions {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class SqlPoolTransparentDataEncryptions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get list of SQL pool's transparent data encryption configurations.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolTransparentDataEncryptionsListOptionalParams\n  ): PagedAsyncIterableIterator<TransparentDataEncryption> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(\n          resourceGroupName,\n          workspaceName,\n          sqlPoolName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolTransparentDataEncryptionsListOptionalParams\n  ): AsyncIterableIterator<TransparentDataEncryption[]> {\n    let result = await this._list(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolTransparentDataEncryptionsListOptionalParams\n  ): AsyncIterableIterator<TransparentDataEncryption> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get a SQL pool's transparent data encryption configuration.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param transparentDataEncryptionName The name of the transparent data encryption configuration.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    transparentDataEncryptionName: TransparentDataEncryptionName,\n    options?: SqlPoolTransparentDataEncryptionsGetOptionalParams\n  ): Promise<SqlPoolTransparentDataEncryptionsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        transparentDataEncryptionName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a Sql pool's transparent data encryption configuration.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param transparentDataEncryptionName The name of the transparent data encryption configuration.\n   * @param parameters The required parameters for creating or updating transparent data encryption.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    transparentDataEncryptionName: TransparentDataEncryptionName,\n    parameters: TransparentDataEncryption,\n    options?: SqlPoolTransparentDataEncryptionsCreateOrUpdateOptionalParams\n  ): Promise<SqlPoolTransparentDataEncryptionsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        transparentDataEncryptionName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Get list of SQL pool's transparent data encryption configurations.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolTransparentDataEncryptionsListOptionalParams\n  ): Promise<SqlPoolTransparentDataEncryptionsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    nextLink: string,\n    options?: SqlPoolTransparentDataEncryptionsListNextOptionalParams\n  ): Promise<SqlPoolTransparentDataEncryptionsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/transparentDataEncryption/{transparentDataEncryptionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TransparentDataEncryption\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.transparentDataEncryptionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/transparentDataEncryption/{transparentDataEncryptionName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TransparentDataEncryption\n    },\n    201: {\n      bodyMapper: Mappers.TransparentDataEncryption\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters4,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.transparentDataEncryptionName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/transparentDataEncryption\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TransparentDataEncryptionListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TransparentDataEncryptionListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SqlPoolBlobAuditingPolicies } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  SqlPoolBlobAuditingPolicy,\n  SqlPoolBlobAuditingPoliciesListBySqlPoolNextOptionalParams,\n  SqlPoolBlobAuditingPoliciesListBySqlPoolOptionalParams,\n  SqlPoolBlobAuditingPoliciesGetOptionalParams,\n  SqlPoolBlobAuditingPoliciesGetResponse,\n  SqlPoolBlobAuditingPoliciesCreateOrUpdateOptionalParams,\n  SqlPoolBlobAuditingPoliciesCreateOrUpdateResponse,\n  SqlPoolBlobAuditingPoliciesListBySqlPoolResponse,\n  SqlPoolBlobAuditingPoliciesListBySqlPoolNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing SqlPoolBlobAuditingPolicies operations. */\nexport class SqlPoolBlobAuditingPoliciesImpl\n  implements SqlPoolBlobAuditingPolicies {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class SqlPoolBlobAuditingPolicies class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists auditing settings of a Sql pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  public listBySqlPool(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolBlobAuditingPoliciesListBySqlPoolOptionalParams\n  ): PagedAsyncIterableIterator<SqlPoolBlobAuditingPolicy> {\n    const iter = this.listBySqlPoolPagingAll(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listBySqlPoolPagingPage(\n          resourceGroupName,\n          workspaceName,\n          sqlPoolName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listBySqlPoolPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolBlobAuditingPoliciesListBySqlPoolOptionalParams\n  ): AsyncIterableIterator<SqlPoolBlobAuditingPolicy[]> {\n    let result = await this._listBySqlPool(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listBySqlPoolNext(\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listBySqlPoolPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolBlobAuditingPoliciesListBySqlPoolOptionalParams\n  ): AsyncIterableIterator<SqlPoolBlobAuditingPolicy> {\n    for await (const page of this.listBySqlPoolPagingPage(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get a SQL pool's blob auditing policy.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolBlobAuditingPoliciesGetOptionalParams\n  ): Promise<SqlPoolBlobAuditingPoliciesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a SQL pool's blob auditing policy.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param parameters The database blob auditing policy.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    parameters: SqlPoolBlobAuditingPolicy,\n    options?: SqlPoolBlobAuditingPoliciesCreateOrUpdateOptionalParams\n  ): Promise<SqlPoolBlobAuditingPoliciesCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Lists auditing settings of a Sql pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  private _listBySqlPool(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolBlobAuditingPoliciesListBySqlPoolOptionalParams\n  ): Promise<SqlPoolBlobAuditingPoliciesListBySqlPoolResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, options },\n      listBySqlPoolOperationSpec\n    );\n  }\n\n  /**\n   * ListBySqlPoolNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param nextLink The nextLink from the previous successful call to the ListBySqlPool method.\n   * @param options The options parameters.\n   */\n  private _listBySqlPoolNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    nextLink: string,\n    options?: SqlPoolBlobAuditingPoliciesListBySqlPoolNextOptionalParams\n  ): Promise<SqlPoolBlobAuditingPoliciesListBySqlPoolNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, nextLink, options },\n      listBySqlPoolNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/auditingSettings/{blobAuditingPolicyName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SqlPoolBlobAuditingPolicy\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.blobAuditingPolicyName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/auditingSettings/{blobAuditingPolicyName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SqlPoolBlobAuditingPolicy\n    },\n    201: {\n      bodyMapper: Mappers.SqlPoolBlobAuditingPolicy\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters5,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.blobAuditingPolicyName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listBySqlPoolOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/auditingSettings\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SqlPoolBlobAuditingPolicyListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySqlPoolNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SqlPoolBlobAuditingPolicyListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SqlPoolOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  SqlPoolOperation,\n  SqlPoolOperationsListNextOptionalParams,\n  SqlPoolOperationsListOptionalParams,\n  SqlPoolOperationsListResponse,\n  SqlPoolOperationsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing SqlPoolOperations operations. */\nexport class SqlPoolOperationsImpl implements SqlPoolOperations {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class SqlPoolOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of operations performed on the SQL pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolOperationsListOptionalParams\n  ): PagedAsyncIterableIterator<SqlPoolOperation> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(\n          resourceGroupName,\n          workspaceName,\n          sqlPoolName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolOperationsListOptionalParams\n  ): AsyncIterableIterator<SqlPoolOperation[]> {\n    let result = await this._list(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolOperationsListOptionalParams\n  ): AsyncIterableIterator<SqlPoolOperation> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of operations performed on the SQL pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolOperationsListOptionalParams\n  ): Promise<SqlPoolOperationsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    nextLink: string,\n    options?: SqlPoolOperationsListNextOptionalParams\n  ): Promise<SqlPoolOperationsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SqlPoolBlobAuditingPolicySqlPoolOperationListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SqlPoolBlobAuditingPolicySqlPoolOperationListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SqlPoolUsages } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  SqlPoolUsage,\n  SqlPoolUsagesListNextOptionalParams,\n  SqlPoolUsagesListOptionalParams,\n  SqlPoolUsagesListResponse,\n  SqlPoolUsagesListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing SqlPoolUsages operations. */\nexport class SqlPoolUsagesImpl implements SqlPoolUsages {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class SqlPoolUsages class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets SQL pool usages.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolUsagesListOptionalParams\n  ): PagedAsyncIterableIterator<SqlPoolUsage> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(\n          resourceGroupName,\n          workspaceName,\n          sqlPoolName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolUsagesListOptionalParams\n  ): AsyncIterableIterator<SqlPoolUsage[]> {\n    let result = await this._list(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolUsagesListOptionalParams\n  ): AsyncIterableIterator<SqlPoolUsage> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets SQL pool usages.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolUsagesListOptionalParams\n  ): Promise<SqlPoolUsagesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    nextLink: string,\n    options?: SqlPoolUsagesListNextOptionalParams\n  ): Promise<SqlPoolUsagesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/usages\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SqlPoolUsageListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SqlPoolUsageListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SqlPoolSensitivityLabels } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  SensitivityLabel,\n  SqlPoolSensitivityLabelsListCurrentNextOptionalParams,\n  SqlPoolSensitivityLabelsListCurrentOptionalParams,\n  SqlPoolSensitivityLabelsListRecommendedNextOptionalParams,\n  SqlPoolSensitivityLabelsListRecommendedOptionalParams,\n  SqlPoolSensitivityLabelsListCurrentResponse,\n  SensitivityLabelUpdateList,\n  SqlPoolSensitivityLabelsUpdateOptionalParams,\n  SqlPoolSensitivityLabelsListRecommendedResponse,\n  SqlPoolSensitivityLabelsCreateOrUpdateOptionalParams,\n  SqlPoolSensitivityLabelsCreateOrUpdateResponse,\n  SqlPoolSensitivityLabelsDeleteOptionalParams,\n  SensitivityLabelSource,\n  SqlPoolSensitivityLabelsGetOptionalParams,\n  SqlPoolSensitivityLabelsGetResponse,\n  SqlPoolSensitivityLabelsEnableRecommendationOptionalParams,\n  SqlPoolSensitivityLabelsDisableRecommendationOptionalParams,\n  SqlPoolSensitivityLabelsListCurrentNextResponse,\n  SqlPoolSensitivityLabelsListRecommendedNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing SqlPoolSensitivityLabels operations. */\nexport class SqlPoolSensitivityLabelsImpl implements SqlPoolSensitivityLabels {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class SqlPoolSensitivityLabels class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets SQL pool sensitivity labels.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  public listCurrent(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolSensitivityLabelsListCurrentOptionalParams\n  ): PagedAsyncIterableIterator<SensitivityLabel> {\n    const iter = this.listCurrentPagingAll(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listCurrentPagingPage(\n          resourceGroupName,\n          workspaceName,\n          sqlPoolName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listCurrentPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolSensitivityLabelsListCurrentOptionalParams\n  ): AsyncIterableIterator<SensitivityLabel[]> {\n    let result = await this._listCurrent(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listCurrentNext(\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listCurrentPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolSensitivityLabelsListCurrentOptionalParams\n  ): AsyncIterableIterator<SensitivityLabel> {\n    for await (const page of this.listCurrentPagingPage(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets sensitivity labels of a given SQL pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  public listRecommended(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolSensitivityLabelsListRecommendedOptionalParams\n  ): PagedAsyncIterableIterator<SensitivityLabel> {\n    const iter = this.listRecommendedPagingAll(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listRecommendedPagingPage(\n          resourceGroupName,\n          workspaceName,\n          sqlPoolName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listRecommendedPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolSensitivityLabelsListRecommendedOptionalParams\n  ): AsyncIterableIterator<SensitivityLabel[]> {\n    let result = await this._listRecommended(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listRecommendedNext(\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listRecommendedPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolSensitivityLabelsListRecommendedOptionalParams\n  ): AsyncIterableIterator<SensitivityLabel> {\n    for await (const page of this.listRecommendedPagingPage(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets SQL pool sensitivity labels.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  private _listCurrent(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolSensitivityLabelsListCurrentOptionalParams\n  ): Promise<SqlPoolSensitivityLabelsListCurrentResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, options },\n      listCurrentOperationSpec\n    );\n  }\n\n  /**\n   * Update sensitivity labels of a given SQL Pool using an operations batch.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param parameters A list of sensitivity label update operations.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    parameters: SensitivityLabelUpdateList,\n    options?: SqlPoolSensitivityLabelsUpdateOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, parameters, options },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * Gets sensitivity labels of a given SQL pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  private _listRecommended(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolSensitivityLabelsListRecommendedOptionalParams\n  ): Promise<SqlPoolSensitivityLabelsListRecommendedResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, options },\n      listRecommendedOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates the sensitivity label of a given column in a Sql pool\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param schemaName The name of the schema.\n   * @param tableName The name of the table.\n   * @param columnName The name of the column.\n   * @param parameters The column sensitivity label resource.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    schemaName: string,\n    tableName: string,\n    columnName: string,\n    parameters: SensitivityLabel,\n    options?: SqlPoolSensitivityLabelsCreateOrUpdateOptionalParams\n  ): Promise<SqlPoolSensitivityLabelsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        schemaName,\n        tableName,\n        columnName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Deletes the sensitivity label of a given column in a Sql pool\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param schemaName The name of the schema.\n   * @param tableName The name of the table.\n   * @param columnName The name of the column.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    schemaName: string,\n    tableName: string,\n    columnName: string,\n    options?: SqlPoolSensitivityLabelsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        schemaName,\n        tableName,\n        columnName,\n        options\n      },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Gets the sensitivity label of a given column\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param schemaName The name of the schema.\n   * @param tableName The name of the table.\n   * @param columnName The name of the column.\n   * @param sensitivityLabelSource The source of the sensitivity label.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    schemaName: string,\n    tableName: string,\n    columnName: string,\n    sensitivityLabelSource: SensitivityLabelSource,\n    options?: SqlPoolSensitivityLabelsGetOptionalParams\n  ): Promise<SqlPoolSensitivityLabelsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        schemaName,\n        tableName,\n        columnName,\n        sensitivityLabelSource,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Enables sensitivity recommendations on a given column (recommendations are enabled by default on all\n   * columns)\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param schemaName The name of the schema.\n   * @param tableName The name of the table.\n   * @param columnName The name of the column.\n   * @param options The options parameters.\n   */\n  enableRecommendation(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    schemaName: string,\n    tableName: string,\n    columnName: string,\n    options?: SqlPoolSensitivityLabelsEnableRecommendationOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        schemaName,\n        tableName,\n        columnName,\n        options\n      },\n      enableRecommendationOperationSpec\n    );\n  }\n\n  /**\n   * Disables sensitivity recommendations on a given column\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param schemaName The name of the schema.\n   * @param tableName The name of the table.\n   * @param columnName The name of the column.\n   * @param options The options parameters.\n   */\n  disableRecommendation(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    schemaName: string,\n    tableName: string,\n    columnName: string,\n    options?: SqlPoolSensitivityLabelsDisableRecommendationOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        schemaName,\n        tableName,\n        columnName,\n        options\n      },\n      disableRecommendationOperationSpec\n    );\n  }\n\n  /**\n   * ListCurrentNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param nextLink The nextLink from the previous successful call to the ListCurrent method.\n   * @param options The options parameters.\n   */\n  private _listCurrentNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    nextLink: string,\n    options?: SqlPoolSensitivityLabelsListCurrentNextOptionalParams\n  ): Promise<SqlPoolSensitivityLabelsListCurrentNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, nextLink, options },\n      listCurrentNextOperationSpec\n    );\n  }\n\n  /**\n   * ListRecommendedNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param nextLink The nextLink from the previous successful call to the ListRecommended method.\n   * @param options The options parameters.\n   */\n  private _listRecommendedNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    nextLink: string,\n    options?: SqlPoolSensitivityLabelsListRecommendedNextOptionalParams\n  ): Promise<SqlPoolSensitivityLabelsListRecommendedNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, nextLink, options },\n      listRecommendedNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listCurrentOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/currentSensitivityLabels\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SensitivityLabelListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/currentSensitivityLabels\",\n  httpMethod: \"PATCH\",\n  responses: { 200: {}, default: {} },\n  requestBody: Parameters.parameters6,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listRecommendedOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/recommendedSensitivityLabels\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SensitivityLabelListResult\n    },\n    default: {}\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.filter,\n    Parameters.includeDisabledRecommendations,\n    Parameters.skipToken\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}/sensitivityLabels/{sensitivityLabelSource}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SensitivityLabel\n    },\n    201: {\n      bodyMapper: Mappers.SensitivityLabel\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters7,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.schemaName,\n    Parameters.tableName,\n    Parameters.columnName,\n    Parameters.sensitivityLabelSource\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}/sensitivityLabels/{sensitivityLabelSource}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.schemaName,\n    Parameters.tableName,\n    Parameters.columnName,\n    Parameters.sensitivityLabelSource\n  ],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}/sensitivityLabels/{sensitivityLabelSource}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SensitivityLabel\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.schemaName,\n    Parameters.tableName,\n    Parameters.columnName,\n    Parameters.sensitivityLabelSource1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst enableRecommendationOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}/sensitivityLabels/{sensitivityLabelSource}/enable\",\n  httpMethod: \"POST\",\n  responses: { 200: {}, default: {} },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.schemaName,\n    Parameters.tableName,\n    Parameters.columnName,\n    Parameters.sensitivityLabelSource2\n  ],\n  serializer\n};\nconst disableRecommendationOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}/sensitivityLabels/{sensitivityLabelSource}/disable\",\n  httpMethod: \"POST\",\n  responses: { 200: {}, default: {} },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.schemaName,\n    Parameters.tableName,\n    Parameters.columnName,\n    Parameters.sensitivityLabelSource2\n  ],\n  serializer\n};\nconst listCurrentNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SensitivityLabelListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listRecommendedNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SensitivityLabelListResult\n    },\n    default: {}\n  },\n  queryParameters: [\n    Parameters.apiVersion,\n    Parameters.filter,\n    Parameters.includeDisabledRecommendations,\n    Parameters.skipToken\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { SqlPoolRecommendedSensitivityLabels } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  RecommendedSensitivityLabelUpdateList,\n  SqlPoolRecommendedSensitivityLabelsUpdateOptionalParams\n} from \"../models\";\n\n/** Class containing SqlPoolRecommendedSensitivityLabels operations. */\nexport class SqlPoolRecommendedSensitivityLabelsImpl\n  implements SqlPoolRecommendedSensitivityLabels {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class SqlPoolRecommendedSensitivityLabels class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Update recommended sensitivity labels states of a given SQL Pool using an operations batch.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param parameters A list of recommended sensitivity label update operations.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    parameters: RecommendedSensitivityLabelUpdateList,\n    options?: SqlPoolRecommendedSensitivityLabelsUpdateOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, parameters, options },\n      updateOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/recommendedSensitivityLabels\",\n  httpMethod: \"PATCH\",\n  responses: { 200: {}, default: {} },\n  requestBody: Parameters.parameters8,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SqlPoolSchemas } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  SqlPoolSchema,\n  SqlPoolSchemasListNextOptionalParams,\n  SqlPoolSchemasListOptionalParams,\n  SqlPoolSchemasListResponse,\n  SqlPoolSchemasGetOptionalParams,\n  SqlPoolSchemasGetResponse,\n  SqlPoolSchemasListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing SqlPoolSchemas operations. */\nexport class SqlPoolSchemasImpl implements SqlPoolSchemas {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class SqlPoolSchemas class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets schemas of a given SQL pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolSchemasListOptionalParams\n  ): PagedAsyncIterableIterator<SqlPoolSchema> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(\n          resourceGroupName,\n          workspaceName,\n          sqlPoolName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolSchemasListOptionalParams\n  ): AsyncIterableIterator<SqlPoolSchema[]> {\n    let result = await this._list(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolSchemasListOptionalParams\n  ): AsyncIterableIterator<SqlPoolSchema> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets schemas of a given SQL pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolSchemasListOptionalParams\n  ): Promise<SqlPoolSchemasListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Get Sql Pool schema\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param schemaName The name of the schema.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    schemaName: string,\n    options?: SqlPoolSchemasGetOptionalParams\n  ): Promise<SqlPoolSchemasGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, schemaName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    nextLink: string,\n    options?: SqlPoolSchemasListNextOptionalParams\n  ): Promise<SqlPoolSchemasListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/schemas\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SqlPoolSchemaListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/schemas/{schemaName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SqlPoolSchema\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.schemaName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SqlPoolSchemaListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SqlPoolTables } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  SqlPoolTable,\n  SqlPoolTablesListBySchemaNextOptionalParams,\n  SqlPoolTablesListBySchemaOptionalParams,\n  SqlPoolTablesListBySchemaResponse,\n  SqlPoolTablesGetOptionalParams,\n  SqlPoolTablesGetResponse,\n  SqlPoolTablesListBySchemaNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing SqlPoolTables operations. */\nexport class SqlPoolTablesImpl implements SqlPoolTables {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class SqlPoolTables class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets tables of a given schema in a SQL pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param schemaName The name of the schema.\n   * @param options The options parameters.\n   */\n  public listBySchema(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    schemaName: string,\n    options?: SqlPoolTablesListBySchemaOptionalParams\n  ): PagedAsyncIterableIterator<SqlPoolTable> {\n    const iter = this.listBySchemaPagingAll(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      schemaName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listBySchemaPagingPage(\n          resourceGroupName,\n          workspaceName,\n          sqlPoolName,\n          schemaName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listBySchemaPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    schemaName: string,\n    options?: SqlPoolTablesListBySchemaOptionalParams\n  ): AsyncIterableIterator<SqlPoolTable[]> {\n    let result = await this._listBySchema(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      schemaName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listBySchemaNext(\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        schemaName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listBySchemaPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    schemaName: string,\n    options?: SqlPoolTablesListBySchemaOptionalParams\n  ): AsyncIterableIterator<SqlPoolTable> {\n    for await (const page of this.listBySchemaPagingPage(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      schemaName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets tables of a given schema in a SQL pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param schemaName The name of the schema.\n   * @param options The options parameters.\n   */\n  private _listBySchema(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    schemaName: string,\n    options?: SqlPoolTablesListBySchemaOptionalParams\n  ): Promise<SqlPoolTablesListBySchemaResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, schemaName, options },\n      listBySchemaOperationSpec\n    );\n  }\n\n  /**\n   * Get Sql pool table\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param schemaName The name of the schema.\n   * @param tableName The name of the table.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    schemaName: string,\n    tableName: string,\n    options?: SqlPoolTablesGetOptionalParams\n  ): Promise<SqlPoolTablesGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        schemaName,\n        tableName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * ListBySchemaNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param schemaName The name of the schema.\n   * @param nextLink The nextLink from the previous successful call to the ListBySchema method.\n   * @param options The options parameters.\n   */\n  private _listBySchemaNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    schemaName: string,\n    nextLink: string,\n    options?: SqlPoolTablesListBySchemaNextOptionalParams\n  ): Promise<SqlPoolTablesListBySchemaNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        schemaName,\n        nextLink,\n        options\n      },\n      listBySchemaNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listBySchemaOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/schemas/{schemaName}/tables\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SqlPoolTableListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.schemaName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/schemas/{schemaName}/tables/{tableName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SqlPoolTable\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.schemaName,\n    Parameters.tableName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySchemaNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SqlPoolTableListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink,\n    Parameters.sqlPoolName,\n    Parameters.schemaName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SqlPoolTableColumns } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  SqlPoolColumn,\n  SqlPoolTableColumnsListByTableNameNextOptionalParams,\n  SqlPoolTableColumnsListByTableNameOptionalParams,\n  SqlPoolTableColumnsListByTableNameResponse,\n  SqlPoolTableColumnsListByTableNameNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing SqlPoolTableColumns operations. */\nexport class SqlPoolTableColumnsImpl implements SqlPoolTableColumns {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class SqlPoolTableColumns class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets columns in a given table in a SQL pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param schemaName The name of the schema.\n   * @param tableName The name of the table.\n   * @param options The options parameters.\n   */\n  public listByTableName(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    schemaName: string,\n    tableName: string,\n    options?: SqlPoolTableColumnsListByTableNameOptionalParams\n  ): PagedAsyncIterableIterator<SqlPoolColumn> {\n    const iter = this.listByTableNamePagingAll(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      schemaName,\n      tableName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByTableNamePagingPage(\n          resourceGroupName,\n          workspaceName,\n          sqlPoolName,\n          schemaName,\n          tableName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listByTableNamePagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    schemaName: string,\n    tableName: string,\n    options?: SqlPoolTableColumnsListByTableNameOptionalParams\n  ): AsyncIterableIterator<SqlPoolColumn[]> {\n    let result = await this._listByTableName(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      schemaName,\n      tableName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByTableNameNext(\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        schemaName,\n        tableName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByTableNamePagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    schemaName: string,\n    tableName: string,\n    options?: SqlPoolTableColumnsListByTableNameOptionalParams\n  ): AsyncIterableIterator<SqlPoolColumn> {\n    for await (const page of this.listByTableNamePagingPage(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      schemaName,\n      tableName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets columns in a given table in a SQL pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param schemaName The name of the schema.\n   * @param tableName The name of the table.\n   * @param options The options parameters.\n   */\n  private _listByTableName(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    schemaName: string,\n    tableName: string,\n    options?: SqlPoolTableColumnsListByTableNameOptionalParams\n  ): Promise<SqlPoolTableColumnsListByTableNameResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        schemaName,\n        tableName,\n        options\n      },\n      listByTableNameOperationSpec\n    );\n  }\n\n  /**\n   * ListByTableNameNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param schemaName The name of the schema.\n   * @param tableName The name of the table.\n   * @param nextLink The nextLink from the previous successful call to the ListByTableName method.\n   * @param options The options parameters.\n   */\n  private _listByTableNameNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    schemaName: string,\n    tableName: string,\n    nextLink: string,\n    options?: SqlPoolTableColumnsListByTableNameNextOptionalParams\n  ): Promise<SqlPoolTableColumnsListByTableNameNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        schemaName,\n        tableName,\n        nextLink,\n        options\n      },\n      listByTableNameNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByTableNameOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/schemas/{schemaName}/tables/{tableName}/columns\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SqlPoolColumnListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.schemaName,\n    Parameters.tableName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByTableNameNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SqlPoolColumnListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink,\n    Parameters.sqlPoolName,\n    Parameters.schemaName,\n    Parameters.tableName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { SqlPoolConnectionPolicies } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  ConnectionPolicyName,\n  SqlPoolConnectionPoliciesGetOptionalParams,\n  SqlPoolConnectionPoliciesGetResponse\n} from \"../models\";\n\n/** Class containing SqlPoolConnectionPolicies operations. */\nexport class SqlPoolConnectionPoliciesImpl\n  implements SqlPoolConnectionPolicies {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class SqlPoolConnectionPolicies class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get a Sql pool's connection policy, which is used with table auditing.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param connectionPolicyName The name of the connection policy.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    connectionPolicyName: ConnectionPolicyName,\n    options?: SqlPoolConnectionPoliciesGetOptionalParams\n  ): Promise<SqlPoolConnectionPoliciesGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        connectionPolicyName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/connectionPolicies/{connectionPolicyName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SqlPoolConnectionPolicy\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.connectionPolicyName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SqlPoolVulnerabilityAssessments } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  SqlPoolVulnerabilityAssessment,\n  SqlPoolVulnerabilityAssessmentsListNextOptionalParams,\n  SqlPoolVulnerabilityAssessmentsListOptionalParams,\n  SqlPoolVulnerabilityAssessmentsListResponse,\n  VulnerabilityAssessmentName,\n  SqlPoolVulnerabilityAssessmentsGetOptionalParams,\n  SqlPoolVulnerabilityAssessmentsGetResponse,\n  SqlPoolVulnerabilityAssessmentsCreateOrUpdateOptionalParams,\n  SqlPoolVulnerabilityAssessmentsCreateOrUpdateResponse,\n  SqlPoolVulnerabilityAssessmentsDeleteOptionalParams,\n  SqlPoolVulnerabilityAssessmentsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing SqlPoolVulnerabilityAssessments operations. */\nexport class SqlPoolVulnerabilityAssessmentsImpl\n  implements SqlPoolVulnerabilityAssessments {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class SqlPoolVulnerabilityAssessments class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists the vulnerability assessment policies associated with a SQL pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolVulnerabilityAssessmentsListOptionalParams\n  ): PagedAsyncIterableIterator<SqlPoolVulnerabilityAssessment> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(\n          resourceGroupName,\n          workspaceName,\n          sqlPoolName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolVulnerabilityAssessmentsListOptionalParams\n  ): AsyncIterableIterator<SqlPoolVulnerabilityAssessment[]> {\n    let result = await this._list(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolVulnerabilityAssessmentsListOptionalParams\n  ): AsyncIterableIterator<SqlPoolVulnerabilityAssessment> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists the vulnerability assessment policies associated with a SQL pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolVulnerabilityAssessmentsListOptionalParams\n  ): Promise<SqlPoolVulnerabilityAssessmentsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Gets the Sql pool's vulnerability assessment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    options?: SqlPoolVulnerabilityAssessmentsGetOptionalParams\n  ): Promise<SqlPoolVulnerabilityAssessmentsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        vulnerabilityAssessmentName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates the Sql pool vulnerability assessment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param parameters The requested resource.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    parameters: SqlPoolVulnerabilityAssessment,\n    options?: SqlPoolVulnerabilityAssessmentsCreateOrUpdateOptionalParams\n  ): Promise<SqlPoolVulnerabilityAssessmentsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        vulnerabilityAssessmentName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Removes the database's vulnerability assessment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    options?: SqlPoolVulnerabilityAssessmentsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        vulnerabilityAssessmentName,\n        options\n      },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    nextLink: string,\n    options?: SqlPoolVulnerabilityAssessmentsListNextOptionalParams\n  ): Promise<SqlPoolVulnerabilityAssessmentsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/vulnerabilityAssessments\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SqlPoolVulnerabilityAssessmentListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SqlPoolVulnerabilityAssessment\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.vulnerabilityAssessmentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SqlPoolVulnerabilityAssessment\n    },\n    201: {\n      bodyMapper: Mappers.SqlPoolVulnerabilityAssessment\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters9,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.vulnerabilityAssessmentName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.vulnerabilityAssessmentName\n  ],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SqlPoolVulnerabilityAssessmentListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SqlPoolVulnerabilityAssessmentScans } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  VulnerabilityAssessmentScanRecord,\n  VulnerabilityAssessmentName,\n  SqlPoolVulnerabilityAssessmentScansListNextOptionalParams,\n  SqlPoolVulnerabilityAssessmentScansListOptionalParams,\n  SqlPoolVulnerabilityAssessmentScansListResponse,\n  SqlPoolVulnerabilityAssessmentScansInitiateScanOptionalParams,\n  SqlPoolVulnerabilityAssessmentScansExportOptionalParams,\n  SqlPoolVulnerabilityAssessmentScansExportResponse,\n  SqlPoolVulnerabilityAssessmentScansGetOptionalParams,\n  SqlPoolVulnerabilityAssessmentScansGetResponse,\n  SqlPoolVulnerabilityAssessmentScansListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing SqlPoolVulnerabilityAssessmentScans operations. */\nexport class SqlPoolVulnerabilityAssessmentScansImpl\n  implements SqlPoolVulnerabilityAssessmentScans {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class SqlPoolVulnerabilityAssessmentScans class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists the vulnerability assessment scans of a SQL pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    options?: SqlPoolVulnerabilityAssessmentScansListOptionalParams\n  ): PagedAsyncIterableIterator<VulnerabilityAssessmentScanRecord> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      vulnerabilityAssessmentName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(\n          resourceGroupName,\n          workspaceName,\n          sqlPoolName,\n          vulnerabilityAssessmentName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    options?: SqlPoolVulnerabilityAssessmentScansListOptionalParams\n  ): AsyncIterableIterator<VulnerabilityAssessmentScanRecord[]> {\n    let result = await this._list(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      vulnerabilityAssessmentName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        vulnerabilityAssessmentName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    options?: SqlPoolVulnerabilityAssessmentScansListOptionalParams\n  ): AsyncIterableIterator<VulnerabilityAssessmentScanRecord> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      vulnerabilityAssessmentName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists the vulnerability assessment scans of a SQL pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    options?: SqlPoolVulnerabilityAssessmentScansListOptionalParams\n  ): Promise<SqlPoolVulnerabilityAssessmentScansListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        vulnerabilityAssessmentName,\n        options\n      },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Executes a Vulnerability Assessment database scan.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param scanId The vulnerability assessment scan Id of the scan to retrieve.\n   * @param options The options parameters.\n   */\n  async beginInitiateScan(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    scanId: string,\n    options?: SqlPoolVulnerabilityAssessmentScansInitiateScanOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        vulnerabilityAssessmentName,\n        scanId,\n        options\n      },\n      initiateScanOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Executes a Vulnerability Assessment database scan.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param scanId The vulnerability assessment scan Id of the scan to retrieve.\n   * @param options The options parameters.\n   */\n  async beginInitiateScanAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    scanId: string,\n    options?: SqlPoolVulnerabilityAssessmentScansInitiateScanOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginInitiateScan(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      vulnerabilityAssessmentName,\n      scanId,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Convert an existing scan result to a human readable format. If already exists nothing happens\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param scanId The vulnerability assessment scan Id of the scan to retrieve.\n   * @param options The options parameters.\n   */\n  export(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    scanId: string,\n    options?: SqlPoolVulnerabilityAssessmentScansExportOptionalParams\n  ): Promise<SqlPoolVulnerabilityAssessmentScansExportResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        vulnerabilityAssessmentName,\n        scanId,\n        options\n      },\n      exportOperationSpec\n    );\n  }\n\n  /**\n   * Gets a vulnerability assessment scan record of a Sql pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param scanId The vulnerability assessment scan Id of the scan to retrieve.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    scanId: string,\n    options?: SqlPoolVulnerabilityAssessmentScansGetOptionalParams\n  ): Promise<SqlPoolVulnerabilityAssessmentScansGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        vulnerabilityAssessmentName,\n        scanId,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    nextLink: string,\n    options?: SqlPoolVulnerabilityAssessmentScansListNextOptionalParams\n  ): Promise<SqlPoolVulnerabilityAssessmentScansListNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        vulnerabilityAssessmentName,\n        nextLink,\n        options\n      },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/scans\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VulnerabilityAssessmentScanRecordListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.vulnerabilityAssessmentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst initiateScanOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/scans/{scanId}/initiateScan\",\n  httpMethod: \"POST\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.vulnerabilityAssessmentName,\n    Parameters.scanId\n  ],\n  serializer\n};\nconst exportOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/scans/{scanId}/export\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SqlPoolVulnerabilityAssessmentScansExport\n    },\n    201: {\n      bodyMapper: Mappers.SqlPoolVulnerabilityAssessmentScansExport\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.vulnerabilityAssessmentName,\n    Parameters.scanId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/scans/{scanId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VulnerabilityAssessmentScanRecord\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.vulnerabilityAssessmentName,\n    Parameters.scanId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VulnerabilityAssessmentScanRecordListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink,\n    Parameters.sqlPoolName,\n    Parameters.vulnerabilityAssessmentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SqlPoolSecurityAlertPolicies } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  SqlPoolSecurityAlertPolicy,\n  SqlPoolSecurityAlertPoliciesListNextOptionalParams,\n  SqlPoolSecurityAlertPoliciesListOptionalParams,\n  SqlPoolSecurityAlertPoliciesListResponse,\n  SecurityAlertPolicyName,\n  SqlPoolSecurityAlertPoliciesGetOptionalParams,\n  SqlPoolSecurityAlertPoliciesGetResponse,\n  SqlPoolSecurityAlertPoliciesCreateOrUpdateOptionalParams,\n  SqlPoolSecurityAlertPoliciesCreateOrUpdateResponse,\n  SqlPoolSecurityAlertPoliciesListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing SqlPoolSecurityAlertPolicies operations. */\nexport class SqlPoolSecurityAlertPoliciesImpl\n  implements SqlPoolSecurityAlertPolicies {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class SqlPoolSecurityAlertPolicies class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get a list of Sql pool's security alert policies.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolSecurityAlertPoliciesListOptionalParams\n  ): PagedAsyncIterableIterator<SqlPoolSecurityAlertPolicy> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(\n          resourceGroupName,\n          workspaceName,\n          sqlPoolName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolSecurityAlertPoliciesListOptionalParams\n  ): AsyncIterableIterator<SqlPoolSecurityAlertPolicy[]> {\n    let result = await this._list(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolSecurityAlertPoliciesListOptionalParams\n  ): AsyncIterableIterator<SqlPoolSecurityAlertPolicy> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get a list of Sql pool's security alert policies.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolSecurityAlertPoliciesListOptionalParams\n  ): Promise<SqlPoolSecurityAlertPoliciesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Get a Sql pool's security alert policy.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param securityAlertPolicyName The name of the security alert policy.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    securityAlertPolicyName: SecurityAlertPolicyName,\n    options?: SqlPoolSecurityAlertPoliciesGetOptionalParams\n  ): Promise<SqlPoolSecurityAlertPoliciesGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        securityAlertPolicyName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or update a Sql pool's security alert policy.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param securityAlertPolicyName The name of the security alert policy.\n   * @param parameters The Sql pool security alert policy.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    securityAlertPolicyName: SecurityAlertPolicyName,\n    parameters: SqlPoolSecurityAlertPolicy,\n    options?: SqlPoolSecurityAlertPoliciesCreateOrUpdateOptionalParams\n  ): Promise<SqlPoolSecurityAlertPoliciesCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        securityAlertPolicyName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    nextLink: string,\n    options?: SqlPoolSecurityAlertPoliciesListNextOptionalParams\n  ): Promise<SqlPoolSecurityAlertPoliciesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/securityAlertPolicies\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListSqlPoolSecurityAlertPolicies\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/securityAlertPolicies/{securityAlertPolicyName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SqlPoolSecurityAlertPolicy\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.securityAlertPolicyName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/securityAlertPolicies/{securityAlertPolicyName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SqlPoolSecurityAlertPolicy\n    },\n    201: {\n      bodyMapper: Mappers.SqlPoolSecurityAlertPolicy\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters10,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.securityAlertPolicyName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListSqlPoolSecurityAlertPolicies\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { SqlPoolVulnerabilityAssessmentRuleBaselines } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  VulnerabilityAssessmentName,\n  SqlPoolVulnerabilityAssessmentRuleBaseline,\n  VulnerabilityAssessmentPolicyBaselineName,\n  SqlPoolVulnerabilityAssessmentRuleBaselinesCreateOrUpdateOptionalParams,\n  SqlPoolVulnerabilityAssessmentRuleBaselinesCreateOrUpdateResponse,\n  SqlPoolVulnerabilityAssessmentRuleBaselinesDeleteOptionalParams,\n  SqlPoolVulnerabilityAssessmentRuleBaselinesGetOptionalParams,\n  SqlPoolVulnerabilityAssessmentRuleBaselinesGetResponse\n} from \"../models\";\n\n/** Class containing SqlPoolVulnerabilityAssessmentRuleBaselines operations. */\nexport class SqlPoolVulnerabilityAssessmentRuleBaselinesImpl\n  implements SqlPoolVulnerabilityAssessmentRuleBaselines {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class SqlPoolVulnerabilityAssessmentRuleBaselines class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Creates or updates a Sql pool's vulnerability assessment rule baseline.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param ruleId The vulnerability assessment rule ID.\n   * @param baselineName The name of the vulnerability assessment rule baseline (default implies a\n   *                     baseline on a Sql pool level rule and master for workspace level rule).\n   * @param parameters The requested rule baseline resource.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    ruleId: string,\n    baselineName: VulnerabilityAssessmentPolicyBaselineName,\n    parameters: SqlPoolVulnerabilityAssessmentRuleBaseline,\n    options?: SqlPoolVulnerabilityAssessmentRuleBaselinesCreateOrUpdateOptionalParams\n  ): Promise<\n    SqlPoolVulnerabilityAssessmentRuleBaselinesCreateOrUpdateResponse\n  > {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        vulnerabilityAssessmentName,\n        ruleId,\n        baselineName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Removes the database's vulnerability assessment rule baseline.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param ruleId The vulnerability assessment rule ID.\n   * @param baselineName The name of the vulnerability assessment rule baseline (default implies a\n   *                     baseline on a Sql pool level rule and master for workspace level rule).\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    ruleId: string,\n    baselineName: VulnerabilityAssessmentPolicyBaselineName,\n    options?: SqlPoolVulnerabilityAssessmentRuleBaselinesDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        vulnerabilityAssessmentName,\n        ruleId,\n        baselineName,\n        options\n      },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Gets a SqlPool's vulnerability assessment rule baseline.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param ruleId The vulnerability assessment rule ID.\n   * @param baselineName The name of the vulnerability assessment rule baseline (default implies a\n   *                     baseline on a Sql pool level rule and master for server level rule).\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    ruleId: string,\n    baselineName: VulnerabilityAssessmentPolicyBaselineName,\n    options?: SqlPoolVulnerabilityAssessmentRuleBaselinesGetOptionalParams\n  ): Promise<SqlPoolVulnerabilityAssessmentRuleBaselinesGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        vulnerabilityAssessmentName,\n        ruleId,\n        baselineName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/rules/{ruleId}/baselines/{baselineName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SqlPoolVulnerabilityAssessmentRuleBaseline\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters11,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.vulnerabilityAssessmentName,\n    Parameters.ruleId,\n    Parameters.baselineName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/rules/{ruleId}/baselines/{baselineName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.vulnerabilityAssessmentName,\n    Parameters.ruleId,\n    Parameters.baselineName\n  ],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/rules/{ruleId}/baselines/{baselineName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SqlPoolVulnerabilityAssessmentRuleBaseline\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.vulnerabilityAssessmentName,\n    Parameters.ruleId,\n    Parameters.baselineName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { ExtendedSqlPoolBlobAuditingPolicies } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  ExtendedSqlPoolBlobAuditingPolicy,\n  ExtendedSqlPoolBlobAuditingPoliciesListBySqlPoolNextOptionalParams,\n  ExtendedSqlPoolBlobAuditingPoliciesListBySqlPoolOptionalParams,\n  ExtendedSqlPoolBlobAuditingPoliciesGetOptionalParams,\n  ExtendedSqlPoolBlobAuditingPoliciesGetResponse,\n  ExtendedSqlPoolBlobAuditingPoliciesCreateOrUpdateOptionalParams,\n  ExtendedSqlPoolBlobAuditingPoliciesCreateOrUpdateResponse,\n  ExtendedSqlPoolBlobAuditingPoliciesListBySqlPoolResponse,\n  ExtendedSqlPoolBlobAuditingPoliciesListBySqlPoolNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ExtendedSqlPoolBlobAuditingPolicies operations. */\nexport class ExtendedSqlPoolBlobAuditingPoliciesImpl\n  implements ExtendedSqlPoolBlobAuditingPolicies {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class ExtendedSqlPoolBlobAuditingPolicies class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists extended auditing settings of a Sql pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  public listBySqlPool(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: ExtendedSqlPoolBlobAuditingPoliciesListBySqlPoolOptionalParams\n  ): PagedAsyncIterableIterator<ExtendedSqlPoolBlobAuditingPolicy> {\n    const iter = this.listBySqlPoolPagingAll(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listBySqlPoolPagingPage(\n          resourceGroupName,\n          workspaceName,\n          sqlPoolName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listBySqlPoolPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: ExtendedSqlPoolBlobAuditingPoliciesListBySqlPoolOptionalParams\n  ): AsyncIterableIterator<ExtendedSqlPoolBlobAuditingPolicy[]> {\n    let result = await this._listBySqlPool(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listBySqlPoolNext(\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listBySqlPoolPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: ExtendedSqlPoolBlobAuditingPoliciesListBySqlPoolOptionalParams\n  ): AsyncIterableIterator<ExtendedSqlPoolBlobAuditingPolicy> {\n    for await (const page of this.listBySqlPoolPagingPage(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets an extended Sql pool's blob auditing policy.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: ExtendedSqlPoolBlobAuditingPoliciesGetOptionalParams\n  ): Promise<ExtendedSqlPoolBlobAuditingPoliciesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates an extended Sql pool's blob auditing policy.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param parameters The extended Sql pool blob auditing policy.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    parameters: ExtendedSqlPoolBlobAuditingPolicy,\n    options?: ExtendedSqlPoolBlobAuditingPoliciesCreateOrUpdateOptionalParams\n  ): Promise<ExtendedSqlPoolBlobAuditingPoliciesCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Lists extended auditing settings of a Sql pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  private _listBySqlPool(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: ExtendedSqlPoolBlobAuditingPoliciesListBySqlPoolOptionalParams\n  ): Promise<ExtendedSqlPoolBlobAuditingPoliciesListBySqlPoolResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, options },\n      listBySqlPoolOperationSpec\n    );\n  }\n\n  /**\n   * ListBySqlPoolNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param nextLink The nextLink from the previous successful call to the ListBySqlPool method.\n   * @param options The options parameters.\n   */\n  private _listBySqlPoolNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    nextLink: string,\n    options?: ExtendedSqlPoolBlobAuditingPoliciesListBySqlPoolNextOptionalParams\n  ): Promise<ExtendedSqlPoolBlobAuditingPoliciesListBySqlPoolNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, nextLink, options },\n      listBySqlPoolNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/extendedAuditingSettings/{blobAuditingPolicyName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ExtendedSqlPoolBlobAuditingPolicy\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.blobAuditingPolicyName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/extendedAuditingSettings/{blobAuditingPolicyName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ExtendedSqlPoolBlobAuditingPolicy\n    },\n    201: {\n      bodyMapper: Mappers.ExtendedSqlPoolBlobAuditingPolicy\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters12,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.blobAuditingPolicyName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listBySqlPoolOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/extendedAuditingSettings\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ExtendedSqlPoolBlobAuditingPolicyListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySqlPoolNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ExtendedSqlPoolBlobAuditingPolicyListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { DataMaskingPolicies } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  DataMaskingPolicy,\n  DataMaskingPoliciesCreateOrUpdateOptionalParams,\n  DataMaskingPoliciesCreateOrUpdateResponse,\n  DataMaskingPoliciesGetOptionalParams,\n  DataMaskingPoliciesGetResponse\n} from \"../models\";\n\n/** Class containing DataMaskingPolicies operations. */\nexport class DataMaskingPoliciesImpl implements DataMaskingPolicies {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class DataMaskingPolicies class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Creates or updates a Sql pool data masking policy\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param parameters Parameters for creating or updating a data masking policy.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    parameters: DataMaskingPolicy,\n    options?: DataMaskingPoliciesCreateOrUpdateOptionalParams\n  ): Promise<DataMaskingPoliciesCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Gets a Sql pool data masking policy.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: DataMaskingPoliciesGetOptionalParams\n  ): Promise<DataMaskingPoliciesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, options },\n      getOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/dataMaskingPolicies/{dataMaskingPolicyName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataMaskingPolicy\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters13,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.dataMaskingPolicyName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/dataMaskingPolicies/{dataMaskingPolicyName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataMaskingPolicy\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.dataMaskingPolicyName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { DataMaskingRules } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  DataMaskingRule,\n  DataMaskingRulesListBySqlPoolOptionalParams,\n  DataMaskingRulesCreateOrUpdateOptionalParams,\n  DataMaskingRulesCreateOrUpdateResponse,\n  DataMaskingRulesGetOptionalParams,\n  DataMaskingRulesGetResponse,\n  DataMaskingRulesListBySqlPoolResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing DataMaskingRules operations. */\nexport class DataMaskingRulesImpl implements DataMaskingRules {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class DataMaskingRules class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of Sql pool data masking rules.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  public listBySqlPool(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: DataMaskingRulesListBySqlPoolOptionalParams\n  ): PagedAsyncIterableIterator<DataMaskingRule> {\n    const iter = this.listBySqlPoolPagingAll(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listBySqlPoolPagingPage(\n          resourceGroupName,\n          workspaceName,\n          sqlPoolName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listBySqlPoolPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: DataMaskingRulesListBySqlPoolOptionalParams\n  ): AsyncIterableIterator<DataMaskingRule[]> {\n    let result = await this._listBySqlPool(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    );\n    yield result.value || [];\n  }\n\n  private async *listBySqlPoolPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: DataMaskingRulesListBySqlPoolOptionalParams\n  ): AsyncIterableIterator<DataMaskingRule> {\n    for await (const page of this.listBySqlPoolPagingPage(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Creates or updates a Sql pool data masking rule.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param dataMaskingRuleName The name of the data masking rule.\n   * @param parameters The required parameters for creating or updating a data masking rule.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    dataMaskingRuleName: string,\n    parameters: DataMaskingRule,\n    options?: DataMaskingRulesCreateOrUpdateOptionalParams\n  ): Promise<DataMaskingRulesCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        dataMaskingRuleName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Gets the specific Sql pool data masking rule.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param dataMaskingRuleName The name of the data masking rule.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    dataMaskingRuleName: string,\n    options?: DataMaskingRulesGetOptionalParams\n  ): Promise<DataMaskingRulesGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        dataMaskingRuleName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Gets a list of Sql pool data masking rules.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  private _listBySqlPool(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: DataMaskingRulesListBySqlPoolOptionalParams\n  ): Promise<DataMaskingRulesListBySqlPoolResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, options },\n      listBySqlPoolOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/dataMaskingPolicies/{dataMaskingPolicyName}/rules/{dataMaskingRuleName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataMaskingRule\n    },\n    201: {\n      bodyMapper: Mappers.DataMaskingRule\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters14,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.dataMaskingPolicyName,\n    Parameters.dataMaskingRuleName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/dataMaskingPolicies/{dataMaskingPolicyName}/rules/{dataMaskingRuleName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataMaskingRule\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.dataMaskingPolicyName,\n    Parameters.dataMaskingRuleName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySqlPoolOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/dataMaskingPolicies/{dataMaskingPolicyName}/rules\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataMaskingRuleListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.dataMaskingPolicyName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { SqlPoolColumns } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  SqlPoolColumnsGetOptionalParams,\n  SqlPoolColumnsGetResponse\n} from \"../models\";\n\n/** Class containing SqlPoolColumns operations. */\nexport class SqlPoolColumnsImpl implements SqlPoolColumns {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class SqlPoolColumns class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get Sql pool column\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param schemaName The name of the schema.\n   * @param tableName The name of the table.\n   * @param columnName The name of the column.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    schemaName: string,\n    tableName: string,\n    columnName: string,\n    options?: SqlPoolColumnsGetOptionalParams\n  ): Promise<SqlPoolColumnsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        schemaName,\n        tableName,\n        columnName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SqlPoolColumn\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.schemaName,\n    Parameters.tableName,\n    Parameters.columnName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SqlPoolWorkloadGroup } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  WorkloadGroup,\n  SqlPoolWorkloadGroupListNextOptionalParams,\n  SqlPoolWorkloadGroupListOptionalParams,\n  SqlPoolWorkloadGroupGetOptionalParams,\n  SqlPoolWorkloadGroupGetResponse,\n  SqlPoolWorkloadGroupCreateOrUpdateOptionalParams,\n  SqlPoolWorkloadGroupCreateOrUpdateResponse,\n  SqlPoolWorkloadGroupDeleteOptionalParams,\n  SqlPoolWorkloadGroupListResponse,\n  SqlPoolWorkloadGroupListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing SqlPoolWorkloadGroup operations. */\nexport class SqlPoolWorkloadGroupImpl implements SqlPoolWorkloadGroup {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class SqlPoolWorkloadGroup class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get list of  Sql pool's workload groups.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolWorkloadGroupListOptionalParams\n  ): PagedAsyncIterableIterator<WorkloadGroup> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(\n          resourceGroupName,\n          workspaceName,\n          sqlPoolName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolWorkloadGroupListOptionalParams\n  ): AsyncIterableIterator<WorkloadGroup[]> {\n    let result = await this._list(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolWorkloadGroupListOptionalParams\n  ): AsyncIterableIterator<WorkloadGroup> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get a Sql pool's workload group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param workloadGroupName The name of the workload group.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    workloadGroupName: string,\n    options?: SqlPoolWorkloadGroupGetOptionalParams\n  ): Promise<SqlPoolWorkloadGroupGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        workloadGroupName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create Or Update a Sql pool's workload group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param workloadGroupName The name of the workload group.\n   * @param parameters The requested workload group state.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    workloadGroupName: string,\n    parameters: WorkloadGroup,\n    options?: SqlPoolWorkloadGroupCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<SqlPoolWorkloadGroupCreateOrUpdateResponse>,\n      SqlPoolWorkloadGroupCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<SqlPoolWorkloadGroupCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        workloadGroupName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Create Or Update a Sql pool's workload group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param workloadGroupName The name of the workload group.\n   * @param parameters The requested workload group state.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    workloadGroupName: string,\n    parameters: WorkloadGroup,\n    options?: SqlPoolWorkloadGroupCreateOrUpdateOptionalParams\n  ): Promise<SqlPoolWorkloadGroupCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      workloadGroupName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Remove Sql pool's workload group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param workloadGroupName The name of the workload group.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    workloadGroupName: string,\n    options?: SqlPoolWorkloadGroupDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        workloadGroupName,\n        options\n      },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Remove Sql pool's workload group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param workloadGroupName The name of the workload group.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    workloadGroupName: string,\n    options?: SqlPoolWorkloadGroupDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      workloadGroupName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Get list of  Sql pool's workload groups.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: SqlPoolWorkloadGroupListOptionalParams\n  ): Promise<SqlPoolWorkloadGroupListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    nextLink: string,\n    options?: SqlPoolWorkloadGroupListNextOptionalParams\n  ): Promise<SqlPoolWorkloadGroupListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/workloadGroups/{workloadGroupName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkloadGroup\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.workloadGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/workloadGroups/{workloadGroupName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkloadGroup\n    },\n    201: {\n      bodyMapper: Mappers.WorkloadGroup\n    },\n    202: {\n      bodyMapper: Mappers.WorkloadGroup\n    },\n    204: {\n      bodyMapper: Mappers.WorkloadGroup\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters15,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.workloadGroupName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/workloadGroups/{workloadGroupName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.workloadGroupName\n  ],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/workloadGroups\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkloadGroupListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkloadGroupListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SqlPoolWorkloadClassifier } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  WorkloadClassifier,\n  SqlPoolWorkloadClassifierListNextOptionalParams,\n  SqlPoolWorkloadClassifierListOptionalParams,\n  SqlPoolWorkloadClassifierGetOptionalParams,\n  SqlPoolWorkloadClassifierGetResponse,\n  SqlPoolWorkloadClassifierCreateOrUpdateOptionalParams,\n  SqlPoolWorkloadClassifierCreateOrUpdateResponse,\n  SqlPoolWorkloadClassifierDeleteOptionalParams,\n  SqlPoolWorkloadClassifierListResponse,\n  SqlPoolWorkloadClassifierListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing SqlPoolWorkloadClassifier operations. */\nexport class SqlPoolWorkloadClassifierImpl\n  implements SqlPoolWorkloadClassifier {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class SqlPoolWorkloadClassifier class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get list of  Sql pool's workload classifier for workload groups.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param workloadGroupName The name of the workload group.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    workloadGroupName: string,\n    options?: SqlPoolWorkloadClassifierListOptionalParams\n  ): PagedAsyncIterableIterator<WorkloadClassifier> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      workloadGroupName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(\n          resourceGroupName,\n          workspaceName,\n          sqlPoolName,\n          workloadGroupName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    workloadGroupName: string,\n    options?: SqlPoolWorkloadClassifierListOptionalParams\n  ): AsyncIterableIterator<WorkloadClassifier[]> {\n    let result = await this._list(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      workloadGroupName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        workloadGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    workloadGroupName: string,\n    options?: SqlPoolWorkloadClassifierListOptionalParams\n  ): AsyncIterableIterator<WorkloadClassifier> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      workloadGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get a workload classifier of Sql pool's workload group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param workloadGroupName The name of the workload group.\n   * @param workloadClassifierName The name of the workload classifier.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    workloadGroupName: string,\n    workloadClassifierName: string,\n    options?: SqlPoolWorkloadClassifierGetOptionalParams\n  ): Promise<SqlPoolWorkloadClassifierGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        workloadGroupName,\n        workloadClassifierName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create Or Update workload classifier for a Sql pool's workload group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param workloadGroupName The name of the workload group.\n   * @param workloadClassifierName The name of the workload classifier.\n   * @param parameters The properties of the workload classifier.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    workloadGroupName: string,\n    workloadClassifierName: string,\n    parameters: WorkloadClassifier,\n    options?: SqlPoolWorkloadClassifierCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<SqlPoolWorkloadClassifierCreateOrUpdateResponse>,\n      SqlPoolWorkloadClassifierCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<SqlPoolWorkloadClassifierCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        workloadGroupName,\n        workloadClassifierName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Create Or Update workload classifier for a Sql pool's workload group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param workloadGroupName The name of the workload group.\n   * @param workloadClassifierName The name of the workload classifier.\n   * @param parameters The properties of the workload classifier.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    workloadGroupName: string,\n    workloadClassifierName: string,\n    parameters: WorkloadClassifier,\n    options?: SqlPoolWorkloadClassifierCreateOrUpdateOptionalParams\n  ): Promise<SqlPoolWorkloadClassifierCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      workloadGroupName,\n      workloadClassifierName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Remove workload classifier of a Sql pool's workload group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param workloadGroupName The name of the workload group.\n   * @param workloadClassifierName The name of the workload classifier.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    workloadGroupName: string,\n    workloadClassifierName: string,\n    options?: SqlPoolWorkloadClassifierDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        workloadGroupName,\n        workloadClassifierName,\n        options\n      },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Remove workload classifier of a Sql pool's workload group.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param workloadGroupName The name of the workload group.\n   * @param workloadClassifierName The name of the workload classifier.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    workloadGroupName: string,\n    workloadClassifierName: string,\n    options?: SqlPoolWorkloadClassifierDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      workspaceName,\n      sqlPoolName,\n      workloadGroupName,\n      workloadClassifierName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Get list of  Sql pool's workload classifier for workload groups.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param workloadGroupName The name of the workload group.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    workloadGroupName: string,\n    options?: SqlPoolWorkloadClassifierListOptionalParams\n  ): Promise<SqlPoolWorkloadClassifierListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        workloadGroupName,\n        options\n      },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName SQL pool name\n   * @param workloadGroupName The name of the workload group.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    workloadGroupName: string,\n    nextLink: string,\n    options?: SqlPoolWorkloadClassifierListNextOptionalParams\n  ): Promise<SqlPoolWorkloadClassifierListNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        sqlPoolName,\n        workloadGroupName,\n        nextLink,\n        options\n      },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/workloadGroups/{workloadGroupName}/workloadClassifiers/{workloadClassifierName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkloadClassifier\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.workloadGroupName,\n    Parameters.workloadClassifierName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/workloadGroups/{workloadGroupName}/workloadClassifiers/{workloadClassifierName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkloadClassifier\n    },\n    201: {\n      bodyMapper: Mappers.WorkloadClassifier\n    },\n    202: {\n      bodyMapper: Mappers.WorkloadClassifier\n    },\n    204: {\n      bodyMapper: Mappers.WorkloadClassifier\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters16,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.workloadGroupName,\n    Parameters.workloadClassifierName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/workloadGroups/{workloadGroupName}/workloadClassifiers/{workloadClassifierName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.workloadGroupName,\n    Parameters.workloadClassifierName\n  ],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/workloadGroups/{workloadGroupName}/workloadClassifiers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkloadClassifierListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName,\n    Parameters.workloadGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkloadClassifierListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink,\n    Parameters.sqlPoolName,\n    Parameters.workloadGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { WorkspaceManagedSqlServerBlobAuditingPolicies } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  ServerBlobAuditingPolicy,\n  WorkspaceManagedSqlServerBlobAuditingPoliciesListByWorkspaceNextOptionalParams,\n  WorkspaceManagedSqlServerBlobAuditingPoliciesListByWorkspaceOptionalParams,\n  BlobAuditingPolicyName,\n  WorkspaceManagedSqlServerBlobAuditingPoliciesGetOptionalParams,\n  WorkspaceManagedSqlServerBlobAuditingPoliciesGetResponse,\n  WorkspaceManagedSqlServerBlobAuditingPoliciesCreateOrUpdateOptionalParams,\n  WorkspaceManagedSqlServerBlobAuditingPoliciesCreateOrUpdateResponse,\n  WorkspaceManagedSqlServerBlobAuditingPoliciesListByWorkspaceResponse,\n  WorkspaceManagedSqlServerBlobAuditingPoliciesListByWorkspaceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing WorkspaceManagedSqlServerBlobAuditingPolicies operations. */\nexport class WorkspaceManagedSqlServerBlobAuditingPoliciesImpl\n  implements WorkspaceManagedSqlServerBlobAuditingPolicies {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class WorkspaceManagedSqlServerBlobAuditingPolicies class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List workspace managed sql server's blob auditing policies.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  public listByWorkspace(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceManagedSqlServerBlobAuditingPoliciesListByWorkspaceOptionalParams\n  ): PagedAsyncIterableIterator<ServerBlobAuditingPolicy> {\n    const iter = this.listByWorkspacePagingAll(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByWorkspacePagingPage(\n          resourceGroupName,\n          workspaceName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listByWorkspacePagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceManagedSqlServerBlobAuditingPoliciesListByWorkspaceOptionalParams\n  ): AsyncIterableIterator<ServerBlobAuditingPolicy[]> {\n    let result = await this._listByWorkspace(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByWorkspaceNext(\n        resourceGroupName,\n        workspaceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByWorkspacePagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceManagedSqlServerBlobAuditingPoliciesListByWorkspaceOptionalParams\n  ): AsyncIterableIterator<ServerBlobAuditingPolicy> {\n    for await (const page of this.listByWorkspacePagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get a workspace managed sql server's blob auditing policy.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param blobAuditingPolicyName The name of the blob auditing policy.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    blobAuditingPolicyName: BlobAuditingPolicyName,\n    options?: WorkspaceManagedSqlServerBlobAuditingPoliciesGetOptionalParams\n  ): Promise<WorkspaceManagedSqlServerBlobAuditingPoliciesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, blobAuditingPolicyName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or Update a workspace managed sql server's blob auditing policy.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param blobAuditingPolicyName The name of the blob auditing policy.\n   * @param parameters Properties of extended blob auditing policy.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    blobAuditingPolicyName: BlobAuditingPolicyName,\n    parameters: ServerBlobAuditingPolicy,\n    options?: WorkspaceManagedSqlServerBlobAuditingPoliciesCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<\n        WorkspaceManagedSqlServerBlobAuditingPoliciesCreateOrUpdateResponse\n      >,\n      WorkspaceManagedSqlServerBlobAuditingPoliciesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<WorkspaceManagedSqlServerBlobAuditingPoliciesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        workspaceName,\n        blobAuditingPolicyName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Create or Update a workspace managed sql server's blob auditing policy.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param blobAuditingPolicyName The name of the blob auditing policy.\n   * @param parameters Properties of extended blob auditing policy.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    blobAuditingPolicyName: BlobAuditingPolicyName,\n    parameters: ServerBlobAuditingPolicy,\n    options?: WorkspaceManagedSqlServerBlobAuditingPoliciesCreateOrUpdateOptionalParams\n  ): Promise<\n    WorkspaceManagedSqlServerBlobAuditingPoliciesCreateOrUpdateResponse\n  > {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      workspaceName,\n      blobAuditingPolicyName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * List workspace managed sql server's blob auditing policies.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  private _listByWorkspace(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceManagedSqlServerBlobAuditingPoliciesListByWorkspaceOptionalParams\n  ): Promise<\n    WorkspaceManagedSqlServerBlobAuditingPoliciesListByWorkspaceResponse\n  > {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listByWorkspaceOperationSpec\n    );\n  }\n\n  /**\n   * ListByWorkspaceNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param nextLink The nextLink from the previous successful call to the ListByWorkspace method.\n   * @param options The options parameters.\n   */\n  private _listByWorkspaceNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    nextLink: string,\n    options?: WorkspaceManagedSqlServerBlobAuditingPoliciesListByWorkspaceNextOptionalParams\n  ): Promise<\n    WorkspaceManagedSqlServerBlobAuditingPoliciesListByWorkspaceNextResponse\n  > {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, nextLink, options },\n      listByWorkspaceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/auditingSettings/{blobAuditingPolicyName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerBlobAuditingPolicy\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.blobAuditingPolicyName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/auditingSettings/{blobAuditingPolicyName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerBlobAuditingPolicy\n    },\n    201: {\n      bodyMapper: Mappers.ServerBlobAuditingPolicy\n    },\n    202: {\n      bodyMapper: Mappers.ServerBlobAuditingPolicy\n    },\n    204: {\n      bodyMapper: Mappers.ServerBlobAuditingPolicy\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters17,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.blobAuditingPolicyName1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByWorkspaceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/auditingSettings\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerBlobAuditingPolicyListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByWorkspaceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerBlobAuditingPolicyListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { WorkspaceManagedSqlServerExtendedBlobAuditingPolicies } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  ExtendedServerBlobAuditingPolicy,\n  WorkspaceManagedSqlServerExtendedBlobAuditingPoliciesListByWorkspaceNextOptionalParams,\n  WorkspaceManagedSqlServerExtendedBlobAuditingPoliciesListByWorkspaceOptionalParams,\n  BlobAuditingPolicyName,\n  WorkspaceManagedSqlServerExtendedBlobAuditingPoliciesGetOptionalParams,\n  WorkspaceManagedSqlServerExtendedBlobAuditingPoliciesGetResponse,\n  WorkspaceManagedSqlServerExtendedBlobAuditingPoliciesCreateOrUpdateOptionalParams,\n  WorkspaceManagedSqlServerExtendedBlobAuditingPoliciesCreateOrUpdateResponse,\n  WorkspaceManagedSqlServerExtendedBlobAuditingPoliciesListByWorkspaceResponse,\n  WorkspaceManagedSqlServerExtendedBlobAuditingPoliciesListByWorkspaceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing WorkspaceManagedSqlServerExtendedBlobAuditingPolicies operations. */\nexport class WorkspaceManagedSqlServerExtendedBlobAuditingPoliciesImpl\n  implements WorkspaceManagedSqlServerExtendedBlobAuditingPolicies {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class WorkspaceManagedSqlServerExtendedBlobAuditingPolicies class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List workspace managed sql server's extended blob auditing policies.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  public listByWorkspace(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceManagedSqlServerExtendedBlobAuditingPoliciesListByWorkspaceOptionalParams\n  ): PagedAsyncIterableIterator<ExtendedServerBlobAuditingPolicy> {\n    const iter = this.listByWorkspacePagingAll(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByWorkspacePagingPage(\n          resourceGroupName,\n          workspaceName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listByWorkspacePagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceManagedSqlServerExtendedBlobAuditingPoliciesListByWorkspaceOptionalParams\n  ): AsyncIterableIterator<ExtendedServerBlobAuditingPolicy[]> {\n    let result = await this._listByWorkspace(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByWorkspaceNext(\n        resourceGroupName,\n        workspaceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByWorkspacePagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceManagedSqlServerExtendedBlobAuditingPoliciesListByWorkspaceOptionalParams\n  ): AsyncIterableIterator<ExtendedServerBlobAuditingPolicy> {\n    for await (const page of this.listByWorkspacePagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get a workspace SQL server's extended blob auditing policy.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param blobAuditingPolicyName The name of the blob auditing policy.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    blobAuditingPolicyName: BlobAuditingPolicyName,\n    options?: WorkspaceManagedSqlServerExtendedBlobAuditingPoliciesGetOptionalParams\n  ): Promise<WorkspaceManagedSqlServerExtendedBlobAuditingPoliciesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, blobAuditingPolicyName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or Update a workspace managed sql server's extended blob auditing policy.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param blobAuditingPolicyName The name of the blob auditing policy.\n   * @param parameters Properties of extended blob auditing policy.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    blobAuditingPolicyName: BlobAuditingPolicyName,\n    parameters: ExtendedServerBlobAuditingPolicy,\n    options?: WorkspaceManagedSqlServerExtendedBlobAuditingPoliciesCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<\n        WorkspaceManagedSqlServerExtendedBlobAuditingPoliciesCreateOrUpdateResponse\n      >,\n      WorkspaceManagedSqlServerExtendedBlobAuditingPoliciesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<WorkspaceManagedSqlServerExtendedBlobAuditingPoliciesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        workspaceName,\n        blobAuditingPolicyName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Create or Update a workspace managed sql server's extended blob auditing policy.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param blobAuditingPolicyName The name of the blob auditing policy.\n   * @param parameters Properties of extended blob auditing policy.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    blobAuditingPolicyName: BlobAuditingPolicyName,\n    parameters: ExtendedServerBlobAuditingPolicy,\n    options?: WorkspaceManagedSqlServerExtendedBlobAuditingPoliciesCreateOrUpdateOptionalParams\n  ): Promise<\n    WorkspaceManagedSqlServerExtendedBlobAuditingPoliciesCreateOrUpdateResponse\n  > {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      workspaceName,\n      blobAuditingPolicyName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * List workspace managed sql server's extended blob auditing policies.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  private _listByWorkspace(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceManagedSqlServerExtendedBlobAuditingPoliciesListByWorkspaceOptionalParams\n  ): Promise<\n    WorkspaceManagedSqlServerExtendedBlobAuditingPoliciesListByWorkspaceResponse\n  > {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listByWorkspaceOperationSpec\n    );\n  }\n\n  /**\n   * ListByWorkspaceNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param nextLink The nextLink from the previous successful call to the ListByWorkspace method.\n   * @param options The options parameters.\n   */\n  private _listByWorkspaceNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    nextLink: string,\n    options?: WorkspaceManagedSqlServerExtendedBlobAuditingPoliciesListByWorkspaceNextOptionalParams\n  ): Promise<\n    WorkspaceManagedSqlServerExtendedBlobAuditingPoliciesListByWorkspaceNextResponse\n  > {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, nextLink, options },\n      listByWorkspaceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/extendedAuditingSettings/{blobAuditingPolicyName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ExtendedServerBlobAuditingPolicy\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.blobAuditingPolicyName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/extendedAuditingSettings/{blobAuditingPolicyName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ExtendedServerBlobAuditingPolicy\n    },\n    201: {\n      bodyMapper: Mappers.ExtendedServerBlobAuditingPolicy\n    },\n    202: {\n      bodyMapper: Mappers.ExtendedServerBlobAuditingPolicy\n    },\n    204: {\n      bodyMapper: Mappers.ExtendedServerBlobAuditingPolicy\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters18,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.blobAuditingPolicyName1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByWorkspaceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/extendedAuditingSettings\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ExtendedServerBlobAuditingPolicyListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByWorkspaceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ExtendedServerBlobAuditingPolicyListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { WorkspaceManagedSqlServerSecurityAlertPolicy } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  ServerSecurityAlertPolicy,\n  WorkspaceManagedSqlServerSecurityAlertPolicyListNextOptionalParams,\n  WorkspaceManagedSqlServerSecurityAlertPolicyListOptionalParams,\n  SecurityAlertPolicyNameAutoGenerated,\n  WorkspaceManagedSqlServerSecurityAlertPolicyGetOptionalParams,\n  WorkspaceManagedSqlServerSecurityAlertPolicyGetResponse,\n  WorkspaceManagedSqlServerSecurityAlertPolicyCreateOrUpdateOptionalParams,\n  WorkspaceManagedSqlServerSecurityAlertPolicyCreateOrUpdateResponse,\n  WorkspaceManagedSqlServerSecurityAlertPolicyListResponse,\n  WorkspaceManagedSqlServerSecurityAlertPolicyListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing WorkspaceManagedSqlServerSecurityAlertPolicy operations. */\nexport class WorkspaceManagedSqlServerSecurityAlertPolicyImpl\n  implements WorkspaceManagedSqlServerSecurityAlertPolicy {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class WorkspaceManagedSqlServerSecurityAlertPolicy class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get workspace managed sql server's threat detection policies.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceManagedSqlServerSecurityAlertPolicyListOptionalParams\n  ): PagedAsyncIterableIterator<ServerSecurityAlertPolicy> {\n    const iter = this.listPagingAll(resourceGroupName, workspaceName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(resourceGroupName, workspaceName, options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceManagedSqlServerSecurityAlertPolicyListOptionalParams\n  ): AsyncIterableIterator<ServerSecurityAlertPolicy[]> {\n    let result = await this._list(resourceGroupName, workspaceName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceManagedSqlServerSecurityAlertPolicyListOptionalParams\n  ): AsyncIterableIterator<ServerSecurityAlertPolicy> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get a workspace managed sql server's security alert policy.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param securityAlertPolicyName The name of the security alert policy.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    securityAlertPolicyName: SecurityAlertPolicyNameAutoGenerated,\n    options?: WorkspaceManagedSqlServerSecurityAlertPolicyGetOptionalParams\n  ): Promise<WorkspaceManagedSqlServerSecurityAlertPolicyGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, securityAlertPolicyName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or Update a workspace managed sql server's threat detection policy.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param securityAlertPolicyName The name of the security alert policy.\n   * @param parameters The workspace managed sql server security alert policy.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    securityAlertPolicyName: SecurityAlertPolicyNameAutoGenerated,\n    parameters: ServerSecurityAlertPolicy,\n    options?: WorkspaceManagedSqlServerSecurityAlertPolicyCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<\n        WorkspaceManagedSqlServerSecurityAlertPolicyCreateOrUpdateResponse\n      >,\n      WorkspaceManagedSqlServerSecurityAlertPolicyCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<WorkspaceManagedSqlServerSecurityAlertPolicyCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        workspaceName,\n        securityAlertPolicyName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Create or Update a workspace managed sql server's threat detection policy.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param securityAlertPolicyName The name of the security alert policy.\n   * @param parameters The workspace managed sql server security alert policy.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    securityAlertPolicyName: SecurityAlertPolicyNameAutoGenerated,\n    parameters: ServerSecurityAlertPolicy,\n    options?: WorkspaceManagedSqlServerSecurityAlertPolicyCreateOrUpdateOptionalParams\n  ): Promise<\n    WorkspaceManagedSqlServerSecurityAlertPolicyCreateOrUpdateResponse\n  > {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      workspaceName,\n      securityAlertPolicyName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Get workspace managed sql server's threat detection policies.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceManagedSqlServerSecurityAlertPolicyListOptionalParams\n  ): Promise<WorkspaceManagedSqlServerSecurityAlertPolicyListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    nextLink: string,\n    options?: WorkspaceManagedSqlServerSecurityAlertPolicyListNextOptionalParams\n  ): Promise<WorkspaceManagedSqlServerSecurityAlertPolicyListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/securityAlertPolicies/{securityAlertPolicyName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerSecurityAlertPolicy\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.securityAlertPolicyName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/securityAlertPolicies/{securityAlertPolicyName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerSecurityAlertPolicy\n    },\n    201: {\n      bodyMapper: Mappers.ServerSecurityAlertPolicy\n    },\n    202: {\n      bodyMapper: Mappers.ServerSecurityAlertPolicy\n    },\n    204: {\n      bodyMapper: Mappers.ServerSecurityAlertPolicy\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters19,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.securityAlertPolicyName1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/securityAlertPolicies\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerSecurityAlertPolicyListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerSecurityAlertPolicyListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { WorkspaceManagedSqlServerVulnerabilityAssessments } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  ServerVulnerabilityAssessment,\n  WorkspaceManagedSqlServerVulnerabilityAssessmentsListNextOptionalParams,\n  WorkspaceManagedSqlServerVulnerabilityAssessmentsListOptionalParams,\n  VulnerabilityAssessmentName,\n  WorkspaceManagedSqlServerVulnerabilityAssessmentsGetOptionalParams,\n  WorkspaceManagedSqlServerVulnerabilityAssessmentsGetResponse,\n  WorkspaceManagedSqlServerVulnerabilityAssessmentsCreateOrUpdateOptionalParams,\n  WorkspaceManagedSqlServerVulnerabilityAssessmentsCreateOrUpdateResponse,\n  WorkspaceManagedSqlServerVulnerabilityAssessmentsDeleteOptionalParams,\n  WorkspaceManagedSqlServerVulnerabilityAssessmentsListResponse,\n  WorkspaceManagedSqlServerVulnerabilityAssessmentsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing WorkspaceManagedSqlServerVulnerabilityAssessments operations. */\nexport class WorkspaceManagedSqlServerVulnerabilityAssessmentsImpl\n  implements WorkspaceManagedSqlServerVulnerabilityAssessments {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class WorkspaceManagedSqlServerVulnerabilityAssessments class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists the vulnerability assessment policies associated with a workspace managed sql server.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceManagedSqlServerVulnerabilityAssessmentsListOptionalParams\n  ): PagedAsyncIterableIterator<ServerVulnerabilityAssessment> {\n    const iter = this.listPagingAll(resourceGroupName, workspaceName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(resourceGroupName, workspaceName, options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceManagedSqlServerVulnerabilityAssessmentsListOptionalParams\n  ): AsyncIterableIterator<ServerVulnerabilityAssessment[]> {\n    let result = await this._list(resourceGroupName, workspaceName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceManagedSqlServerVulnerabilityAssessmentsListOptionalParams\n  ): AsyncIterableIterator<ServerVulnerabilityAssessment> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get workspace managed sql server's vulnerability assessment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    options?: WorkspaceManagedSqlServerVulnerabilityAssessmentsGetOptionalParams\n  ): Promise<WorkspaceManagedSqlServerVulnerabilityAssessmentsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        vulnerabilityAssessmentName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or Update workspace managed sql server's vulnerability assessment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param parameters Properties for vulnerability assessment.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    parameters: ServerVulnerabilityAssessment,\n    options?: WorkspaceManagedSqlServerVulnerabilityAssessmentsCreateOrUpdateOptionalParams\n  ): Promise<\n    WorkspaceManagedSqlServerVulnerabilityAssessmentsCreateOrUpdateResponse\n  > {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        vulnerabilityAssessmentName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Remove workspace managed sql server's vulnerability assessment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    workspaceName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    options?: WorkspaceManagedSqlServerVulnerabilityAssessmentsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        vulnerabilityAssessmentName,\n        options\n      },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Lists the vulnerability assessment policies associated with a workspace managed sql server.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceManagedSqlServerVulnerabilityAssessmentsListOptionalParams\n  ): Promise<WorkspaceManagedSqlServerVulnerabilityAssessmentsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    nextLink: string,\n    options?: WorkspaceManagedSqlServerVulnerabilityAssessmentsListNextOptionalParams\n  ): Promise<\n    WorkspaceManagedSqlServerVulnerabilityAssessmentsListNextResponse\n  > {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerVulnerabilityAssessment\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.vulnerabilityAssessmentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerVulnerabilityAssessment\n    },\n    201: {\n      bodyMapper: Mappers.ServerVulnerabilityAssessment\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters20,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.vulnerabilityAssessmentName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.vulnerabilityAssessmentName\n  ],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/vulnerabilityAssessments\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerVulnerabilityAssessmentListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerVulnerabilityAssessmentListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { WorkspaceManagedSqlServerEncryptionProtector } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  EncryptionProtector,\n  WorkspaceManagedSqlServerEncryptionProtectorListNextOptionalParams,\n  WorkspaceManagedSqlServerEncryptionProtectorListOptionalParams,\n  EncryptionProtectorName,\n  WorkspaceManagedSqlServerEncryptionProtectorGetOptionalParams,\n  WorkspaceManagedSqlServerEncryptionProtectorGetResponse,\n  WorkspaceManagedSqlServerEncryptionProtectorCreateOrUpdateOptionalParams,\n  WorkspaceManagedSqlServerEncryptionProtectorCreateOrUpdateResponse,\n  WorkspaceManagedSqlServerEncryptionProtectorListResponse,\n  WorkspaceManagedSqlServerEncryptionProtectorRevalidateOptionalParams,\n  WorkspaceManagedSqlServerEncryptionProtectorListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing WorkspaceManagedSqlServerEncryptionProtector operations. */\nexport class WorkspaceManagedSqlServerEncryptionProtectorImpl\n  implements WorkspaceManagedSqlServerEncryptionProtector {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class WorkspaceManagedSqlServerEncryptionProtector class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get list of encryption protectors for workspace managed sql server.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceManagedSqlServerEncryptionProtectorListOptionalParams\n  ): PagedAsyncIterableIterator<EncryptionProtector> {\n    const iter = this.listPagingAll(resourceGroupName, workspaceName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(resourceGroupName, workspaceName, options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceManagedSqlServerEncryptionProtectorListOptionalParams\n  ): AsyncIterableIterator<EncryptionProtector[]> {\n    let result = await this._list(resourceGroupName, workspaceName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceManagedSqlServerEncryptionProtectorListOptionalParams\n  ): AsyncIterableIterator<EncryptionProtector> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get workspace managed sql server's encryption protector.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param encryptionProtectorName The name of the encryption protector.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    encryptionProtectorName: EncryptionProtectorName,\n    options?: WorkspaceManagedSqlServerEncryptionProtectorGetOptionalParams\n  ): Promise<WorkspaceManagedSqlServerEncryptionProtectorGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, encryptionProtectorName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Updates workspace managed sql server's encryption protector.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param encryptionProtectorName The name of the encryption protector.\n   * @param parameters The requested encryption protector resource state.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    encryptionProtectorName: EncryptionProtectorName,\n    parameters: EncryptionProtector,\n    options?: WorkspaceManagedSqlServerEncryptionProtectorCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<\n        WorkspaceManagedSqlServerEncryptionProtectorCreateOrUpdateResponse\n      >,\n      WorkspaceManagedSqlServerEncryptionProtectorCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<WorkspaceManagedSqlServerEncryptionProtectorCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        workspaceName,\n        encryptionProtectorName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Updates workspace managed sql server's encryption protector.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param encryptionProtectorName The name of the encryption protector.\n   * @param parameters The requested encryption protector resource state.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    encryptionProtectorName: EncryptionProtectorName,\n    parameters: EncryptionProtector,\n    options?: WorkspaceManagedSqlServerEncryptionProtectorCreateOrUpdateOptionalParams\n  ): Promise<\n    WorkspaceManagedSqlServerEncryptionProtectorCreateOrUpdateResponse\n  > {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      workspaceName,\n      encryptionProtectorName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Get list of encryption protectors for workspace managed sql server.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceManagedSqlServerEncryptionProtectorListOptionalParams\n  ): Promise<WorkspaceManagedSqlServerEncryptionProtectorListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Revalidates workspace managed sql server's existing encryption protector.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param encryptionProtectorName The name of the encryption protector.\n   * @param options The options parameters.\n   */\n  async beginRevalidate(\n    resourceGroupName: string,\n    workspaceName: string,\n    encryptionProtectorName: EncryptionProtectorName,\n    options?: WorkspaceManagedSqlServerEncryptionProtectorRevalidateOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, encryptionProtectorName, options },\n      revalidateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Revalidates workspace managed sql server's existing encryption protector.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param encryptionProtectorName The name of the encryption protector.\n   * @param options The options parameters.\n   */\n  async beginRevalidateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    encryptionProtectorName: EncryptionProtectorName,\n    options?: WorkspaceManagedSqlServerEncryptionProtectorRevalidateOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginRevalidate(\n      resourceGroupName,\n      workspaceName,\n      encryptionProtectorName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    nextLink: string,\n    options?: WorkspaceManagedSqlServerEncryptionProtectorListNextOptionalParams\n  ): Promise<WorkspaceManagedSqlServerEncryptionProtectorListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/encryptionProtector/{encryptionProtectorName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EncryptionProtector\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.encryptionProtectorName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/encryptionProtector/{encryptionProtectorName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EncryptionProtector\n    },\n    201: {\n      bodyMapper: Mappers.EncryptionProtector\n    },\n    202: {\n      bodyMapper: Mappers.EncryptionProtector\n    },\n    204: {\n      bodyMapper: Mappers.EncryptionProtector\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters21,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.encryptionProtectorName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/encryptionProtector\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EncryptionProtectorListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst revalidateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/encryptionProtector/{encryptionProtectorName}/revalidate\",\n  httpMethod: \"POST\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.encryptionProtectorName\n  ],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EncryptionProtectorListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { WorkspaceManagedSqlServerUsages } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  ServerUsage,\n  WorkspaceManagedSqlServerUsagesListNextOptionalParams,\n  WorkspaceManagedSqlServerUsagesListOptionalParams,\n  WorkspaceManagedSqlServerUsagesListResponse,\n  WorkspaceManagedSqlServerUsagesListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing WorkspaceManagedSqlServerUsages operations. */\nexport class WorkspaceManagedSqlServerUsagesImpl\n  implements WorkspaceManagedSqlServerUsages {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class WorkspaceManagedSqlServerUsages class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get list of server usages metric for workspace managed sql server.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceManagedSqlServerUsagesListOptionalParams\n  ): PagedAsyncIterableIterator<ServerUsage> {\n    const iter = this.listPagingAll(resourceGroupName, workspaceName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(resourceGroupName, workspaceName, options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceManagedSqlServerUsagesListOptionalParams\n  ): AsyncIterableIterator<ServerUsage[]> {\n    let result = await this._list(resourceGroupName, workspaceName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceManagedSqlServerUsagesListOptionalParams\n  ): AsyncIterableIterator<ServerUsage> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get list of server usages metric for workspace managed sql server.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceManagedSqlServerUsagesListOptionalParams\n  ): Promise<WorkspaceManagedSqlServerUsagesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    nextLink: string,\n    options?: WorkspaceManagedSqlServerUsagesListNextOptionalParams\n  ): Promise<WorkspaceManagedSqlServerUsagesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlUsages\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerUsageListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerUsageListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { WorkspaceManagedSqlServerRecoverableSqlPools } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  RecoverableSqlPool,\n  WorkspaceManagedSqlServerRecoverableSqlPoolsListNextOptionalParams,\n  WorkspaceManagedSqlServerRecoverableSqlPoolsListOptionalParams,\n  WorkspaceManagedSqlServerRecoverableSqlPoolsListResponse,\n  WorkspaceManagedSqlServerRecoverableSqlPoolsGetOptionalParams,\n  WorkspaceManagedSqlServerRecoverableSqlPoolsGetResponse,\n  WorkspaceManagedSqlServerRecoverableSqlPoolsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing WorkspaceManagedSqlServerRecoverableSqlPools operations. */\nexport class WorkspaceManagedSqlServerRecoverableSqlPoolsImpl\n  implements WorkspaceManagedSqlServerRecoverableSqlPools {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class WorkspaceManagedSqlServerRecoverableSqlPools class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get list of recoverable sql pools for workspace managed sql server.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceManagedSqlServerRecoverableSqlPoolsListOptionalParams\n  ): PagedAsyncIterableIterator<RecoverableSqlPool> {\n    const iter = this.listPagingAll(resourceGroupName, workspaceName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(resourceGroupName, workspaceName, options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceManagedSqlServerRecoverableSqlPoolsListOptionalParams\n  ): AsyncIterableIterator<RecoverableSqlPool[]> {\n    let result = await this._list(resourceGroupName, workspaceName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        workspaceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceManagedSqlServerRecoverableSqlPoolsListOptionalParams\n  ): AsyncIterableIterator<RecoverableSqlPool> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get list of recoverable sql pools for workspace managed sql server.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceManagedSqlServerRecoverableSqlPoolsListOptionalParams\n  ): Promise<WorkspaceManagedSqlServerRecoverableSqlPoolsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Get recoverable sql pools for workspace managed sql server.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param sqlPoolName The name of the sql pool\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    sqlPoolName: string,\n    options?: WorkspaceManagedSqlServerRecoverableSqlPoolsGetOptionalParams\n  ): Promise<WorkspaceManagedSqlServerRecoverableSqlPoolsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, sqlPoolName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    nextLink: string,\n    options?: WorkspaceManagedSqlServerRecoverableSqlPoolsListNextOptionalParams\n  ): Promise<WorkspaceManagedSqlServerRecoverableSqlPoolsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/recoverableSqlPools\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RecoverableSqlPoolListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/recoverableSqlPools/{sqlPoolName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RecoverableSqlPool\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sqlPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RecoverableSqlPoolListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { Workspaces } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  Workspace,\n  WorkspacesListByResourceGroupNextOptionalParams,\n  WorkspacesListByResourceGroupOptionalParams,\n  WorkspacesListNextOptionalParams,\n  WorkspacesListOptionalParams,\n  WorkspacesListByResourceGroupResponse,\n  WorkspacesGetOptionalParams,\n  WorkspacesGetResponse,\n  WorkspacePatchInfo,\n  WorkspacesUpdateOptionalParams,\n  WorkspacesUpdateResponse,\n  WorkspacesCreateOrUpdateOptionalParams,\n  WorkspacesCreateOrUpdateResponse,\n  WorkspacesDeleteOptionalParams,\n  WorkspacesDeleteResponse,\n  WorkspacesListResponse,\n  WorkspacesListByResourceGroupNextResponse,\n  WorkspacesListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Workspaces operations. */\nexport class WorkspacesImpl implements Workspaces {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class Workspaces class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Returns a list of workspaces in a resource group\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: WorkspacesListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<Workspace> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByResourceGroupPagingPage(resourceGroupName, options);\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: WorkspacesListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<Workspace[]> {\n    let result = await this._listByResourceGroup(resourceGroupName, options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: WorkspacesListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<Workspace> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Returns a list of workspaces in a subscription\n   * @param options The options parameters.\n   */\n  public list(\n    options?: WorkspacesListOptionalParams\n  ): PagedAsyncIterableIterator<Workspace> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: WorkspacesListOptionalParams\n  ): AsyncIterableIterator<Workspace[]> {\n    let result = await this._list(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    options?: WorkspacesListOptionalParams\n  ): AsyncIterableIterator<Workspace> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Returns a list of workspaces in a resource group\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: WorkspacesListByResourceGroupOptionalParams\n  ): Promise<WorkspacesListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Gets a workspace\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspacesGetOptionalParams\n  ): Promise<WorkspacesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Updates a workspace\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param workspacePatchInfo Workspace patch request properties\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    workspacePatchInfo: WorkspacePatchInfo,\n    options?: WorkspacesUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<WorkspacesUpdateResponse>,\n      WorkspacesUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<WorkspacesUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, workspacePatchInfo, options },\n      updateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"location\"\n    });\n  }\n\n  /**\n   * Updates a workspace\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param workspacePatchInfo Workspace patch request properties\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    workspacePatchInfo: WorkspacePatchInfo,\n    options?: WorkspacesUpdateOptionalParams\n  ): Promise<WorkspacesUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      workspaceName,\n      workspacePatchInfo,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Creates or updates a workspace\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param workspaceInfo Workspace create or update request properties\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    workspaceInfo: Workspace,\n    options?: WorkspacesCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<WorkspacesCreateOrUpdateResponse>,\n      WorkspacesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<WorkspacesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, workspaceInfo, options },\n      createOrUpdateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"location\"\n    });\n  }\n\n  /**\n   * Creates or updates a workspace\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param workspaceInfo Workspace create or update request properties\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    workspaceInfo: Workspace,\n    options?: WorkspacesCreateOrUpdateOptionalParams\n  ): Promise<WorkspacesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      workspaceName,\n      workspaceInfo,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes a workspace\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspacesDeleteOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<WorkspacesDeleteResponse>,\n      WorkspacesDeleteResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<WorkspacesDeleteResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, options },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"location\"\n    });\n  }\n\n  /**\n   * Deletes a workspace\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspacesDeleteOptionalParams\n  ): Promise<WorkspacesDeleteResponse> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Returns a list of workspaces in a subscription\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: WorkspacesListOptionalParams\n  ): Promise<WorkspacesListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: WorkspacesListByResourceGroupNextOptionalParams\n  ): Promise<WorkspacesListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: WorkspacesListNextOptionalParams\n  ): Promise<WorkspacesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkspaceInfoListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Workspace\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Workspace\n    },\n    201: {\n      bodyMapper: Mappers.Workspace\n    },\n    202: {\n      bodyMapper: Mappers.Workspace\n    },\n    204: {\n      bodyMapper: Mappers.Workspace\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.workspacePatchInfo,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Workspace\n    },\n    201: {\n      bodyMapper: Mappers.Workspace\n    },\n    202: {\n      bodyMapper: Mappers.Workspace\n    },\n    204: {\n      bodyMapper: Mappers.Workspace\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.workspaceInfo,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n      }\n    },\n    201: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n      }\n    },\n    202: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n      }\n    },\n    204: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n      }\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Synapse/workspaces\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkspaceInfoListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkspaceInfoListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkspaceInfoListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { WorkspaceAadAdmins } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  WorkspaceAadAdminsGetOptionalParams,\n  WorkspaceAadAdminsGetResponse,\n  WorkspaceAadAdminInfo,\n  WorkspaceAadAdminsCreateOrUpdateOptionalParams,\n  WorkspaceAadAdminsCreateOrUpdateResponse,\n  WorkspaceAadAdminsDeleteOptionalParams\n} from \"../models\";\n\n/** Class containing WorkspaceAadAdmins operations. */\nexport class WorkspaceAadAdminsImpl implements WorkspaceAadAdmins {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class WorkspaceAadAdmins class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a workspace active directory admin\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceAadAdminsGetOptionalParams\n  ): Promise<WorkspaceAadAdminsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a workspace active directory admin\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param aadAdminInfo Workspace active directory administrator properties\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    aadAdminInfo: WorkspaceAadAdminInfo,\n    options?: WorkspaceAadAdminsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<WorkspaceAadAdminsCreateOrUpdateResponse>,\n      WorkspaceAadAdminsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<WorkspaceAadAdminsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, aadAdminInfo, options },\n      createOrUpdateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"location\"\n    });\n  }\n\n  /**\n   * Creates or updates a workspace active directory admin\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param aadAdminInfo Workspace active directory administrator properties\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    aadAdminInfo: WorkspaceAadAdminInfo,\n    options?: WorkspaceAadAdminsCreateOrUpdateOptionalParams\n  ): Promise<WorkspaceAadAdminsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      workspaceName,\n      aadAdminInfo,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes a workspace active directory admin\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceAadAdminsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, options },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"location\"\n    });\n  }\n\n  /**\n   * Deletes a workspace active directory admin\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceAadAdminsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/administrators/activeDirectory\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkspaceAadAdminInfo\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/administrators/activeDirectory\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkspaceAadAdminInfo\n    },\n    201: {\n      bodyMapper: Mappers.WorkspaceAadAdminInfo\n    },\n    202: {\n      bodyMapper: Mappers.WorkspaceAadAdminInfo\n    },\n    204: {\n      bodyMapper: Mappers.WorkspaceAadAdminInfo\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.aadAdminInfo,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/administrators/activeDirectory\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { WorkspaceSqlAadAdmins } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  WorkspaceSqlAadAdminsGetOptionalParams,\n  WorkspaceSqlAadAdminsGetResponse,\n  WorkspaceAadAdminInfo,\n  WorkspaceSqlAadAdminsCreateOrUpdateOptionalParams,\n  WorkspaceSqlAadAdminsCreateOrUpdateResponse,\n  WorkspaceSqlAadAdminsDeleteOptionalParams\n} from \"../models\";\n\n/** Class containing WorkspaceSqlAadAdmins operations. */\nexport class WorkspaceSqlAadAdminsImpl implements WorkspaceSqlAadAdmins {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class WorkspaceSqlAadAdmins class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a workspace SQL active directory admin\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceSqlAadAdminsGetOptionalParams\n  ): Promise<WorkspaceSqlAadAdminsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a workspace SQL active directory admin\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param aadAdminInfo Workspace active directory administrator properties\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    aadAdminInfo: WorkspaceAadAdminInfo,\n    options?: WorkspaceSqlAadAdminsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<WorkspaceSqlAadAdminsCreateOrUpdateResponse>,\n      WorkspaceSqlAadAdminsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<WorkspaceSqlAadAdminsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, aadAdminInfo, options },\n      createOrUpdateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"location\"\n    });\n  }\n\n  /**\n   * Creates or updates a workspace SQL active directory admin\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param aadAdminInfo Workspace active directory administrator properties\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    aadAdminInfo: WorkspaceAadAdminInfo,\n    options?: WorkspaceSqlAadAdminsCreateOrUpdateOptionalParams\n  ): Promise<WorkspaceSqlAadAdminsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      workspaceName,\n      aadAdminInfo,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes a workspace SQL active directory admin\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceSqlAadAdminsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, options },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"location\"\n    });\n  }\n\n  /**\n   * Deletes a workspace SQL active directory admin\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceSqlAadAdminsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlAdministrators/activeDirectory\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkspaceAadAdminInfo\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlAdministrators/activeDirectory\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkspaceAadAdminInfo\n    },\n    201: {\n      bodyMapper: Mappers.WorkspaceAadAdminInfo\n    },\n    202: {\n      bodyMapper: Mappers.WorkspaceAadAdminInfo\n    },\n    204: {\n      bodyMapper: Mappers.WorkspaceAadAdminInfo\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.aadAdminInfo,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlAdministrators/activeDirectory\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { WorkspaceManagedIdentitySqlControlSettings } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  WorkspaceManagedIdentitySqlControlSettingsGetOptionalParams,\n  WorkspaceManagedIdentitySqlControlSettingsGetResponse,\n  ManagedIdentitySqlControlSettingsModel,\n  WorkspaceManagedIdentitySqlControlSettingsCreateOrUpdateOptionalParams,\n  WorkspaceManagedIdentitySqlControlSettingsCreateOrUpdateResponse\n} from \"../models\";\n\n/** Class containing WorkspaceManagedIdentitySqlControlSettings operations. */\nexport class WorkspaceManagedIdentitySqlControlSettingsImpl\n  implements WorkspaceManagedIdentitySqlControlSettings {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class WorkspaceManagedIdentitySqlControlSettings class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get Managed Identity Sql Control Settings\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: WorkspaceManagedIdentitySqlControlSettingsGetOptionalParams\n  ): Promise<WorkspaceManagedIdentitySqlControlSettingsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or update Managed Identity Sql Control Settings\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param managedIdentitySqlControlSettings Managed Identity Sql Control Settings\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    managedIdentitySqlControlSettings: ManagedIdentitySqlControlSettingsModel,\n    options?: WorkspaceManagedIdentitySqlControlSettingsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<\n        WorkspaceManagedIdentitySqlControlSettingsCreateOrUpdateResponse\n      >,\n      WorkspaceManagedIdentitySqlControlSettingsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<WorkspaceManagedIdentitySqlControlSettingsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        workspaceName,\n        managedIdentitySqlControlSettings,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n  }\n\n  /**\n   * Create or update Managed Identity Sql Control Settings\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param managedIdentitySqlControlSettings Managed Identity Sql Control Settings\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    managedIdentitySqlControlSettings: ManagedIdentitySqlControlSettingsModel,\n    options?: WorkspaceManagedIdentitySqlControlSettingsCreateOrUpdateOptionalParams\n  ): Promise<WorkspaceManagedIdentitySqlControlSettingsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      workspaceName,\n      managedIdentitySqlControlSettings,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/managedIdentitySqlControlSettings/default\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedIdentitySqlControlSettingsModel\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/managedIdentitySqlControlSettings/default\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedIdentitySqlControlSettingsModel\n    },\n    201: {\n      bodyMapper: Mappers.ManagedIdentitySqlControlSettingsModel\n    },\n    202: {\n      bodyMapper: Mappers.ManagedIdentitySqlControlSettingsModel\n    },\n    204: {\n      bodyMapper: Mappers.ManagedIdentitySqlControlSettingsModel\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.managedIdentitySqlControlSettings,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { RestorableDroppedSqlPools } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  RestorableDroppedSqlPool,\n  RestorableDroppedSqlPoolsListByWorkspaceOptionalParams,\n  RestorableDroppedSqlPoolsGetOptionalParams,\n  RestorableDroppedSqlPoolsGetResponse,\n  RestorableDroppedSqlPoolsListByWorkspaceResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing RestorableDroppedSqlPools operations. */\nexport class RestorableDroppedSqlPoolsImpl\n  implements RestorableDroppedSqlPools {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class RestorableDroppedSqlPools class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of deleted Sql pools that can be restored\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  public listByWorkspace(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: RestorableDroppedSqlPoolsListByWorkspaceOptionalParams\n  ): PagedAsyncIterableIterator<RestorableDroppedSqlPool> {\n    const iter = this.listByWorkspacePagingAll(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByWorkspacePagingPage(\n          resourceGroupName,\n          workspaceName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listByWorkspacePagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: RestorableDroppedSqlPoolsListByWorkspaceOptionalParams\n  ): AsyncIterableIterator<RestorableDroppedSqlPool[]> {\n    let result = await this._listByWorkspace(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    yield result.value || [];\n  }\n\n  private async *listByWorkspacePagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: RestorableDroppedSqlPoolsListByWorkspaceOptionalParams\n  ): AsyncIterableIterator<RestorableDroppedSqlPool> {\n    for await (const page of this.listByWorkspacePagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a deleted sql pool that can be restored\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param restorableDroppedSqlPoolId The id of the deleted Sql Pool in the form of\n   *                                   sqlPoolName,deletionTimeInFileTimeFormat\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    restorableDroppedSqlPoolId: string,\n    options?: RestorableDroppedSqlPoolsGetOptionalParams\n  ): Promise<RestorableDroppedSqlPoolsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, restorableDroppedSqlPoolId, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Gets a list of deleted Sql pools that can be restored\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  private _listByWorkspace(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: RestorableDroppedSqlPoolsListByWorkspaceOptionalParams\n  ): Promise<RestorableDroppedSqlPoolsListByWorkspaceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listByWorkspaceOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/restorableDroppedSqlPools/{restorableDroppedSqlPoolId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RestorableDroppedSqlPool\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.restorableDroppedSqlPoolId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByWorkspaceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/restorableDroppedSqlPools\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RestorableDroppedSqlPoolListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { BigDataPools } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  BigDataPoolResourceInfo,\n  BigDataPoolsListByWorkspaceNextOptionalParams,\n  BigDataPoolsListByWorkspaceOptionalParams,\n  BigDataPoolsGetOptionalParams,\n  BigDataPoolsGetResponse,\n  BigDataPoolPatchInfo,\n  BigDataPoolsUpdateOptionalParams,\n  BigDataPoolsUpdateResponse,\n  BigDataPoolsCreateOrUpdateOptionalParams,\n  BigDataPoolsCreateOrUpdateResponse,\n  BigDataPoolsDeleteOptionalParams,\n  BigDataPoolsDeleteResponse,\n  BigDataPoolsListByWorkspaceResponse,\n  BigDataPoolsListByWorkspaceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing BigDataPools operations. */\nexport class BigDataPoolsImpl implements BigDataPools {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class BigDataPools class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List Big Data pools in a workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  public listByWorkspace(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: BigDataPoolsListByWorkspaceOptionalParams\n  ): PagedAsyncIterableIterator<BigDataPoolResourceInfo> {\n    const iter = this.listByWorkspacePagingAll(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByWorkspacePagingPage(\n          resourceGroupName,\n          workspaceName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listByWorkspacePagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: BigDataPoolsListByWorkspaceOptionalParams\n  ): AsyncIterableIterator<BigDataPoolResourceInfo[]> {\n    let result = await this._listByWorkspace(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByWorkspaceNext(\n        resourceGroupName,\n        workspaceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByWorkspacePagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: BigDataPoolsListByWorkspaceOptionalParams\n  ): AsyncIterableIterator<BigDataPoolResourceInfo> {\n    for await (const page of this.listByWorkspacePagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get a Big Data pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param bigDataPoolName Big Data pool name\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    bigDataPoolName: string,\n    options?: BigDataPoolsGetOptionalParams\n  ): Promise<BigDataPoolsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, bigDataPoolName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Patch a Big Data pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param bigDataPoolName Big Data pool name\n   * @param bigDataPoolPatchInfo The updated Big Data pool properties\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    workspaceName: string,\n    bigDataPoolName: string,\n    bigDataPoolPatchInfo: BigDataPoolPatchInfo,\n    options?: BigDataPoolsUpdateOptionalParams\n  ): Promise<BigDataPoolsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        bigDataPoolName,\n        bigDataPoolPatchInfo,\n        options\n      },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * Create a new Big Data pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param bigDataPoolName Big Data pool name\n   * @param bigDataPoolInfo The Big Data pool to create.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    bigDataPoolName: string,\n    bigDataPoolInfo: BigDataPoolResourceInfo,\n    options?: BigDataPoolsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<BigDataPoolsCreateOrUpdateResponse>,\n      BigDataPoolsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<BigDataPoolsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        workspaceName,\n        bigDataPoolName,\n        bigDataPoolInfo,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n  }\n\n  /**\n   * Create a new Big Data pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param bigDataPoolName Big Data pool name\n   * @param bigDataPoolInfo The Big Data pool to create.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    bigDataPoolName: string,\n    bigDataPoolInfo: BigDataPoolResourceInfo,\n    options?: BigDataPoolsCreateOrUpdateOptionalParams\n  ): Promise<BigDataPoolsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      workspaceName,\n      bigDataPoolName,\n      bigDataPoolInfo,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Delete a Big Data pool from the workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param bigDataPoolName Big Data pool name\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    workspaceName: string,\n    bigDataPoolName: string,\n    options?: BigDataPoolsDeleteOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<BigDataPoolsDeleteResponse>,\n      BigDataPoolsDeleteResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<BigDataPoolsDeleteResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, bigDataPoolName, options },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n  }\n\n  /**\n   * Delete a Big Data pool from the workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param bigDataPoolName Big Data pool name\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    bigDataPoolName: string,\n    options?: BigDataPoolsDeleteOptionalParams\n  ): Promise<BigDataPoolsDeleteResponse> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      workspaceName,\n      bigDataPoolName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * List Big Data pools in a workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  private _listByWorkspace(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: BigDataPoolsListByWorkspaceOptionalParams\n  ): Promise<BigDataPoolsListByWorkspaceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listByWorkspaceOperationSpec\n    );\n  }\n\n  /**\n   * ListByWorkspaceNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param nextLink The nextLink from the previous successful call to the ListByWorkspace method.\n   * @param options The options parameters.\n   */\n  private _listByWorkspaceNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    nextLink: string,\n    options?: BigDataPoolsListByWorkspaceNextOptionalParams\n  ): Promise<BigDataPoolsListByWorkspaceNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, nextLink, options },\n      listByWorkspaceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/bigDataPools/{bigDataPoolName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BigDataPoolResourceInfo\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.bigDataPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/bigDataPools/{bigDataPoolName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BigDataPoolResourceInfo\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.bigDataPoolPatchInfo,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.bigDataPoolName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/bigDataPools/{bigDataPoolName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BigDataPoolResourceInfo\n    },\n    201: {\n      bodyMapper: Mappers.BigDataPoolResourceInfo\n    },\n    202: {\n      bodyMapper: Mappers.BigDataPoolResourceInfo\n    },\n    204: {\n      bodyMapper: Mappers.BigDataPoolResourceInfo\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.bigDataPoolInfo,\n  queryParameters: [Parameters.apiVersion1, Parameters.force],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.bigDataPoolName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/bigDataPools/{bigDataPoolName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n      }\n    },\n    201: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n      }\n    },\n    202: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n      }\n    },\n    204: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n      }\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.bigDataPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByWorkspaceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/bigDataPools\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BigDataPoolResourceInfoListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByWorkspaceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BigDataPoolResourceInfoListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Library } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport { LibraryGetOptionalParams, LibraryGetResponse } from \"../models\";\n\n/** Class containing Library operations. */\nexport class LibraryImpl implements Library {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class Library class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get library by name in a workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param libraryName Library name\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    libraryName: string,\n    workspaceName: string,\n    options?: LibraryGetOptionalParams\n  ): Promise<LibraryGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, libraryName, workspaceName, options },\n      getOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/libraries/{libraryName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LibraryResource\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.libraryName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { Libraries } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  LibraryResource,\n  LibrariesListByWorkspaceNextOptionalParams,\n  LibrariesListByWorkspaceOptionalParams,\n  LibrariesListByWorkspaceResponse,\n  LibrariesListByWorkspaceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Libraries operations. */\nexport class LibrariesImpl implements Libraries {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class Libraries class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List libraries in a workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  public listByWorkspace(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: LibrariesListByWorkspaceOptionalParams\n  ): PagedAsyncIterableIterator<LibraryResource> {\n    const iter = this.listByWorkspacePagingAll(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByWorkspacePagingPage(\n          resourceGroupName,\n          workspaceName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listByWorkspacePagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: LibrariesListByWorkspaceOptionalParams\n  ): AsyncIterableIterator<LibraryResource[]> {\n    let result = await this._listByWorkspace(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByWorkspaceNext(\n        resourceGroupName,\n        workspaceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByWorkspacePagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: LibrariesListByWorkspaceOptionalParams\n  ): AsyncIterableIterator<LibraryResource> {\n    for await (const page of this.listByWorkspacePagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List libraries in a workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  private _listByWorkspace(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: LibrariesListByWorkspaceOptionalParams\n  ): Promise<LibrariesListByWorkspaceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listByWorkspaceOperationSpec\n    );\n  }\n\n  /**\n   * ListByWorkspaceNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param nextLink The nextLink from the previous successful call to the ListByWorkspace method.\n   * @param options The options parameters.\n   */\n  private _listByWorkspaceNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    nextLink: string,\n    options?: LibrariesListByWorkspaceNextOptionalParams\n  ): Promise<LibrariesListByWorkspaceNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, nextLink, options },\n      listByWorkspaceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByWorkspaceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/libraries\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LibraryListResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByWorkspaceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LibraryListResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { IntegrationRuntimes } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  IntegrationRuntimeResource,\n  IntegrationRuntimesListByWorkspaceNextOptionalParams,\n  IntegrationRuntimesListByWorkspaceOptionalParams,\n  UpdateIntegrationRuntimeRequest,\n  IntegrationRuntimesUpdateOptionalParams,\n  IntegrationRuntimesUpdateResponse,\n  IntegrationRuntimesGetOptionalParams,\n  IntegrationRuntimesGetResponse,\n  IntegrationRuntimesCreateOptionalParams,\n  IntegrationRuntimesCreateResponse,\n  IntegrationRuntimesDeleteOptionalParams,\n  IntegrationRuntimesUpgradeOptionalParams,\n  IntegrationRuntimesListByWorkspaceResponse,\n  IntegrationRuntimesStartOptionalParams,\n  IntegrationRuntimesStartResponse,\n  IntegrationRuntimesStopOptionalParams,\n  IntegrationRuntimesListOutboundNetworkDependenciesEndpointsOptionalParams,\n  IntegrationRuntimesListOutboundNetworkDependenciesEndpointsResponse,\n  IntegrationRuntimesEnableInteractiveQueryOptionalParams,\n  IntegrationRuntimesDisableInteractiveQueryOptionalParams,\n  IntegrationRuntimesListByWorkspaceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing IntegrationRuntimes operations. */\nexport class IntegrationRuntimesImpl implements IntegrationRuntimes {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class IntegrationRuntimes class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List all integration runtimes\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  public listByWorkspace(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: IntegrationRuntimesListByWorkspaceOptionalParams\n  ): PagedAsyncIterableIterator<IntegrationRuntimeResource> {\n    const iter = this.listByWorkspacePagingAll(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByWorkspacePagingPage(\n          resourceGroupName,\n          workspaceName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listByWorkspacePagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: IntegrationRuntimesListByWorkspaceOptionalParams\n  ): AsyncIterableIterator<IntegrationRuntimeResource[]> {\n    let result = await this._listByWorkspace(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByWorkspaceNext(\n        resourceGroupName,\n        workspaceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByWorkspacePagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: IntegrationRuntimesListByWorkspaceOptionalParams\n  ): AsyncIterableIterator<IntegrationRuntimeResource> {\n    for await (const page of this.listByWorkspacePagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Update an integration runtime\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param integrationRuntimeName Integration runtime name\n   * @param updateIntegrationRuntimeRequest The parameters for updating an integration runtime.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    workspaceName: string,\n    integrationRuntimeName: string,\n    updateIntegrationRuntimeRequest: UpdateIntegrationRuntimeRequest,\n    options?: IntegrationRuntimesUpdateOptionalParams\n  ): Promise<IntegrationRuntimesUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        integrationRuntimeName,\n        updateIntegrationRuntimeRequest,\n        options\n      },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * Get an integration runtime\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param integrationRuntimeName Integration runtime name\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    integrationRuntimeName: string,\n    options?: IntegrationRuntimesGetOptionalParams\n  ): Promise<IntegrationRuntimesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, integrationRuntimeName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create an integration runtime\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param integrationRuntimeName Integration runtime name\n   * @param integrationRuntime Integration runtime resource definition.\n   * @param options The options parameters.\n   */\n  async beginCreate(\n    resourceGroupName: string,\n    workspaceName: string,\n    integrationRuntimeName: string,\n    integrationRuntime: IntegrationRuntimeResource,\n    options?: IntegrationRuntimesCreateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<IntegrationRuntimesCreateResponse>,\n      IntegrationRuntimesCreateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<IntegrationRuntimesCreateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        workspaceName,\n        integrationRuntimeName,\n        integrationRuntime,\n        options\n      },\n      createOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Create an integration runtime\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param integrationRuntimeName Integration runtime name\n   * @param integrationRuntime Integration runtime resource definition.\n   * @param options The options parameters.\n   */\n  async beginCreateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    integrationRuntimeName: string,\n    integrationRuntime: IntegrationRuntimeResource,\n    options?: IntegrationRuntimesCreateOptionalParams\n  ): Promise<IntegrationRuntimesCreateResponse> {\n    const poller = await this.beginCreate(\n      resourceGroupName,\n      workspaceName,\n      integrationRuntimeName,\n      integrationRuntime,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Delete an integration runtime\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param integrationRuntimeName Integration runtime name\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    workspaceName: string,\n    integrationRuntimeName: string,\n    options?: IntegrationRuntimesDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, integrationRuntimeName, options },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Delete an integration runtime\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param integrationRuntimeName Integration runtime name\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    integrationRuntimeName: string,\n    options?: IntegrationRuntimesDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      workspaceName,\n      integrationRuntimeName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Upgrade an integration runtime\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param integrationRuntimeName Integration runtime name\n   * @param options The options parameters.\n   */\n  upgrade(\n    resourceGroupName: string,\n    workspaceName: string,\n    integrationRuntimeName: string,\n    options?: IntegrationRuntimesUpgradeOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, integrationRuntimeName, options },\n      upgradeOperationSpec\n    );\n  }\n\n  /**\n   * List all integration runtimes\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  private _listByWorkspace(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: IntegrationRuntimesListByWorkspaceOptionalParams\n  ): Promise<IntegrationRuntimesListByWorkspaceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listByWorkspaceOperationSpec\n    );\n  }\n\n  /**\n   * Start an integration runtime\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param integrationRuntimeName Integration runtime name\n   * @param options The options parameters.\n   */\n  async beginStart(\n    resourceGroupName: string,\n    workspaceName: string,\n    integrationRuntimeName: string,\n    options?: IntegrationRuntimesStartOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<IntegrationRuntimesStartResponse>,\n      IntegrationRuntimesStartResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<IntegrationRuntimesStartResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, integrationRuntimeName, options },\n      startOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Start an integration runtime\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param integrationRuntimeName Integration runtime name\n   * @param options The options parameters.\n   */\n  async beginStartAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    integrationRuntimeName: string,\n    options?: IntegrationRuntimesStartOptionalParams\n  ): Promise<IntegrationRuntimesStartResponse> {\n    const poller = await this.beginStart(\n      resourceGroupName,\n      workspaceName,\n      integrationRuntimeName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Stop an integration runtime\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param integrationRuntimeName Integration runtime name\n   * @param options The options parameters.\n   */\n  async beginStop(\n    resourceGroupName: string,\n    workspaceName: string,\n    integrationRuntimeName: string,\n    options?: IntegrationRuntimesStopOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, integrationRuntimeName, options },\n      stopOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Stop an integration runtime\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param integrationRuntimeName Integration runtime name\n   * @param options The options parameters.\n   */\n  async beginStopAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    integrationRuntimeName: string,\n    options?: IntegrationRuntimesStopOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginStop(\n      resourceGroupName,\n      workspaceName,\n      integrationRuntimeName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets the list of outbound network dependencies for a given Azure-SSIS integration runtime.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param integrationRuntimeName Integration runtime name\n   * @param options The options parameters.\n   */\n  listOutboundNetworkDependenciesEndpoints(\n    resourceGroupName: string,\n    workspaceName: string,\n    integrationRuntimeName: string,\n    options?: IntegrationRuntimesListOutboundNetworkDependenciesEndpointsOptionalParams\n  ): Promise<\n    IntegrationRuntimesListOutboundNetworkDependenciesEndpointsResponse\n  > {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, integrationRuntimeName, options },\n      listOutboundNetworkDependenciesEndpointsOperationSpec\n    );\n  }\n\n  /**\n   * Enable interactive query in integration runtime\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param integrationRuntimeName Integration runtime name\n   * @param options The options parameters.\n   */\n  async beginEnableInteractiveQuery(\n    resourceGroupName: string,\n    workspaceName: string,\n    integrationRuntimeName: string,\n    options?: IntegrationRuntimesEnableInteractiveQueryOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, integrationRuntimeName, options },\n      enableInteractiveQueryOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Enable interactive query in integration runtime\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param integrationRuntimeName Integration runtime name\n   * @param options The options parameters.\n   */\n  async beginEnableInteractiveQueryAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    integrationRuntimeName: string,\n    options?: IntegrationRuntimesEnableInteractiveQueryOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginEnableInteractiveQuery(\n      resourceGroupName,\n      workspaceName,\n      integrationRuntimeName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Disable interactive query in integration runtime\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param integrationRuntimeName Integration runtime name\n   * @param options The options parameters.\n   */\n  async beginDisableInteractiveQuery(\n    resourceGroupName: string,\n    workspaceName: string,\n    integrationRuntimeName: string,\n    options?: IntegrationRuntimesDisableInteractiveQueryOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, integrationRuntimeName, options },\n      disableInteractiveQueryOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Disable interactive query in integration runtime\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param integrationRuntimeName Integration runtime name\n   * @param options The options parameters.\n   */\n  async beginDisableInteractiveQueryAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    integrationRuntimeName: string,\n    options?: IntegrationRuntimesDisableInteractiveQueryOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDisableInteractiveQuery(\n      resourceGroupName,\n      workspaceName,\n      integrationRuntimeName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByWorkspaceNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param nextLink The nextLink from the previous successful call to the ListByWorkspace method.\n   * @param options The options parameters.\n   */\n  private _listByWorkspaceNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    nextLink: string,\n    options?: IntegrationRuntimesListByWorkspaceNextOptionalParams\n  ): Promise<IntegrationRuntimesListByWorkspaceNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, nextLink, options },\n      listByWorkspaceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IntegrationRuntimeResource\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.updateIntegrationRuntimeRequest,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.integrationRuntimeName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IntegrationRuntimeResource\n    },\n    304: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.integrationRuntimeName\n  ],\n  headerParameters: [Parameters.accept, Parameters.ifNoneMatch],\n  serializer\n};\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IntegrationRuntimeResource\n    },\n    201: {\n      bodyMapper: Mappers.IntegrationRuntimeResource\n    },\n    202: {\n      bodyMapper: Mappers.IntegrationRuntimeResource\n    },\n    204: {\n      bodyMapper: Mappers.IntegrationRuntimeResource\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.integrationRuntime,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.integrationRuntimeName\n  ],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.contentType,\n    Parameters.ifMatch\n  ],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.integrationRuntimeName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst upgradeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}/upgrade\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.integrationRuntimeName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByWorkspaceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IntegrationRuntimeListResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst startOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}/start\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IntegrationRuntimeStatusResponse\n    },\n    201: {\n      bodyMapper: Mappers.IntegrationRuntimeStatusResponse\n    },\n    202: {\n      bodyMapper: Mappers.IntegrationRuntimeStatusResponse\n    },\n    204: {\n      bodyMapper: Mappers.IntegrationRuntimeStatusResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.integrationRuntimeName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst stopOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}/stop\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.integrationRuntimeName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOutboundNetworkDependenciesEndpointsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}/outboundNetworkDependenciesEndpoints\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.IntegrationRuntimeOutboundNetworkDependenciesEndpointsResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.integrationRuntimeName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst enableInteractiveQueryOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}/enableInteractiveQuery\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.integrationRuntimeName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst disableInteractiveQueryOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}/disableInteractiveQuery\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.integrationRuntimeName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByWorkspaceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IntegrationRuntimeListResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { IntegrationRuntimeNodeIpAddressOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  IntegrationRuntimeNodeIpAddressGetOptionalParams,\n  IntegrationRuntimeNodeIpAddressGetResponse\n} from \"../models\";\n\n/** Class containing IntegrationRuntimeNodeIpAddressOperations operations. */\nexport class IntegrationRuntimeNodeIpAddressOperationsImpl\n  implements IntegrationRuntimeNodeIpAddressOperations {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class IntegrationRuntimeNodeIpAddressOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get the IP address of an integration runtime node\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param integrationRuntimeName Integration runtime name\n   * @param nodeName Integration runtime node name\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    integrationRuntimeName: string,\n    nodeName: string,\n    options?: IntegrationRuntimeNodeIpAddressGetOptionalParams\n  ): Promise<IntegrationRuntimeNodeIpAddressGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        integrationRuntimeName,\n        nodeName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}/nodes/{nodeName}/ipAddress\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IntegrationRuntimeNodeIpAddress\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.integrationRuntimeName,\n    Parameters.nodeName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { IntegrationRuntimeObjectMetadata } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  IntegrationRuntimeObjectMetadataListOptionalParams,\n  IntegrationRuntimeObjectMetadataListResponse,\n  IntegrationRuntimeObjectMetadataRefreshOptionalParams,\n  IntegrationRuntimeObjectMetadataRefreshResponse\n} from \"../models\";\n\n/** Class containing IntegrationRuntimeObjectMetadata operations. */\nexport class IntegrationRuntimeObjectMetadataImpl\n  implements IntegrationRuntimeObjectMetadata {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class IntegrationRuntimeObjectMetadata class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get object metadata from an integration runtime\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param integrationRuntimeName Integration runtime name\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    workspaceName: string,\n    integrationRuntimeName: string,\n    options?: IntegrationRuntimeObjectMetadataListOptionalParams\n  ): Promise<IntegrationRuntimeObjectMetadataListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, integrationRuntimeName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Refresh the object metadata in an integration runtime\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param integrationRuntimeName Integration runtime name\n   * @param options The options parameters.\n   */\n  async beginRefresh(\n    resourceGroupName: string,\n    workspaceName: string,\n    integrationRuntimeName: string,\n    options?: IntegrationRuntimeObjectMetadataRefreshOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<IntegrationRuntimeObjectMetadataRefreshResponse>,\n      IntegrationRuntimeObjectMetadataRefreshResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<IntegrationRuntimeObjectMetadataRefreshResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, workspaceName, integrationRuntimeName, options },\n      refreshOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Refresh the object metadata in an integration runtime\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param integrationRuntimeName Integration runtime name\n   * @param options The options parameters.\n   */\n  async beginRefreshAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    integrationRuntimeName: string,\n    options?: IntegrationRuntimeObjectMetadataRefreshOptionalParams\n  ): Promise<IntegrationRuntimeObjectMetadataRefreshResponse> {\n    const poller = await this.beginRefresh(\n      resourceGroupName,\n      workspaceName,\n      integrationRuntimeName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}/getObjectMetadata\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SsisObjectMetadataListResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.getMetadataRequest,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.integrationRuntimeName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst refreshOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}/refreshObjectMetadata\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SsisObjectMetadataStatusResponse\n    },\n    201: {\n      bodyMapper: Mappers.SsisObjectMetadataStatusResponse\n    },\n    202: {\n      bodyMapper: Mappers.SsisObjectMetadataStatusResponse\n    },\n    204: {\n      bodyMapper: Mappers.SsisObjectMetadataStatusResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.integrationRuntimeName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { IntegrationRuntimeNodes } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  IntegrationRuntimeNodesGetOptionalParams,\n  IntegrationRuntimeNodesGetResponse,\n  UpdateIntegrationRuntimeNodeRequest,\n  IntegrationRuntimeNodesUpdateOptionalParams,\n  IntegrationRuntimeNodesUpdateResponse,\n  IntegrationRuntimeNodesDeleteOptionalParams\n} from \"../models\";\n\n/** Class containing IntegrationRuntimeNodes operations. */\nexport class IntegrationRuntimeNodesImpl implements IntegrationRuntimeNodes {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class IntegrationRuntimeNodes class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get an integration runtime node\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param integrationRuntimeName Integration runtime name\n   * @param nodeName Integration runtime node name\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    integrationRuntimeName: string,\n    nodeName: string,\n    options?: IntegrationRuntimeNodesGetOptionalParams\n  ): Promise<IntegrationRuntimeNodesGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        integrationRuntimeName,\n        nodeName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create an integration runtime node\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param integrationRuntimeName Integration runtime name\n   * @param nodeName Integration runtime node name\n   * @param updateIntegrationRuntimeNodeRequest The parameters for updating an integration runtime node.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    workspaceName: string,\n    integrationRuntimeName: string,\n    nodeName: string,\n    updateIntegrationRuntimeNodeRequest: UpdateIntegrationRuntimeNodeRequest,\n    options?: IntegrationRuntimeNodesUpdateOptionalParams\n  ): Promise<IntegrationRuntimeNodesUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        integrationRuntimeName,\n        nodeName,\n        updateIntegrationRuntimeNodeRequest,\n        options\n      },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * Delete an integration runtime node\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param integrationRuntimeName Integration runtime name\n   * @param nodeName Integration runtime node name\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    workspaceName: string,\n    integrationRuntimeName: string,\n    nodeName: string,\n    options?: IntegrationRuntimeNodesDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        integrationRuntimeName,\n        nodeName,\n        options\n      },\n      deleteOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}/nodes/{nodeName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SelfHostedIntegrationRuntimeNode\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.integrationRuntimeName,\n    Parameters.nodeName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}/nodes/{nodeName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SelfHostedIntegrationRuntimeNode\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.updateIntegrationRuntimeNodeRequest,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.integrationRuntimeName,\n    Parameters.nodeName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}/nodes/{nodeName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.integrationRuntimeName,\n    Parameters.nodeName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { IntegrationRuntimeCredentials } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport { IntegrationRuntimeCredentialsSyncOptionalParams } from \"../models\";\n\n/** Class containing IntegrationRuntimeCredentials operations. */\nexport class IntegrationRuntimeCredentialsImpl\n  implements IntegrationRuntimeCredentials {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class IntegrationRuntimeCredentials class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Force the integration runtime to synchronize credentials across integration runtime nodes, and this\n   * will override the credentials across all worker nodes with those available on the dispatcher node.\n   * If you already have the latest credential backup file, you should manually import it (preferred) on\n   * any self-hosted integration runtime node than using this API directly.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param integrationRuntimeName Integration runtime name\n   * @param options The options parameters.\n   */\n  sync(\n    resourceGroupName: string,\n    workspaceName: string,\n    integrationRuntimeName: string,\n    options?: IntegrationRuntimeCredentialsSyncOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, integrationRuntimeName, options },\n      syncOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst syncOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}/syncCredentials\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.integrationRuntimeName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { IntegrationRuntimeConnectionInfos } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  IntegrationRuntimeConnectionInfosGetOptionalParams,\n  IntegrationRuntimeConnectionInfosGetResponse\n} from \"../models\";\n\n/** Class containing IntegrationRuntimeConnectionInfos operations. */\nexport class IntegrationRuntimeConnectionInfosImpl\n  implements IntegrationRuntimeConnectionInfos {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class IntegrationRuntimeConnectionInfos class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get connection info for an integration runtime\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param integrationRuntimeName Integration runtime name\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    integrationRuntimeName: string,\n    options?: IntegrationRuntimeConnectionInfosGetOptionalParams\n  ): Promise<IntegrationRuntimeConnectionInfosGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, integrationRuntimeName, options },\n      getOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}/getConnectionInfo\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IntegrationRuntimeConnectionInfo\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.integrationRuntimeName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { IntegrationRuntimeAuthKeysOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  IntegrationRuntimeRegenerateKeyParameters,\n  IntegrationRuntimeAuthKeysRegenerateOptionalParams,\n  IntegrationRuntimeAuthKeysRegenerateResponse,\n  IntegrationRuntimeAuthKeysListOptionalParams,\n  IntegrationRuntimeAuthKeysListResponse\n} from \"../models\";\n\n/** Class containing IntegrationRuntimeAuthKeysOperations operations. */\nexport class IntegrationRuntimeAuthKeysOperationsImpl\n  implements IntegrationRuntimeAuthKeysOperations {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class IntegrationRuntimeAuthKeysOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Regenerate the authentication key for an integration runtime\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param integrationRuntimeName Integration runtime name\n   * @param regenerateKeyParameters The parameters for regenerating integration runtime authentication\n   *                                key.\n   * @param options The options parameters.\n   */\n  regenerate(\n    resourceGroupName: string,\n    workspaceName: string,\n    integrationRuntimeName: string,\n    regenerateKeyParameters: IntegrationRuntimeRegenerateKeyParameters,\n    options?: IntegrationRuntimeAuthKeysRegenerateOptionalParams\n  ): Promise<IntegrationRuntimeAuthKeysRegenerateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        integrationRuntimeName,\n        regenerateKeyParameters,\n        options\n      },\n      regenerateOperationSpec\n    );\n  }\n\n  /**\n   * List authentication keys in an integration runtime\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param integrationRuntimeName Integration runtime name\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    workspaceName: string,\n    integrationRuntimeName: string,\n    options?: IntegrationRuntimeAuthKeysListOptionalParams\n  ): Promise<IntegrationRuntimeAuthKeysListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, integrationRuntimeName, options },\n      listOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst regenerateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}/regenerateAuthKey\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IntegrationRuntimeAuthKeys\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.regenerateKeyParameters,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.integrationRuntimeName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}/listAuthKeys\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IntegrationRuntimeAuthKeys\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.integrationRuntimeName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { IntegrationRuntimeMonitoringDataOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  IntegrationRuntimeMonitoringDataListOptionalParams,\n  IntegrationRuntimeMonitoringDataListResponse\n} from \"../models\";\n\n/** Class containing IntegrationRuntimeMonitoringDataOperations operations. */\nexport class IntegrationRuntimeMonitoringDataOperationsImpl\n  implements IntegrationRuntimeMonitoringDataOperations {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class IntegrationRuntimeMonitoringDataOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get monitoring data for an integration runtime\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param integrationRuntimeName Integration runtime name\n   * @param options The options parameters.\n   */\n  list(\n    resourceGroupName: string,\n    workspaceName: string,\n    integrationRuntimeName: string,\n    options?: IntegrationRuntimeMonitoringDataListOptionalParams\n  ): Promise<IntegrationRuntimeMonitoringDataListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, integrationRuntimeName, options },\n      listOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}/monitoringData\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IntegrationRuntimeMonitoringData\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.integrationRuntimeName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { IntegrationRuntimeStatusOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  IntegrationRuntimeStatusGetOptionalParams,\n  IntegrationRuntimeStatusGetResponse\n} from \"../models\";\n\n/** Class containing IntegrationRuntimeStatusOperations operations. */\nexport class IntegrationRuntimeStatusOperationsImpl\n  implements IntegrationRuntimeStatusOperations {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class IntegrationRuntimeStatusOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get the integration runtime status\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param integrationRuntimeName Integration runtime name\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    integrationRuntimeName: string,\n    options?: IntegrationRuntimeStatusGetOptionalParams\n  ): Promise<IntegrationRuntimeStatusGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, integrationRuntimeName, options },\n      getOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/integrationRuntimes/{integrationRuntimeName}/getStatus\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.IntegrationRuntimeStatusResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.integrationRuntimeName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { SparkConfiguration } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  SparkConfigurationGetOptionalParams,\n  SparkConfigurationGetResponse\n} from \"../models\";\n\n/** Class containing SparkConfiguration operations. */\nexport class SparkConfigurationImpl implements SparkConfiguration {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class SparkConfiguration class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get SparkConfiguration by name in a workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param sparkConfigurationName SparkConfiguration name\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    sparkConfigurationName: string,\n    workspaceName: string,\n    options?: SparkConfigurationGetOptionalParams\n  ): Promise<SparkConfigurationGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, sparkConfigurationName, workspaceName, options },\n      getOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sparkconfigurations/{sparkConfigurationName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SparkConfigurationResource\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.sparkConfigurationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { SparkConfigurations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  SparkConfigurationResource,\n  SparkConfigurationsListByWorkspaceNextOptionalParams,\n  SparkConfigurationsListByWorkspaceOptionalParams,\n  SparkConfigurationsListByWorkspaceResponse,\n  SparkConfigurationsListByWorkspaceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing SparkConfigurations operations. */\nexport class SparkConfigurationsImpl implements SparkConfigurations {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class SparkConfigurations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List sparkConfigurations in a workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  public listByWorkspace(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: SparkConfigurationsListByWorkspaceOptionalParams\n  ): PagedAsyncIterableIterator<SparkConfigurationResource> {\n    const iter = this.listByWorkspacePagingAll(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByWorkspacePagingPage(\n          resourceGroupName,\n          workspaceName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listByWorkspacePagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: SparkConfigurationsListByWorkspaceOptionalParams\n  ): AsyncIterableIterator<SparkConfigurationResource[]> {\n    let result = await this._listByWorkspace(\n      resourceGroupName,\n      workspaceName,\n      options\n    );\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listByWorkspaceNext(\n        resourceGroupName,\n        workspaceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listByWorkspacePagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: SparkConfigurationsListByWorkspaceOptionalParams\n  ): AsyncIterableIterator<SparkConfigurationResource> {\n    for await (const page of this.listByWorkspacePagingPage(\n      resourceGroupName,\n      workspaceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List sparkConfigurations in a workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  private _listByWorkspace(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: SparkConfigurationsListByWorkspaceOptionalParams\n  ): Promise<SparkConfigurationsListByWorkspaceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listByWorkspaceOperationSpec\n    );\n  }\n\n  /**\n   * ListByWorkspaceNext\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param nextLink The nextLink from the previous successful call to the ListByWorkspace method.\n   * @param options The options parameters.\n   */\n  private _listByWorkspaceNext(\n    resourceGroupName: string,\n    workspaceName: string,\n    nextLink: string,\n    options?: SparkConfigurationsListByWorkspaceNextOptionalParams\n  ): Promise<SparkConfigurationsListByWorkspaceNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, nextLink, options },\n      listByWorkspaceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByWorkspaceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sparkconfigurations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SparkConfigurationListResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByWorkspaceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SparkConfigurationListResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { KustoOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  Operation,\n  KustoOperationsListNextOptionalParams,\n  KustoOperationsListOptionalParams,\n  KustoOperationsListResponse,\n  KustoOperationsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing KustoOperations operations. */\nexport class KustoOperationsImpl implements KustoOperations {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class KustoOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists available operations for the Kusto sub-resources inside Microsoft.Synapse provider.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: KustoOperationsListOptionalParams\n  ): PagedAsyncIterableIterator<Operation> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(options);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: KustoOperationsListOptionalParams\n  ): AsyncIterableIterator<Operation[]> {\n    let result = await this._list(options);\n    yield result.value || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.value || [];\n    }\n  }\n\n  private async *listPagingAll(\n    options?: KustoOperationsListOptionalParams\n  ): AsyncIterableIterator<Operation> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists available operations for the Kusto sub-resources inside Microsoft.Synapse provider.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: KustoOperationsListOptionalParams\n  ): Promise<KustoOperationsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: KustoOperationsListNextOptionalParams\n  ): Promise<KustoOperationsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Synapse/kustooperations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { KustoPools } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  SkuDescription,\n  KustoPoolsListSkusOptionalParams,\n  AzureResourceSku,\n  KustoPoolsListSkusByResourceOptionalParams,\n  LanguageExtension,\n  KustoPoolsListLanguageExtensionsOptionalParams,\n  FollowerDatabaseDefinition,\n  KustoPoolsListFollowerDatabasesOptionalParams,\n  KustoPoolsListSkusResponse,\n  KustoPoolCheckNameRequest,\n  KustoPoolsCheckNameAvailabilityOptionalParams,\n  KustoPoolsCheckNameAvailabilityResponse,\n  KustoPoolsListByWorkspaceOptionalParams,\n  KustoPoolsListByWorkspaceResponse,\n  KustoPoolsGetOptionalParams,\n  KustoPoolsGetResponse,\n  KustoPool,\n  KustoPoolsCreateOrUpdateOptionalParams,\n  KustoPoolsCreateOrUpdateResponse,\n  KustoPoolUpdate,\n  KustoPoolsUpdateOptionalParams,\n  KustoPoolsUpdateResponse,\n  KustoPoolsDeleteOptionalParams,\n  KustoPoolsStopOptionalParams,\n  KustoPoolsStartOptionalParams,\n  KustoPoolsListSkusByResourceResponse,\n  KustoPoolsListLanguageExtensionsResponse,\n  LanguageExtensionsList,\n  KustoPoolsAddLanguageExtensionsOptionalParams,\n  KustoPoolsRemoveLanguageExtensionsOptionalParams,\n  KustoPoolsListFollowerDatabasesResponse,\n  KustoPoolsDetachFollowerDatabasesOptionalParams\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing KustoPools operations. */\nexport class KustoPoolsImpl implements KustoPools {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class KustoPools class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists eligible SKUs for Kusto Pool resource.\n   * @param options The options parameters.\n   */\n  public listSkus(\n    options?: KustoPoolsListSkusOptionalParams\n  ): PagedAsyncIterableIterator<SkuDescription> {\n    const iter = this.listSkusPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listSkusPagingPage(options);\n      }\n    };\n  }\n\n  private async *listSkusPagingPage(\n    options?: KustoPoolsListSkusOptionalParams\n  ): AsyncIterableIterator<SkuDescription[]> {\n    let result = await this._listSkus(options);\n    yield result.value || [];\n  }\n\n  private async *listSkusPagingAll(\n    options?: KustoPoolsListSkusOptionalParams\n  ): AsyncIterableIterator<SkuDescription> {\n    for await (const page of this.listSkusPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Returns the SKUs available for the provided resource.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  public listSkusByResource(\n    workspaceName: string,\n    kustoPoolName: string,\n    resourceGroupName: string,\n    options?: KustoPoolsListSkusByResourceOptionalParams\n  ): PagedAsyncIterableIterator<AzureResourceSku> {\n    const iter = this.listSkusByResourcePagingAll(\n      workspaceName,\n      kustoPoolName,\n      resourceGroupName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listSkusByResourcePagingPage(\n          workspaceName,\n          kustoPoolName,\n          resourceGroupName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listSkusByResourcePagingPage(\n    workspaceName: string,\n    kustoPoolName: string,\n    resourceGroupName: string,\n    options?: KustoPoolsListSkusByResourceOptionalParams\n  ): AsyncIterableIterator<AzureResourceSku[]> {\n    let result = await this._listSkusByResource(\n      workspaceName,\n      kustoPoolName,\n      resourceGroupName,\n      options\n    );\n    yield result.value || [];\n  }\n\n  private async *listSkusByResourcePagingAll(\n    workspaceName: string,\n    kustoPoolName: string,\n    resourceGroupName: string,\n    options?: KustoPoolsListSkusByResourceOptionalParams\n  ): AsyncIterableIterator<AzureResourceSku> {\n    for await (const page of this.listSkusByResourcePagingPage(\n      workspaceName,\n      kustoPoolName,\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Returns a list of language extensions that can run within KQL queries.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  public listLanguageExtensions(\n    workspaceName: string,\n    kustoPoolName: string,\n    resourceGroupName: string,\n    options?: KustoPoolsListLanguageExtensionsOptionalParams\n  ): PagedAsyncIterableIterator<LanguageExtension> {\n    const iter = this.listLanguageExtensionsPagingAll(\n      workspaceName,\n      kustoPoolName,\n      resourceGroupName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listLanguageExtensionsPagingPage(\n          workspaceName,\n          kustoPoolName,\n          resourceGroupName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listLanguageExtensionsPagingPage(\n    workspaceName: string,\n    kustoPoolName: string,\n    resourceGroupName: string,\n    options?: KustoPoolsListLanguageExtensionsOptionalParams\n  ): AsyncIterableIterator<LanguageExtension[]> {\n    let result = await this._listLanguageExtensions(\n      workspaceName,\n      kustoPoolName,\n      resourceGroupName,\n      options\n    );\n    yield result.value || [];\n  }\n\n  private async *listLanguageExtensionsPagingAll(\n    workspaceName: string,\n    kustoPoolName: string,\n    resourceGroupName: string,\n    options?: KustoPoolsListLanguageExtensionsOptionalParams\n  ): AsyncIterableIterator<LanguageExtension> {\n    for await (const page of this.listLanguageExtensionsPagingPage(\n      workspaceName,\n      kustoPoolName,\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Returns a list of databases that are owned by this Kusto Pool and were followed by another Kusto\n   * Pool.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  public listFollowerDatabases(\n    workspaceName: string,\n    kustoPoolName: string,\n    resourceGroupName: string,\n    options?: KustoPoolsListFollowerDatabasesOptionalParams\n  ): PagedAsyncIterableIterator<FollowerDatabaseDefinition> {\n    const iter = this.listFollowerDatabasesPagingAll(\n      workspaceName,\n      kustoPoolName,\n      resourceGroupName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listFollowerDatabasesPagingPage(\n          workspaceName,\n          kustoPoolName,\n          resourceGroupName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listFollowerDatabasesPagingPage(\n    workspaceName: string,\n    kustoPoolName: string,\n    resourceGroupName: string,\n    options?: KustoPoolsListFollowerDatabasesOptionalParams\n  ): AsyncIterableIterator<FollowerDatabaseDefinition[]> {\n    let result = await this._listFollowerDatabases(\n      workspaceName,\n      kustoPoolName,\n      resourceGroupName,\n      options\n    );\n    yield result.value || [];\n  }\n\n  private async *listFollowerDatabasesPagingAll(\n    workspaceName: string,\n    kustoPoolName: string,\n    resourceGroupName: string,\n    options?: KustoPoolsListFollowerDatabasesOptionalParams\n  ): AsyncIterableIterator<FollowerDatabaseDefinition> {\n    for await (const page of this.listFollowerDatabasesPagingPage(\n      workspaceName,\n      kustoPoolName,\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists eligible SKUs for Kusto Pool resource.\n   * @param options The options parameters.\n   */\n  private _listSkus(\n    options?: KustoPoolsListSkusOptionalParams\n  ): Promise<KustoPoolsListSkusResponse> {\n    return this.client.sendOperationRequest({ options }, listSkusOperationSpec);\n  }\n\n  /**\n   * Checks that the kusto pool name is valid and is not already in use.\n   * @param location The name of Azure region.\n   * @param kustoPoolName The name of the cluster.\n   * @param options The options parameters.\n   */\n  checkNameAvailability(\n    location: string,\n    kustoPoolName: KustoPoolCheckNameRequest,\n    options?: KustoPoolsCheckNameAvailabilityOptionalParams\n  ): Promise<KustoPoolsCheckNameAvailabilityResponse> {\n    return this.client.sendOperationRequest(\n      { location, kustoPoolName, options },\n      checkNameAvailabilityOperationSpec\n    );\n  }\n\n  /**\n   * List all Kusto pools\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param options The options parameters.\n   */\n  listByWorkspace(\n    resourceGroupName: string,\n    workspaceName: string,\n    options?: KustoPoolsListByWorkspaceOptionalParams\n  ): Promise<KustoPoolsListByWorkspaceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, options },\n      listByWorkspaceOperationSpec\n    );\n  }\n\n  /**\n   * Gets a Kusto pool.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  get(\n    workspaceName: string,\n    kustoPoolName: string,\n    resourceGroupName: string,\n    options?: KustoPoolsGetOptionalParams\n  ): Promise<KustoPoolsGetResponse> {\n    return this.client.sendOperationRequest(\n      { workspaceName, kustoPoolName, resourceGroupName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or update a Kusto pool.\n   * @param workspaceName The name of the workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param parameters The Kusto pool parameters supplied to the CreateOrUpdate operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    workspaceName: string,\n    resourceGroupName: string,\n    kustoPoolName: string,\n    parameters: KustoPool,\n    options?: KustoPoolsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<KustoPoolsCreateOrUpdateResponse>,\n      KustoPoolsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<KustoPoolsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { workspaceName, resourceGroupName, kustoPoolName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Create or update a Kusto pool.\n   * @param workspaceName The name of the workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param parameters The Kusto pool parameters supplied to the CreateOrUpdate operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    workspaceName: string,\n    resourceGroupName: string,\n    kustoPoolName: string,\n    parameters: KustoPool,\n    options?: KustoPoolsCreateOrUpdateOptionalParams\n  ): Promise<KustoPoolsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      workspaceName,\n      resourceGroupName,\n      kustoPoolName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Update a Kusto Kusto Pool.\n   * @param workspaceName The name of the workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param parameters The Kusto pool parameters supplied to the Update operation.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    workspaceName: string,\n    resourceGroupName: string,\n    kustoPoolName: string,\n    parameters: KustoPoolUpdate,\n    options?: KustoPoolsUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<KustoPoolsUpdateResponse>,\n      KustoPoolsUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<KustoPoolsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { workspaceName, resourceGroupName, kustoPoolName, parameters, options },\n      updateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Update a Kusto Kusto Pool.\n   * @param workspaceName The name of the workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param parameters The Kusto pool parameters supplied to the Update operation.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    workspaceName: string,\n    resourceGroupName: string,\n    kustoPoolName: string,\n    parameters: KustoPoolUpdate,\n    options?: KustoPoolsUpdateOptionalParams\n  ): Promise<KustoPoolsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      workspaceName,\n      resourceGroupName,\n      kustoPoolName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes a Kusto pool.\n   * @param workspaceName The name of the workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    workspaceName: string,\n    resourceGroupName: string,\n    kustoPoolName: string,\n    options?: KustoPoolsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { workspaceName, resourceGroupName, kustoPoolName, options },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Deletes a Kusto pool.\n   * @param workspaceName The name of the workspace.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    workspaceName: string,\n    resourceGroupName: string,\n    kustoPoolName: string,\n    options?: KustoPoolsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      workspaceName,\n      resourceGroupName,\n      kustoPoolName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Stops a Kusto pool.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  async beginStop(\n    workspaceName: string,\n    kustoPoolName: string,\n    resourceGroupName: string,\n    options?: KustoPoolsStopOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { workspaceName, kustoPoolName, resourceGroupName, options },\n      stopOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Stops a Kusto pool.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  async beginStopAndWait(\n    workspaceName: string,\n    kustoPoolName: string,\n    resourceGroupName: string,\n    options?: KustoPoolsStopOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginStop(\n      workspaceName,\n      kustoPoolName,\n      resourceGroupName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Starts a Kusto pool.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  async beginStart(\n    workspaceName: string,\n    kustoPoolName: string,\n    resourceGroupName: string,\n    options?: KustoPoolsStartOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { workspaceName, kustoPoolName, resourceGroupName, options },\n      startOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Starts a Kusto pool.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  async beginStartAndWait(\n    workspaceName: string,\n    kustoPoolName: string,\n    resourceGroupName: string,\n    options?: KustoPoolsStartOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginStart(\n      workspaceName,\n      kustoPoolName,\n      resourceGroupName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Returns the SKUs available for the provided resource.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  private _listSkusByResource(\n    workspaceName: string,\n    kustoPoolName: string,\n    resourceGroupName: string,\n    options?: KustoPoolsListSkusByResourceOptionalParams\n  ): Promise<KustoPoolsListSkusByResourceResponse> {\n    return this.client.sendOperationRequest(\n      { workspaceName, kustoPoolName, resourceGroupName, options },\n      listSkusByResourceOperationSpec\n    );\n  }\n\n  /**\n   * Returns a list of language extensions that can run within KQL queries.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  private _listLanguageExtensions(\n    workspaceName: string,\n    kustoPoolName: string,\n    resourceGroupName: string,\n    options?: KustoPoolsListLanguageExtensionsOptionalParams\n  ): Promise<KustoPoolsListLanguageExtensionsResponse> {\n    return this.client.sendOperationRequest(\n      { workspaceName, kustoPoolName, resourceGroupName, options },\n      listLanguageExtensionsOperationSpec\n    );\n  }\n\n  /**\n   * Add a list of language extensions that can run within KQL queries.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param languageExtensionsToAdd The language extensions to add.\n   * @param options The options parameters.\n   */\n  async beginAddLanguageExtensions(\n    workspaceName: string,\n    kustoPoolName: string,\n    resourceGroupName: string,\n    languageExtensionsToAdd: LanguageExtensionsList,\n    options?: KustoPoolsAddLanguageExtensionsOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        workspaceName,\n        kustoPoolName,\n        resourceGroupName,\n        languageExtensionsToAdd,\n        options\n      },\n      addLanguageExtensionsOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Add a list of language extensions that can run within KQL queries.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param languageExtensionsToAdd The language extensions to add.\n   * @param options The options parameters.\n   */\n  async beginAddLanguageExtensionsAndWait(\n    workspaceName: string,\n    kustoPoolName: string,\n    resourceGroupName: string,\n    languageExtensionsToAdd: LanguageExtensionsList,\n    options?: KustoPoolsAddLanguageExtensionsOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginAddLanguageExtensions(\n      workspaceName,\n      kustoPoolName,\n      resourceGroupName,\n      languageExtensionsToAdd,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Remove a list of language extensions that can run within KQL queries.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param languageExtensionsToRemove The language extensions to remove.\n   * @param options The options parameters.\n   */\n  async beginRemoveLanguageExtensions(\n    workspaceName: string,\n    kustoPoolName: string,\n    resourceGroupName: string,\n    languageExtensionsToRemove: LanguageExtensionsList,\n    options?: KustoPoolsRemoveLanguageExtensionsOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        workspaceName,\n        kustoPoolName,\n        resourceGroupName,\n        languageExtensionsToRemove,\n        options\n      },\n      removeLanguageExtensionsOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Remove a list of language extensions that can run within KQL queries.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param languageExtensionsToRemove The language extensions to remove.\n   * @param options The options parameters.\n   */\n  async beginRemoveLanguageExtensionsAndWait(\n    workspaceName: string,\n    kustoPoolName: string,\n    resourceGroupName: string,\n    languageExtensionsToRemove: LanguageExtensionsList,\n    options?: KustoPoolsRemoveLanguageExtensionsOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginRemoveLanguageExtensions(\n      workspaceName,\n      kustoPoolName,\n      resourceGroupName,\n      languageExtensionsToRemove,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Returns a list of databases that are owned by this Kusto Pool and were followed by another Kusto\n   * Pool.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  private _listFollowerDatabases(\n    workspaceName: string,\n    kustoPoolName: string,\n    resourceGroupName: string,\n    options?: KustoPoolsListFollowerDatabasesOptionalParams\n  ): Promise<KustoPoolsListFollowerDatabasesResponse> {\n    return this.client.sendOperationRequest(\n      { workspaceName, kustoPoolName, resourceGroupName, options },\n      listFollowerDatabasesOperationSpec\n    );\n  }\n\n  /**\n   * Detaches all followers of a database owned by this Kusto Pool.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param followerDatabaseToRemove The follower databases properties to remove.\n   * @param options The options parameters.\n   */\n  async beginDetachFollowerDatabases(\n    workspaceName: string,\n    kustoPoolName: string,\n    resourceGroupName: string,\n    followerDatabaseToRemove: FollowerDatabaseDefinition,\n    options?: KustoPoolsDetachFollowerDatabasesOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        workspaceName,\n        kustoPoolName,\n        resourceGroupName,\n        followerDatabaseToRemove,\n        options\n      },\n      detachFollowerDatabasesOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Detaches all followers of a database owned by this Kusto Pool.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param followerDatabaseToRemove The follower databases properties to remove.\n   * @param options The options parameters.\n   */\n  async beginDetachFollowerDatabasesAndWait(\n    workspaceName: string,\n    kustoPoolName: string,\n    resourceGroupName: string,\n    followerDatabaseToRemove: FollowerDatabaseDefinition,\n    options?: KustoPoolsDetachFollowerDatabasesOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDetachFollowerDatabases(\n      workspaceName,\n      kustoPoolName,\n      resourceGroupName,\n      followerDatabaseToRemove,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listSkusOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Synapse/skus\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SkuDescriptionList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst checkNameAvailabilityOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Synapse/locations/{location}/kustoPoolCheckNameAvailability\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CheckNameResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.kustoPoolName,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByWorkspaceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KustoPoolListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KustoPool\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.kustoPoolName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KustoPool\n    },\n    201: {\n      bodyMapper: Mappers.KustoPool\n    },\n    202: {\n      bodyMapper: Mappers.KustoPool\n    },\n    204: {\n      bodyMapper: Mappers.KustoPool\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters22,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.kustoPoolName1\n  ],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.contentType,\n    Parameters.ifNoneMatch,\n    Parameters.ifMatch\n  ],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KustoPool\n    },\n    201: {\n      bodyMapper: Mappers.KustoPool\n    },\n    202: {\n      bodyMapper: Mappers.KustoPool\n    },\n    204: {\n      bodyMapper: Mappers.KustoPool\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters23,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.kustoPoolName1\n  ],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.contentType,\n    Parameters.ifMatch\n  ],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.kustoPoolName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst stopOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/stop\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.kustoPoolName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst startOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/start\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.kustoPoolName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listSkusByResourceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/skus\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListResourceSkusResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.kustoPoolName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listLanguageExtensionsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/listLanguageExtensions\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LanguageExtensionsList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.kustoPoolName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst addLanguageExtensionsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/addLanguageExtensions\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.languageExtensionsToAdd,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.kustoPoolName1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst removeLanguageExtensionsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/removeLanguageExtensions\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.languageExtensionsToRemove,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.kustoPoolName1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listFollowerDatabasesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/listFollowerDatabases\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FollowerDatabaseListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.kustoPoolName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst detachFollowerDatabasesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/detachFollowerDatabases\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.followerDatabaseToRemove,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.kustoPoolName1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { KustoPoolChildResource } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport {\n  DatabaseCheckNameRequest,\n  KustoPoolChildResourceCheckNameAvailabilityOptionalParams,\n  KustoPoolChildResourceCheckNameAvailabilityResponse\n} from \"../models\";\n\n/** Class containing KustoPoolChildResource operations. */\nexport class KustoPoolChildResourceImpl implements KustoPoolChildResource {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class KustoPoolChildResource class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Checks that the Kusto Pool child resource name is valid and is not already in use.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param resourceName The name of the Kusto Pool child resource.\n   * @param options The options parameters.\n   */\n  checkNameAvailability(\n    workspaceName: string,\n    kustoPoolName: string,\n    resourceGroupName: string,\n    resourceName: DatabaseCheckNameRequest,\n    options?: KustoPoolChildResourceCheckNameAvailabilityOptionalParams\n  ): Promise<KustoPoolChildResourceCheckNameAvailabilityResponse> {\n    return this.client.sendOperationRequest(\n      {\n        workspaceName,\n        kustoPoolName,\n        resourceGroupName,\n        resourceName,\n        options\n      },\n      checkNameAvailabilityOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst checkNameAvailabilityOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/checkNameAvailability\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CheckNameResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.resourceName,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.kustoPoolName1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { KustoPoolAttachedDatabaseConfigurations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  AttachedDatabaseConfiguration,\n  KustoPoolAttachedDatabaseConfigurationsListByKustoPoolOptionalParams,\n  KustoPoolAttachedDatabaseConfigurationsListByKustoPoolResponse,\n  KustoPoolAttachedDatabaseConfigurationsGetOptionalParams,\n  KustoPoolAttachedDatabaseConfigurationsGetResponse,\n  KustoPoolAttachedDatabaseConfigurationsCreateOrUpdateOptionalParams,\n  KustoPoolAttachedDatabaseConfigurationsCreateOrUpdateResponse,\n  KustoPoolAttachedDatabaseConfigurationsDeleteOptionalParams\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing KustoPoolAttachedDatabaseConfigurations operations. */\nexport class KustoPoolAttachedDatabaseConfigurationsImpl\n  implements KustoPoolAttachedDatabaseConfigurations {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class KustoPoolAttachedDatabaseConfigurations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Returns the list of attached database configurations of the given Kusto Pool.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  public listByKustoPool(\n    workspaceName: string,\n    kustoPoolName: string,\n    resourceGroupName: string,\n    options?: KustoPoolAttachedDatabaseConfigurationsListByKustoPoolOptionalParams\n  ): PagedAsyncIterableIterator<AttachedDatabaseConfiguration> {\n    const iter = this.listByKustoPoolPagingAll(\n      workspaceName,\n      kustoPoolName,\n      resourceGroupName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByKustoPoolPagingPage(\n          workspaceName,\n          kustoPoolName,\n          resourceGroupName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listByKustoPoolPagingPage(\n    workspaceName: string,\n    kustoPoolName: string,\n    resourceGroupName: string,\n    options?: KustoPoolAttachedDatabaseConfigurationsListByKustoPoolOptionalParams\n  ): AsyncIterableIterator<AttachedDatabaseConfiguration[]> {\n    let result = await this._listByKustoPool(\n      workspaceName,\n      kustoPoolName,\n      resourceGroupName,\n      options\n    );\n    yield result.value || [];\n  }\n\n  private async *listByKustoPoolPagingAll(\n    workspaceName: string,\n    kustoPoolName: string,\n    resourceGroupName: string,\n    options?: KustoPoolAttachedDatabaseConfigurationsListByKustoPoolOptionalParams\n  ): AsyncIterableIterator<AttachedDatabaseConfiguration> {\n    for await (const page of this.listByKustoPoolPagingPage(\n      workspaceName,\n      kustoPoolName,\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Returns the list of attached database configurations of the given Kusto Pool.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  private _listByKustoPool(\n    workspaceName: string,\n    kustoPoolName: string,\n    resourceGroupName: string,\n    options?: KustoPoolAttachedDatabaseConfigurationsListByKustoPoolOptionalParams\n  ): Promise<KustoPoolAttachedDatabaseConfigurationsListByKustoPoolResponse> {\n    return this.client.sendOperationRequest(\n      { workspaceName, kustoPoolName, resourceGroupName, options },\n      listByKustoPoolOperationSpec\n    );\n  }\n\n  /**\n   * Returns an attached database configuration.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param attachedDatabaseConfigurationName The name of the attached database configuration.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  get(\n    workspaceName: string,\n    kustoPoolName: string,\n    attachedDatabaseConfigurationName: string,\n    resourceGroupName: string,\n    options?: KustoPoolAttachedDatabaseConfigurationsGetOptionalParams\n  ): Promise<KustoPoolAttachedDatabaseConfigurationsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        workspaceName,\n        kustoPoolName,\n        attachedDatabaseConfigurationName,\n        resourceGroupName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates an attached database configuration.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param attachedDatabaseConfigurationName The name of the attached database configuration.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param parameters The database parameters supplied to the CreateOrUpdate operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    workspaceName: string,\n    kustoPoolName: string,\n    attachedDatabaseConfigurationName: string,\n    resourceGroupName: string,\n    parameters: AttachedDatabaseConfiguration,\n    options?: KustoPoolAttachedDatabaseConfigurationsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<\n        KustoPoolAttachedDatabaseConfigurationsCreateOrUpdateResponse\n      >,\n      KustoPoolAttachedDatabaseConfigurationsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<KustoPoolAttachedDatabaseConfigurationsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        workspaceName,\n        kustoPoolName,\n        attachedDatabaseConfigurationName,\n        resourceGroupName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Creates or updates an attached database configuration.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param attachedDatabaseConfigurationName The name of the attached database configuration.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param parameters The database parameters supplied to the CreateOrUpdate operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    workspaceName: string,\n    kustoPoolName: string,\n    attachedDatabaseConfigurationName: string,\n    resourceGroupName: string,\n    parameters: AttachedDatabaseConfiguration,\n    options?: KustoPoolAttachedDatabaseConfigurationsCreateOrUpdateOptionalParams\n  ): Promise<KustoPoolAttachedDatabaseConfigurationsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      workspaceName,\n      kustoPoolName,\n      attachedDatabaseConfigurationName,\n      resourceGroupName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes the attached database configuration with the given name.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param attachedDatabaseConfigurationName The name of the attached database configuration.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    workspaceName: string,\n    kustoPoolName: string,\n    attachedDatabaseConfigurationName: string,\n    resourceGroupName: string,\n    options?: KustoPoolAttachedDatabaseConfigurationsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        workspaceName,\n        kustoPoolName,\n        attachedDatabaseConfigurationName,\n        resourceGroupName,\n        options\n      },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Deletes the attached database configuration with the given name.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param attachedDatabaseConfigurationName The name of the attached database configuration.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    workspaceName: string,\n    kustoPoolName: string,\n    attachedDatabaseConfigurationName: string,\n    resourceGroupName: string,\n    options?: KustoPoolAttachedDatabaseConfigurationsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      workspaceName,\n      kustoPoolName,\n      attachedDatabaseConfigurationName,\n      resourceGroupName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByKustoPoolOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/attachedDatabaseConfigurations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AttachedDatabaseConfigurationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.kustoPoolName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/attachedDatabaseConfigurations/{attachedDatabaseConfigurationName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AttachedDatabaseConfiguration\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.kustoPoolName1,\n    Parameters.attachedDatabaseConfigurationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/attachedDatabaseConfigurations/{attachedDatabaseConfigurationName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AttachedDatabaseConfiguration\n    },\n    201: {\n      bodyMapper: Mappers.AttachedDatabaseConfiguration\n    },\n    202: {\n      bodyMapper: Mappers.AttachedDatabaseConfiguration\n    },\n    204: {\n      bodyMapper: Mappers.AttachedDatabaseConfiguration\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters24,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.kustoPoolName1,\n    Parameters.attachedDatabaseConfigurationName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/attachedDatabaseConfigurations/{attachedDatabaseConfigurationName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.kustoPoolName1,\n    Parameters.attachedDatabaseConfigurationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { KustoPoolDatabases } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  DatabaseUnion,\n  KustoPoolDatabasesListByKustoPoolOptionalParams,\n  KustoPoolDatabasesListByKustoPoolResponse,\n  KustoPoolDatabasesGetOptionalParams,\n  KustoPoolDatabasesGetResponse,\n  KustoPoolDatabasesCreateOrUpdateOptionalParams,\n  KustoPoolDatabasesCreateOrUpdateResponse,\n  KustoPoolDatabasesUpdateOptionalParams,\n  KustoPoolDatabasesUpdateResponse,\n  KustoPoolDatabasesDeleteOptionalParams\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing KustoPoolDatabases operations. */\nexport class KustoPoolDatabasesImpl implements KustoPoolDatabases {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class KustoPoolDatabases class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Returns the list of databases of the given Kusto pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param options The options parameters.\n   */\n  public listByKustoPool(\n    resourceGroupName: string,\n    workspaceName: string,\n    kustoPoolName: string,\n    options?: KustoPoolDatabasesListByKustoPoolOptionalParams\n  ): PagedAsyncIterableIterator<DatabaseUnion> {\n    const iter = this.listByKustoPoolPagingAll(\n      resourceGroupName,\n      workspaceName,\n      kustoPoolName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByKustoPoolPagingPage(\n          resourceGroupName,\n          workspaceName,\n          kustoPoolName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listByKustoPoolPagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    kustoPoolName: string,\n    options?: KustoPoolDatabasesListByKustoPoolOptionalParams\n  ): AsyncIterableIterator<DatabaseUnion[]> {\n    let result = await this._listByKustoPool(\n      resourceGroupName,\n      workspaceName,\n      kustoPoolName,\n      options\n    );\n    yield result.value || [];\n  }\n\n  private async *listByKustoPoolPagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    kustoPoolName: string,\n    options?: KustoPoolDatabasesListByKustoPoolOptionalParams\n  ): AsyncIterableIterator<DatabaseUnion> {\n    for await (const page of this.listByKustoPoolPagingPage(\n      resourceGroupName,\n      workspaceName,\n      kustoPoolName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Returns the list of databases of the given Kusto pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param options The options parameters.\n   */\n  private _listByKustoPool(\n    resourceGroupName: string,\n    workspaceName: string,\n    kustoPoolName: string,\n    options?: KustoPoolDatabasesListByKustoPoolOptionalParams\n  ): Promise<KustoPoolDatabasesListByKustoPoolResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, workspaceName, kustoPoolName, options },\n      listByKustoPoolOperationSpec\n    );\n  }\n\n  /**\n   * Returns a database.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param databaseName The name of the database in the Kusto pool.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    kustoPoolName: string,\n    databaseName: string,\n    options?: KustoPoolDatabasesGetOptionalParams\n  ): Promise<KustoPoolDatabasesGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        kustoPoolName,\n        databaseName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a database.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param databaseName The name of the database in the Kusto pool.\n   * @param parameters The database parameters supplied to the CreateOrUpdate operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    kustoPoolName: string,\n    databaseName: string,\n    parameters: DatabaseUnion,\n    options?: KustoPoolDatabasesCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<KustoPoolDatabasesCreateOrUpdateResponse>,\n      KustoPoolDatabasesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<KustoPoolDatabasesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        workspaceName,\n        kustoPoolName,\n        databaseName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Creates or updates a database.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param databaseName The name of the database in the Kusto pool.\n   * @param parameters The database parameters supplied to the CreateOrUpdate operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    kustoPoolName: string,\n    databaseName: string,\n    parameters: DatabaseUnion,\n    options?: KustoPoolDatabasesCreateOrUpdateOptionalParams\n  ): Promise<KustoPoolDatabasesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      workspaceName,\n      kustoPoolName,\n      databaseName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates a database.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param databaseName The name of the database in the Kusto pool.\n   * @param parameters The database parameters supplied to the Update operation.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    kustoPoolName: string,\n    databaseName: string,\n    parameters: DatabaseUnion,\n    options?: KustoPoolDatabasesUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<KustoPoolDatabasesUpdateResponse>,\n      KustoPoolDatabasesUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<KustoPoolDatabasesUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        workspaceName,\n        kustoPoolName,\n        databaseName,\n        parameters,\n        options\n      },\n      updateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Updates a database.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param databaseName The name of the database in the Kusto pool.\n   * @param parameters The database parameters supplied to the Update operation.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    kustoPoolName: string,\n    databaseName: string,\n    parameters: DatabaseUnion,\n    options?: KustoPoolDatabasesUpdateOptionalParams\n  ): Promise<KustoPoolDatabasesUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      workspaceName,\n      kustoPoolName,\n      databaseName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes the database with the given name.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param databaseName The name of the database in the Kusto pool.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    workspaceName: string,\n    kustoPoolName: string,\n    databaseName: string,\n    options?: KustoPoolDatabasesDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        workspaceName,\n        kustoPoolName,\n        databaseName,\n        options\n      },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Deletes the database with the given name.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param databaseName The name of the database in the Kusto pool.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    kustoPoolName: string,\n    databaseName: string,\n    options?: KustoPoolDatabasesDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      workspaceName,\n      kustoPoolName,\n      databaseName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByKustoPoolOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/databases\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.kustoPoolName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/databases/{databaseName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Database\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.kustoPoolName1,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/databases/{databaseName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Database\n    },\n    201: {\n      bodyMapper: Mappers.Database\n    },\n    202: {\n      bodyMapper: Mappers.Database\n    },\n    204: {\n      bodyMapper: Mappers.Database\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters25,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.kustoPoolName1,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/databases/{databaseName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Database\n    },\n    201: {\n      bodyMapper: Mappers.Database\n    },\n    202: {\n      bodyMapper: Mappers.Database\n    },\n    204: {\n      bodyMapper: Mappers.Database\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters25,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.kustoPoolName1,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/databases/{databaseName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.kustoPoolName1,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { KustoPoolDataConnections } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  DataConnectionUnion,\n  KustoPoolDataConnectionsListByDatabaseOptionalParams,\n  DataConnectionCheckNameRequest,\n  KustoPoolDataConnectionsCheckNameAvailabilityOptionalParams,\n  KustoPoolDataConnectionsCheckNameAvailabilityResponse,\n  DataConnectionValidation,\n  KustoPoolDataConnectionsDataConnectionValidationOptionalParams,\n  KustoPoolDataConnectionsDataConnectionValidationResponse,\n  KustoPoolDataConnectionsListByDatabaseResponse,\n  KustoPoolDataConnectionsGetOptionalParams,\n  KustoPoolDataConnectionsGetResponse,\n  KustoPoolDataConnectionsCreateOrUpdateOptionalParams,\n  KustoPoolDataConnectionsCreateOrUpdateResponse,\n  KustoPoolDataConnectionsUpdateOptionalParams,\n  KustoPoolDataConnectionsUpdateResponse,\n  KustoPoolDataConnectionsDeleteOptionalParams\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing KustoPoolDataConnections operations. */\nexport class KustoPoolDataConnectionsImpl implements KustoPoolDataConnections {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class KustoPoolDataConnections class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Returns the list of data connections of the given Kusto pool database.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param databaseName The name of the database in the Kusto pool.\n   * @param options The options parameters.\n   */\n  public listByDatabase(\n    resourceGroupName: string,\n    workspaceName: string,\n    kustoPoolName: string,\n    databaseName: string,\n    options?: KustoPoolDataConnectionsListByDatabaseOptionalParams\n  ): PagedAsyncIterableIterator<DataConnectionUnion> {\n    const iter = this.listByDatabasePagingAll(\n      resourceGroupName,\n      workspaceName,\n      kustoPoolName,\n      databaseName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listByDatabasePagingPage(\n          resourceGroupName,\n          workspaceName,\n          kustoPoolName,\n          databaseName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listByDatabasePagingPage(\n    resourceGroupName: string,\n    workspaceName: string,\n    kustoPoolName: string,\n    databaseName: string,\n    options?: KustoPoolDataConnectionsListByDatabaseOptionalParams\n  ): AsyncIterableIterator<DataConnectionUnion[]> {\n    let result = await this._listByDatabase(\n      resourceGroupName,\n      workspaceName,\n      kustoPoolName,\n      databaseName,\n      options\n    );\n    yield result.value || [];\n  }\n\n  private async *listByDatabasePagingAll(\n    resourceGroupName: string,\n    workspaceName: string,\n    kustoPoolName: string,\n    databaseName: string,\n    options?: KustoPoolDataConnectionsListByDatabaseOptionalParams\n  ): AsyncIterableIterator<DataConnectionUnion> {\n    for await (const page of this.listByDatabasePagingPage(\n      resourceGroupName,\n      workspaceName,\n      kustoPoolName,\n      databaseName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Checks that the data connection name is valid and is not already in use.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param databaseName The name of the database in the Kusto pool.\n   * @param dataConnectionName The name of the data connection.\n   * @param options The options parameters.\n   */\n  checkNameAvailability(\n    resourceGroupName: string,\n    workspaceName: string,\n    kustoPoolName: string,\n    databaseName: string,\n    dataConnectionName: DataConnectionCheckNameRequest,\n    options?: KustoPoolDataConnectionsCheckNameAvailabilityOptionalParams\n  ): Promise<KustoPoolDataConnectionsCheckNameAvailabilityResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        kustoPoolName,\n        databaseName,\n        dataConnectionName,\n        options\n      },\n      checkNameAvailabilityOperationSpec\n    );\n  }\n\n  /**\n   * Checks that the data connection parameters are valid.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param databaseName The name of the database in the Kusto pool.\n   * @param parameters The data connection parameters supplied to the CreateOrUpdate operation.\n   * @param options The options parameters.\n   */\n  async beginDataConnectionValidation(\n    resourceGroupName: string,\n    workspaceName: string,\n    kustoPoolName: string,\n    databaseName: string,\n    parameters: DataConnectionValidation,\n    options?: KustoPoolDataConnectionsDataConnectionValidationOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<\n        KustoPoolDataConnectionsDataConnectionValidationResponse\n      >,\n      KustoPoolDataConnectionsDataConnectionValidationResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<KustoPoolDataConnectionsDataConnectionValidationResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        workspaceName,\n        kustoPoolName,\n        databaseName,\n        parameters,\n        options\n      },\n      dataConnectionValidationOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"location\"\n    });\n  }\n\n  /**\n   * Checks that the data connection parameters are valid.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param databaseName The name of the database in the Kusto pool.\n   * @param parameters The data connection parameters supplied to the CreateOrUpdate operation.\n   * @param options The options parameters.\n   */\n  async beginDataConnectionValidationAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    kustoPoolName: string,\n    databaseName: string,\n    parameters: DataConnectionValidation,\n    options?: KustoPoolDataConnectionsDataConnectionValidationOptionalParams\n  ): Promise<KustoPoolDataConnectionsDataConnectionValidationResponse> {\n    const poller = await this.beginDataConnectionValidation(\n      resourceGroupName,\n      workspaceName,\n      kustoPoolName,\n      databaseName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Returns the list of data connections of the given Kusto pool database.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param databaseName The name of the database in the Kusto pool.\n   * @param options The options parameters.\n   */\n  private _listByDatabase(\n    resourceGroupName: string,\n    workspaceName: string,\n    kustoPoolName: string,\n    databaseName: string,\n    options?: KustoPoolDataConnectionsListByDatabaseOptionalParams\n  ): Promise<KustoPoolDataConnectionsListByDatabaseResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        kustoPoolName,\n        databaseName,\n        options\n      },\n      listByDatabaseOperationSpec\n    );\n  }\n\n  /**\n   * Returns a data connection.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param databaseName The name of the database in the Kusto pool.\n   * @param dataConnectionName The name of the data connection.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    workspaceName: string,\n    kustoPoolName: string,\n    databaseName: string,\n    dataConnectionName: string,\n    options?: KustoPoolDataConnectionsGetOptionalParams\n  ): Promise<KustoPoolDataConnectionsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        workspaceName,\n        kustoPoolName,\n        databaseName,\n        dataConnectionName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a data connection.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param databaseName The name of the database in the Kusto pool.\n   * @param dataConnectionName The name of the data connection.\n   * @param parameters The data connection parameters supplied to the CreateOrUpdate operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    kustoPoolName: string,\n    databaseName: string,\n    dataConnectionName: string,\n    parameters: DataConnectionUnion,\n    options?: KustoPoolDataConnectionsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<KustoPoolDataConnectionsCreateOrUpdateResponse>,\n      KustoPoolDataConnectionsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<KustoPoolDataConnectionsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        workspaceName,\n        kustoPoolName,\n        databaseName,\n        dataConnectionName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Creates or updates a data connection.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param databaseName The name of the database in the Kusto pool.\n   * @param dataConnectionName The name of the data connection.\n   * @param parameters The data connection parameters supplied to the CreateOrUpdate operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    kustoPoolName: string,\n    databaseName: string,\n    dataConnectionName: string,\n    parameters: DataConnectionUnion,\n    options?: KustoPoolDataConnectionsCreateOrUpdateOptionalParams\n  ): Promise<KustoPoolDataConnectionsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      workspaceName,\n      kustoPoolName,\n      databaseName,\n      dataConnectionName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates a data connection.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param databaseName The name of the database in the Kusto pool.\n   * @param dataConnectionName The name of the data connection.\n   * @param parameters The data connection parameters supplied to the Update operation.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    workspaceName: string,\n    kustoPoolName: string,\n    databaseName: string,\n    dataConnectionName: string,\n    parameters: DataConnectionUnion,\n    options?: KustoPoolDataConnectionsUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<KustoPoolDataConnectionsUpdateResponse>,\n      KustoPoolDataConnectionsUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<KustoPoolDataConnectionsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        workspaceName,\n        kustoPoolName,\n        databaseName,\n        dataConnectionName,\n        parameters,\n        options\n      },\n      updateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Updates a data connection.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param databaseName The name of the database in the Kusto pool.\n   * @param dataConnectionName The name of the data connection.\n   * @param parameters The data connection parameters supplied to the Update operation.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    kustoPoolName: string,\n    databaseName: string,\n    dataConnectionName: string,\n    parameters: DataConnectionUnion,\n    options?: KustoPoolDataConnectionsUpdateOptionalParams\n  ): Promise<KustoPoolDataConnectionsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      workspaceName,\n      kustoPoolName,\n      databaseName,\n      dataConnectionName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes the data connection with the given name.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param databaseName The name of the database in the Kusto pool.\n   * @param dataConnectionName The name of the data connection.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    workspaceName: string,\n    kustoPoolName: string,\n    databaseName: string,\n    dataConnectionName: string,\n    options?: KustoPoolDataConnectionsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        workspaceName,\n        kustoPoolName,\n        databaseName,\n        dataConnectionName,\n        options\n      },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Deletes the data connection with the given name.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param databaseName The name of the database in the Kusto pool.\n   * @param dataConnectionName The name of the data connection.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    workspaceName: string,\n    kustoPoolName: string,\n    databaseName: string,\n    dataConnectionName: string,\n    options?: KustoPoolDataConnectionsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      workspaceName,\n      kustoPoolName,\n      databaseName,\n      dataConnectionName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst checkNameAvailabilityOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/databases/{databaseName}/checkNameAvailability\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CheckNameResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.dataConnectionName,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.kustoPoolName1,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst dataConnectionValidationOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/databases/{databaseName}/dataConnectionValidation\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataConnectionValidationListResult\n    },\n    201: {\n      bodyMapper: Mappers.DataConnectionValidationListResult\n    },\n    202: {\n      bodyMapper: Mappers.DataConnectionValidationListResult\n    },\n    204: {\n      bodyMapper: Mappers.DataConnectionValidationListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters26,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.kustoPoolName1,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/databases/{databaseName}/dataConnections\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataConnectionListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.kustoPoolName1,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/databases/{databaseName}/dataConnections/{dataConnectionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataConnection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.kustoPoolName1,\n    Parameters.databaseName,\n    Parameters.dataConnectionName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/databases/{databaseName}/dataConnections/{dataConnectionName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataConnection\n    },\n    201: {\n      bodyMapper: Mappers.DataConnection\n    },\n    202: {\n      bodyMapper: Mappers.DataConnection\n    },\n    204: {\n      bodyMapper: Mappers.DataConnection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters27,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.kustoPoolName1,\n    Parameters.databaseName,\n    Parameters.dataConnectionName1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/databases/{databaseName}/dataConnections/{dataConnectionName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataConnection\n    },\n    201: {\n      bodyMapper: Mappers.DataConnection\n    },\n    202: {\n      bodyMapper: Mappers.DataConnection\n    },\n    204: {\n      bodyMapper: Mappers.DataConnection\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters27,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.kustoPoolName1,\n    Parameters.databaseName,\n    Parameters.dataConnectionName1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/databases/{databaseName}/dataConnections/{dataConnectionName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.kustoPoolName1,\n    Parameters.databaseName,\n    Parameters.dataConnectionName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { KustoPoolPrincipalAssignments } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  ClusterPrincipalAssignment,\n  KustoPoolPrincipalAssignmentsListOptionalParams,\n  ClusterPrincipalAssignmentCheckNameRequest,\n  KustoPoolPrincipalAssignmentsCheckNameAvailabilityOptionalParams,\n  KustoPoolPrincipalAssignmentsCheckNameAvailabilityResponse,\n  KustoPoolPrincipalAssignmentsListResponse,\n  KustoPoolPrincipalAssignmentsGetOptionalParams,\n  KustoPoolPrincipalAssignmentsGetResponse,\n  KustoPoolPrincipalAssignmentsCreateOrUpdateOptionalParams,\n  KustoPoolPrincipalAssignmentsCreateOrUpdateResponse,\n  KustoPoolPrincipalAssignmentsDeleteOptionalParams\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing KustoPoolPrincipalAssignments operations. */\nexport class KustoPoolPrincipalAssignmentsImpl\n  implements KustoPoolPrincipalAssignments {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class KustoPoolPrincipalAssignments class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all Kusto pool principalAssignments.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  public list(\n    workspaceName: string,\n    kustoPoolName: string,\n    resourceGroupName: string,\n    options?: KustoPoolPrincipalAssignmentsListOptionalParams\n  ): PagedAsyncIterableIterator<ClusterPrincipalAssignment> {\n    const iter = this.listPagingAll(\n      workspaceName,\n      kustoPoolName,\n      resourceGroupName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(\n          workspaceName,\n          kustoPoolName,\n          resourceGroupName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    workspaceName: string,\n    kustoPoolName: string,\n    resourceGroupName: string,\n    options?: KustoPoolPrincipalAssignmentsListOptionalParams\n  ): AsyncIterableIterator<ClusterPrincipalAssignment[]> {\n    let result = await this._list(\n      workspaceName,\n      kustoPoolName,\n      resourceGroupName,\n      options\n    );\n    yield result.value || [];\n  }\n\n  private async *listPagingAll(\n    workspaceName: string,\n    kustoPoolName: string,\n    resourceGroupName: string,\n    options?: KustoPoolPrincipalAssignmentsListOptionalParams\n  ): AsyncIterableIterator<ClusterPrincipalAssignment> {\n    for await (const page of this.listPagingPage(\n      workspaceName,\n      kustoPoolName,\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Checks that the principal assignment name is valid and is not already in use.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param principalAssignmentName The name of the principal assignment.\n   * @param options The options parameters.\n   */\n  checkNameAvailability(\n    workspaceName: string,\n    kustoPoolName: string,\n    resourceGroupName: string,\n    principalAssignmentName: ClusterPrincipalAssignmentCheckNameRequest,\n    options?: KustoPoolPrincipalAssignmentsCheckNameAvailabilityOptionalParams\n  ): Promise<KustoPoolPrincipalAssignmentsCheckNameAvailabilityResponse> {\n    return this.client.sendOperationRequest(\n      {\n        workspaceName,\n        kustoPoolName,\n        resourceGroupName,\n        principalAssignmentName,\n        options\n      },\n      checkNameAvailabilityOperationSpec\n    );\n  }\n\n  /**\n   * Lists all Kusto pool principalAssignments.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  private _list(\n    workspaceName: string,\n    kustoPoolName: string,\n    resourceGroupName: string,\n    options?: KustoPoolPrincipalAssignmentsListOptionalParams\n  ): Promise<KustoPoolPrincipalAssignmentsListResponse> {\n    return this.client.sendOperationRequest(\n      { workspaceName, kustoPoolName, resourceGroupName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Gets a Kusto pool principalAssignment.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param principalAssignmentName The name of the Kusto principalAssignment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  get(\n    workspaceName: string,\n    kustoPoolName: string,\n    principalAssignmentName: string,\n    resourceGroupName: string,\n    options?: KustoPoolPrincipalAssignmentsGetOptionalParams\n  ): Promise<KustoPoolPrincipalAssignmentsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        workspaceName,\n        kustoPoolName,\n        principalAssignmentName,\n        resourceGroupName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create a Kusto pool principalAssignment.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param principalAssignmentName The name of the Kusto principalAssignment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param parameters The Kusto pool principalAssignment's parameters supplied for the operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    workspaceName: string,\n    kustoPoolName: string,\n    principalAssignmentName: string,\n    resourceGroupName: string,\n    parameters: ClusterPrincipalAssignment,\n    options?: KustoPoolPrincipalAssignmentsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<KustoPoolPrincipalAssignmentsCreateOrUpdateResponse>,\n      KustoPoolPrincipalAssignmentsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<KustoPoolPrincipalAssignmentsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        workspaceName,\n        kustoPoolName,\n        principalAssignmentName,\n        resourceGroupName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Create a Kusto pool principalAssignment.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param principalAssignmentName The name of the Kusto principalAssignment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param parameters The Kusto pool principalAssignment's parameters supplied for the operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    workspaceName: string,\n    kustoPoolName: string,\n    principalAssignmentName: string,\n    resourceGroupName: string,\n    parameters: ClusterPrincipalAssignment,\n    options?: KustoPoolPrincipalAssignmentsCreateOrUpdateOptionalParams\n  ): Promise<KustoPoolPrincipalAssignmentsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      workspaceName,\n      kustoPoolName,\n      principalAssignmentName,\n      resourceGroupName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes a Kusto pool principalAssignment.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param principalAssignmentName The name of the Kusto principalAssignment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    workspaceName: string,\n    kustoPoolName: string,\n    principalAssignmentName: string,\n    resourceGroupName: string,\n    options?: KustoPoolPrincipalAssignmentsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        workspaceName,\n        kustoPoolName,\n        principalAssignmentName,\n        resourceGroupName,\n        options\n      },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Deletes a Kusto pool principalAssignment.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param principalAssignmentName The name of the Kusto principalAssignment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    workspaceName: string,\n    kustoPoolName: string,\n    principalAssignmentName: string,\n    resourceGroupName: string,\n    options?: KustoPoolPrincipalAssignmentsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      workspaceName,\n      kustoPoolName,\n      principalAssignmentName,\n      resourceGroupName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst checkNameAvailabilityOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/checkPrincipalAssignmentNameAvailability\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CheckNameResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.principalAssignmentName,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.kustoPoolName1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/principalAssignments\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ClusterPrincipalAssignmentListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.kustoPoolName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/principalAssignments/{principalAssignmentName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ClusterPrincipalAssignment\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.kustoPoolName1,\n    Parameters.principalAssignmentName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/principalAssignments/{principalAssignmentName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ClusterPrincipalAssignment\n    },\n    201: {\n      bodyMapper: Mappers.ClusterPrincipalAssignment\n    },\n    202: {\n      bodyMapper: Mappers.ClusterPrincipalAssignment\n    },\n    204: {\n      bodyMapper: Mappers.ClusterPrincipalAssignment\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters28,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.kustoPoolName1,\n    Parameters.principalAssignmentName1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/principalAssignments/{principalAssignmentName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.kustoPoolName1,\n    Parameters.principalAssignmentName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { KustoPoolDatabasePrincipalAssignments } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SynapseManagementClient } from \"../synapseManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  DatabasePrincipalAssignment,\n  KustoPoolDatabasePrincipalAssignmentsListOptionalParams,\n  DatabasePrincipalAssignmentCheckNameRequest,\n  KustoPoolDatabasePrincipalAssignmentsCheckNameAvailabilityOptionalParams,\n  KustoPoolDatabasePrincipalAssignmentsCheckNameAvailabilityResponse,\n  KustoPoolDatabasePrincipalAssignmentsListResponse,\n  KustoPoolDatabasePrincipalAssignmentsGetOptionalParams,\n  KustoPoolDatabasePrincipalAssignmentsGetResponse,\n  KustoPoolDatabasePrincipalAssignmentsCreateOrUpdateOptionalParams,\n  KustoPoolDatabasePrincipalAssignmentsCreateOrUpdateResponse,\n  KustoPoolDatabasePrincipalAssignmentsDeleteOptionalParams\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing KustoPoolDatabasePrincipalAssignments operations. */\nexport class KustoPoolDatabasePrincipalAssignmentsImpl\n  implements KustoPoolDatabasePrincipalAssignments {\n  private readonly client: SynapseManagementClient;\n\n  /**\n   * Initialize a new instance of the class KustoPoolDatabasePrincipalAssignments class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SynapseManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all Kusto pool database principalAssignments.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param databaseName The name of the database in the Kusto pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  public list(\n    workspaceName: string,\n    kustoPoolName: string,\n    databaseName: string,\n    resourceGroupName: string,\n    options?: KustoPoolDatabasePrincipalAssignmentsListOptionalParams\n  ): PagedAsyncIterableIterator<DatabasePrincipalAssignment> {\n    const iter = this.listPagingAll(\n      workspaceName,\n      kustoPoolName,\n      databaseName,\n      resourceGroupName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listPagingPage(\n          workspaceName,\n          kustoPoolName,\n          databaseName,\n          resourceGroupName,\n          options\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    workspaceName: string,\n    kustoPoolName: string,\n    databaseName: string,\n    resourceGroupName: string,\n    options?: KustoPoolDatabasePrincipalAssignmentsListOptionalParams\n  ): AsyncIterableIterator<DatabasePrincipalAssignment[]> {\n    let result = await this._list(\n      workspaceName,\n      kustoPoolName,\n      databaseName,\n      resourceGroupName,\n      options\n    );\n    yield result.value || [];\n  }\n\n  private async *listPagingAll(\n    workspaceName: string,\n    kustoPoolName: string,\n    databaseName: string,\n    resourceGroupName: string,\n    options?: KustoPoolDatabasePrincipalAssignmentsListOptionalParams\n  ): AsyncIterableIterator<DatabasePrincipalAssignment> {\n    for await (const page of this.listPagingPage(\n      workspaceName,\n      kustoPoolName,\n      databaseName,\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Checks that the database principal assignment is valid and is not already in use.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param databaseName The name of the database in the Kusto pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param principalAssignmentName The name of the resource.\n   * @param options The options parameters.\n   */\n  checkNameAvailability(\n    workspaceName: string,\n    kustoPoolName: string,\n    databaseName: string,\n    resourceGroupName: string,\n    principalAssignmentName: DatabasePrincipalAssignmentCheckNameRequest,\n    options?: KustoPoolDatabasePrincipalAssignmentsCheckNameAvailabilityOptionalParams\n  ): Promise<\n    KustoPoolDatabasePrincipalAssignmentsCheckNameAvailabilityResponse\n  > {\n    return this.client.sendOperationRequest(\n      {\n        workspaceName,\n        kustoPoolName,\n        databaseName,\n        resourceGroupName,\n        principalAssignmentName,\n        options\n      },\n      checkNameAvailabilityOperationSpec\n    );\n  }\n\n  /**\n   * Lists all Kusto pool database principalAssignments.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param databaseName The name of the database in the Kusto pool.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  private _list(\n    workspaceName: string,\n    kustoPoolName: string,\n    databaseName: string,\n    resourceGroupName: string,\n    options?: KustoPoolDatabasePrincipalAssignmentsListOptionalParams\n  ): Promise<KustoPoolDatabasePrincipalAssignmentsListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        workspaceName,\n        kustoPoolName,\n        databaseName,\n        resourceGroupName,\n        options\n      },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Gets a Kusto pool database principalAssignment.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param databaseName The name of the database in the Kusto pool.\n   * @param principalAssignmentName The name of the Kusto principalAssignment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  get(\n    workspaceName: string,\n    kustoPoolName: string,\n    databaseName: string,\n    principalAssignmentName: string,\n    resourceGroupName: string,\n    options?: KustoPoolDatabasePrincipalAssignmentsGetOptionalParams\n  ): Promise<KustoPoolDatabasePrincipalAssignmentsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        workspaceName,\n        kustoPoolName,\n        databaseName,\n        principalAssignmentName,\n        resourceGroupName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates a Kusto pool database principalAssignment.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param databaseName The name of the database in the Kusto pool.\n   * @param principalAssignmentName The name of the Kusto principalAssignment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param parameters The Kusto principalAssignments parameters supplied for the operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    workspaceName: string,\n    kustoPoolName: string,\n    databaseName: string,\n    principalAssignmentName: string,\n    resourceGroupName: string,\n    parameters: DatabasePrincipalAssignment,\n    options?: KustoPoolDatabasePrincipalAssignmentsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<\n        KustoPoolDatabasePrincipalAssignmentsCreateOrUpdateResponse\n      >,\n      KustoPoolDatabasePrincipalAssignmentsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<KustoPoolDatabasePrincipalAssignmentsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        workspaceName,\n        kustoPoolName,\n        databaseName,\n        principalAssignmentName,\n        resourceGroupName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Creates a Kusto pool database principalAssignment.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param databaseName The name of the database in the Kusto pool.\n   * @param principalAssignmentName The name of the Kusto principalAssignment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param parameters The Kusto principalAssignments parameters supplied for the operation.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    workspaceName: string,\n    kustoPoolName: string,\n    databaseName: string,\n    principalAssignmentName: string,\n    resourceGroupName: string,\n    parameters: DatabasePrincipalAssignment,\n    options?: KustoPoolDatabasePrincipalAssignmentsCreateOrUpdateOptionalParams\n  ): Promise<KustoPoolDatabasePrincipalAssignmentsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      workspaceName,\n      kustoPoolName,\n      databaseName,\n      principalAssignmentName,\n      resourceGroupName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes a Kusto pool principalAssignment.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param databaseName The name of the database in the Kusto pool.\n   * @param principalAssignmentName The name of the Kusto principalAssignment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    workspaceName: string,\n    kustoPoolName: string,\n    databaseName: string,\n    principalAssignmentName: string,\n    resourceGroupName: string,\n    options?: KustoPoolDatabasePrincipalAssignmentsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        workspaceName,\n        kustoPoolName,\n        databaseName,\n        principalAssignmentName,\n        resourceGroupName,\n        options\n      },\n      deleteOperationSpec\n    );\n    return new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n  }\n\n  /**\n   * Deletes a Kusto pool principalAssignment.\n   * @param workspaceName The name of the workspace.\n   * @param kustoPoolName The name of the Kusto pool.\n   * @param databaseName The name of the database in the Kusto pool.\n   * @param principalAssignmentName The name of the Kusto principalAssignment.\n   * @param resourceGroupName The name of the resource group. The name is case insensitive.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    workspaceName: string,\n    kustoPoolName: string,\n    databaseName: string,\n    principalAssignmentName: string,\n    resourceGroupName: string,\n    options?: KustoPoolDatabasePrincipalAssignmentsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      workspaceName,\n      kustoPoolName,\n      databaseName,\n      principalAssignmentName,\n      resourceGroupName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst checkNameAvailabilityOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/databases/{databaseName}/checkPrincipalAssignmentNameAvailability\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CheckNameResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.principalAssignmentName2,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.kustoPoolName1,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/databases/{databaseName}/principalAssignments\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabasePrincipalAssignmentListResult\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.kustoPoolName1,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/databases/{databaseName}/principalAssignments/{principalAssignmentName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabasePrincipalAssignment\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.kustoPoolName1,\n    Parameters.databaseName,\n    Parameters.principalAssignmentName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/databases/{databaseName}/principalAssignments/{principalAssignmentName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabasePrincipalAssignment\n    },\n    201: {\n      bodyMapper: Mappers.DatabasePrincipalAssignment\n    },\n    202: {\n      bodyMapper: Mappers.DatabasePrincipalAssignment\n    },\n    204: {\n      bodyMapper: Mappers.DatabasePrincipalAssignment\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.parameters29,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.kustoPoolName1,\n    Parameters.databaseName,\n    Parameters.principalAssignmentName1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/kustoPools/{kustoPoolName}/databases/{databaseName}/principalAssignments/{principalAssignmentName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.workspaceName,\n    Parameters.kustoPoolName1,\n    Parameters.databaseName,\n    Parameters.principalAssignmentName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreAuth from \"@azure/core-auth\";\nimport {\n  AzureADOnlyAuthenticationsImpl,\n  OperationsImpl,\n  IpFirewallRulesImpl,\n  KeysImpl,\n  PrivateEndpointConnectionsImpl,\n  PrivateLinkResourcesImpl,\n  PrivateLinkHubPrivateLinkResourcesImpl,\n  PrivateLinkHubsImpl,\n  PrivateEndpointConnectionsPrivateLinkHubImpl,\n  SqlPoolsImpl,\n  SqlPoolMetadataSyncConfigsImpl,\n  SqlPoolOperationResultsImpl,\n  SqlPoolGeoBackupPoliciesImpl,\n  SqlPoolDataWarehouseUserActivitiesImpl,\n  SqlPoolRestorePointsImpl,\n  SqlPoolReplicationLinksImpl,\n  SqlPoolMaintenanceWindowsImpl,\n  SqlPoolMaintenanceWindowOptionsImpl,\n  SqlPoolTransparentDataEncryptionsImpl,\n  SqlPoolBlobAuditingPoliciesImpl,\n  SqlPoolOperationsImpl,\n  SqlPoolUsagesImpl,\n  SqlPoolSensitivityLabelsImpl,\n  SqlPoolRecommendedSensitivityLabelsImpl,\n  SqlPoolSchemasImpl,\n  SqlPoolTablesImpl,\n  SqlPoolTableColumnsImpl,\n  SqlPoolConnectionPoliciesImpl,\n  SqlPoolVulnerabilityAssessmentsImpl,\n  SqlPoolVulnerabilityAssessmentScansImpl,\n  SqlPoolSecurityAlertPoliciesImpl,\n  SqlPoolVulnerabilityAssessmentRuleBaselinesImpl,\n  ExtendedSqlPoolBlobAuditingPoliciesImpl,\n  DataMaskingPoliciesImpl,\n  DataMaskingRulesImpl,\n  SqlPoolColumnsImpl,\n  SqlPoolWorkloadGroupImpl,\n  SqlPoolWorkloadClassifierImpl,\n  WorkspaceManagedSqlServerBlobAuditingPoliciesImpl,\n  WorkspaceManagedSqlServerExtendedBlobAuditingPoliciesImpl,\n  WorkspaceManagedSqlServerSecurityAlertPolicyImpl,\n  WorkspaceManagedSqlServerVulnerabilityAssessmentsImpl,\n  WorkspaceManagedSqlServerEncryptionProtectorImpl,\n  WorkspaceManagedSqlServerUsagesImpl,\n  WorkspaceManagedSqlServerRecoverableSqlPoolsImpl,\n  WorkspacesImpl,\n  WorkspaceAadAdminsImpl,\n  WorkspaceSqlAadAdminsImpl,\n  WorkspaceManagedIdentitySqlControlSettingsImpl,\n  RestorableDroppedSqlPoolsImpl,\n  BigDataPoolsImpl,\n  LibraryImpl,\n  LibrariesImpl,\n  IntegrationRuntimesImpl,\n  IntegrationRuntimeNodeIpAddressOperationsImpl,\n  IntegrationRuntimeObjectMetadataImpl,\n  IntegrationRuntimeNodesImpl,\n  IntegrationRuntimeCredentialsImpl,\n  IntegrationRuntimeConnectionInfosImpl,\n  IntegrationRuntimeAuthKeysOperationsImpl,\n  IntegrationRuntimeMonitoringDataOperationsImpl,\n  IntegrationRuntimeStatusOperationsImpl,\n  SparkConfigurationImpl,\n  SparkConfigurationsImpl,\n  KustoOperationsImpl,\n  KustoPoolsImpl,\n  KustoPoolChildResourceImpl,\n  KustoPoolAttachedDatabaseConfigurationsImpl,\n  KustoPoolDatabasesImpl,\n  KustoPoolDataConnectionsImpl,\n  KustoPoolPrincipalAssignmentsImpl,\n  KustoPoolDatabasePrincipalAssignmentsImpl\n} from \"./operations\";\nimport {\n  AzureADOnlyAuthentications,\n  Operations,\n  IpFirewallRules,\n  Keys,\n  PrivateEndpointConnections,\n  PrivateLinkResources,\n  PrivateLinkHubPrivateLinkResources,\n  PrivateLinkHubs,\n  PrivateEndpointConnectionsPrivateLinkHub,\n  SqlPools,\n  SqlPoolMetadataSyncConfigs,\n  SqlPoolOperationResults,\n  SqlPoolGeoBackupPolicies,\n  SqlPoolDataWarehouseUserActivities,\n  SqlPoolRestorePoints,\n  SqlPoolReplicationLinks,\n  SqlPoolMaintenanceWindows,\n  SqlPoolMaintenanceWindowOptions,\n  SqlPoolTransparentDataEncryptions,\n  SqlPoolBlobAuditingPolicies,\n  SqlPoolOperations,\n  SqlPoolUsages,\n  SqlPoolSensitivityLabels,\n  SqlPoolRecommendedSensitivityLabels,\n  SqlPoolSchemas,\n  SqlPoolTables,\n  SqlPoolTableColumns,\n  SqlPoolConnectionPolicies,\n  SqlPoolVulnerabilityAssessments,\n  SqlPoolVulnerabilityAssessmentScans,\n  SqlPoolSecurityAlertPolicies,\n  SqlPoolVulnerabilityAssessmentRuleBaselines,\n  ExtendedSqlPoolBlobAuditingPolicies,\n  DataMaskingPolicies,\n  DataMaskingRules,\n  SqlPoolColumns,\n  SqlPoolWorkloadGroup,\n  SqlPoolWorkloadClassifier,\n  WorkspaceManagedSqlServerBlobAuditingPolicies,\n  WorkspaceManagedSqlServerExtendedBlobAuditingPolicies,\n  WorkspaceManagedSqlServerSecurityAlertPolicy,\n  WorkspaceManagedSqlServerVulnerabilityAssessments,\n  WorkspaceManagedSqlServerEncryptionProtector,\n  WorkspaceManagedSqlServerUsages,\n  WorkspaceManagedSqlServerRecoverableSqlPools,\n  Workspaces,\n  WorkspaceAadAdmins,\n  WorkspaceSqlAadAdmins,\n  WorkspaceManagedIdentitySqlControlSettings,\n  RestorableDroppedSqlPools,\n  BigDataPools,\n  Library,\n  Libraries,\n  IntegrationRuntimes,\n  IntegrationRuntimeNodeIpAddressOperations,\n  IntegrationRuntimeObjectMetadata,\n  IntegrationRuntimeNodes,\n  IntegrationRuntimeCredentials,\n  IntegrationRuntimeConnectionInfos,\n  IntegrationRuntimeAuthKeysOperations,\n  IntegrationRuntimeMonitoringDataOperations,\n  IntegrationRuntimeStatusOperations,\n  SparkConfiguration,\n  SparkConfigurations,\n  KustoOperations,\n  KustoPools,\n  KustoPoolChildResource,\n  KustoPoolAttachedDatabaseConfigurations,\n  KustoPoolDatabases,\n  KustoPoolDataConnections,\n  KustoPoolPrincipalAssignments,\n  KustoPoolDatabasePrincipalAssignments\n} from \"./operationsInterfaces\";\nimport { SynapseManagementClientOptionalParams } from \"./models\";\n\nexport class SynapseManagementClient extends coreClient.ServiceClient {\n  $host: string;\n  subscriptionId: string;\n\n  /**\n   * Initializes a new instance of the SynapseManagementClient class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param subscriptionId The ID of the target subscription.\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    subscriptionId: string,\n    options?: SynapseManagementClientOptionalParams\n  ) {\n    if (credentials === undefined) {\n      throw new Error(\"'credentials' cannot be null\");\n    }\n    if (subscriptionId === undefined) {\n      throw new Error(\"'subscriptionId' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: SynapseManagementClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n      credential: credentials\n    };\n\n    const packageDetails = `azsdk-js-arm-synapse/8.0.0`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    if (!options.credentialScopes) {\n      options.credentialScopes = [\"https://management.azure.com/.default\"];\n    }\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      baseUri: options.endpoint || \"https://management.azure.com\"\n    };\n    super(optionsWithDefaults);\n    // Parameter assignments\n    this.subscriptionId = subscriptionId;\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://management.azure.com\";\n    this.azureADOnlyAuthentications = new AzureADOnlyAuthenticationsImpl(this);\n    this.operations = new OperationsImpl(this);\n    this.ipFirewallRules = new IpFirewallRulesImpl(this);\n    this.keys = new KeysImpl(this);\n    this.privateEndpointConnections = new PrivateEndpointConnectionsImpl(this);\n    this.privateLinkResources = new PrivateLinkResourcesImpl(this);\n    this.privateLinkHubPrivateLinkResources = new PrivateLinkHubPrivateLinkResourcesImpl(\n      this\n    );\n    this.privateLinkHubs = new PrivateLinkHubsImpl(this);\n    this.privateEndpointConnectionsPrivateLinkHub = new PrivateEndpointConnectionsPrivateLinkHubImpl(\n      this\n    );\n    this.sqlPools = new SqlPoolsImpl(this);\n    this.sqlPoolMetadataSyncConfigs = new SqlPoolMetadataSyncConfigsImpl(this);\n    this.sqlPoolOperationResults = new SqlPoolOperationResultsImpl(this);\n    this.sqlPoolGeoBackupPolicies = new SqlPoolGeoBackupPoliciesImpl(this);\n    this.sqlPoolDataWarehouseUserActivities = new SqlPoolDataWarehouseUserActivitiesImpl(\n      this\n    );\n    this.sqlPoolRestorePoints = new SqlPoolRestorePointsImpl(this);\n    this.sqlPoolReplicationLinks = new SqlPoolReplicationLinksImpl(this);\n    this.sqlPoolMaintenanceWindows = new SqlPoolMaintenanceWindowsImpl(this);\n    this.sqlPoolMaintenanceWindowOptions = new SqlPoolMaintenanceWindowOptionsImpl(\n      this\n    );\n    this.sqlPoolTransparentDataEncryptions = new SqlPoolTransparentDataEncryptionsImpl(\n      this\n    );\n    this.sqlPoolBlobAuditingPolicies = new SqlPoolBlobAuditingPoliciesImpl(\n      this\n    );\n    this.sqlPoolOperations = new SqlPoolOperationsImpl(this);\n    this.sqlPoolUsages = new SqlPoolUsagesImpl(this);\n    this.sqlPoolSensitivityLabels = new SqlPoolSensitivityLabelsImpl(this);\n    this.sqlPoolRecommendedSensitivityLabels = new SqlPoolRecommendedSensitivityLabelsImpl(\n      this\n    );\n    this.sqlPoolSchemas = new SqlPoolSchemasImpl(this);\n    this.sqlPoolTables = new SqlPoolTablesImpl(this);\n    this.sqlPoolTableColumns = new SqlPoolTableColumnsImpl(this);\n    this.sqlPoolConnectionPolicies = new SqlPoolConnectionPoliciesImpl(this);\n    this.sqlPoolVulnerabilityAssessments = new SqlPoolVulnerabilityAssessmentsImpl(\n      this\n    );\n    this.sqlPoolVulnerabilityAssessmentScans = new SqlPoolVulnerabilityAssessmentScansImpl(\n      this\n    );\n    this.sqlPoolSecurityAlertPolicies = new SqlPoolSecurityAlertPoliciesImpl(\n      this\n    );\n    this.sqlPoolVulnerabilityAssessmentRuleBaselines = new SqlPoolVulnerabilityAssessmentRuleBaselinesImpl(\n      this\n    );\n    this.extendedSqlPoolBlobAuditingPolicies = new ExtendedSqlPoolBlobAuditingPoliciesImpl(\n      this\n    );\n    this.dataMaskingPolicies = new DataMaskingPoliciesImpl(this);\n    this.dataMaskingRules = new DataMaskingRulesImpl(this);\n    this.sqlPoolColumns = new SqlPoolColumnsImpl(this);\n    this.sqlPoolWorkloadGroup = new SqlPoolWorkloadGroupImpl(this);\n    this.sqlPoolWorkloadClassifier = new SqlPoolWorkloadClassifierImpl(this);\n    this.workspaceManagedSqlServerBlobAuditingPolicies = new WorkspaceManagedSqlServerBlobAuditingPoliciesImpl(\n      this\n    );\n    this.workspaceManagedSqlServerExtendedBlobAuditingPolicies = new WorkspaceManagedSqlServerExtendedBlobAuditingPoliciesImpl(\n      this\n    );\n    this.workspaceManagedSqlServerSecurityAlertPolicy = new WorkspaceManagedSqlServerSecurityAlertPolicyImpl(\n      this\n    );\n    this.workspaceManagedSqlServerVulnerabilityAssessments = new WorkspaceManagedSqlServerVulnerabilityAssessmentsImpl(\n      this\n    );\n    this.workspaceManagedSqlServerEncryptionProtector = new WorkspaceManagedSqlServerEncryptionProtectorImpl(\n      this\n    );\n    this.workspaceManagedSqlServerUsages = new WorkspaceManagedSqlServerUsagesImpl(\n      this\n    );\n    this.workspaceManagedSqlServerRecoverableSqlPools = new WorkspaceManagedSqlServerRecoverableSqlPoolsImpl(\n      this\n    );\n    this.workspaces = new WorkspacesImpl(this);\n    this.workspaceAadAdmins = new WorkspaceAadAdminsImpl(this);\n    this.workspaceSqlAadAdmins = new WorkspaceSqlAadAdminsImpl(this);\n    this.workspaceManagedIdentitySqlControlSettings = new WorkspaceManagedIdentitySqlControlSettingsImpl(\n      this\n    );\n    this.restorableDroppedSqlPools = new RestorableDroppedSqlPoolsImpl(this);\n    this.bigDataPools = new BigDataPoolsImpl(this);\n    this.library = new LibraryImpl(this);\n    this.libraries = new LibrariesImpl(this);\n    this.integrationRuntimes = new IntegrationRuntimesImpl(this);\n    this.integrationRuntimeNodeIpAddressOperations = new IntegrationRuntimeNodeIpAddressOperationsImpl(\n      this\n    );\n    this.integrationRuntimeObjectMetadata = new IntegrationRuntimeObjectMetadataImpl(\n      this\n    );\n    this.integrationRuntimeNodes = new IntegrationRuntimeNodesImpl(this);\n    this.integrationRuntimeCredentials = new IntegrationRuntimeCredentialsImpl(\n      this\n    );\n    this.integrationRuntimeConnectionInfos = new IntegrationRuntimeConnectionInfosImpl(\n      this\n    );\n    this.integrationRuntimeAuthKeysOperations = new IntegrationRuntimeAuthKeysOperationsImpl(\n      this\n    );\n    this.integrationRuntimeMonitoringDataOperations = new IntegrationRuntimeMonitoringDataOperationsImpl(\n      this\n    );\n    this.integrationRuntimeStatusOperations = new IntegrationRuntimeStatusOperationsImpl(\n      this\n    );\n    this.sparkConfiguration = new SparkConfigurationImpl(this);\n    this.sparkConfigurations = new SparkConfigurationsImpl(this);\n    this.kustoOperations = new KustoOperationsImpl(this);\n    this.kustoPools = new KustoPoolsImpl(this);\n    this.kustoPoolChildResource = new KustoPoolChildResourceImpl(this);\n    this.kustoPoolAttachedDatabaseConfigurations = new KustoPoolAttachedDatabaseConfigurationsImpl(\n      this\n    );\n    this.kustoPoolDatabases = new KustoPoolDatabasesImpl(this);\n    this.kustoPoolDataConnections = new KustoPoolDataConnectionsImpl(this);\n    this.kustoPoolPrincipalAssignments = new KustoPoolPrincipalAssignmentsImpl(\n      this\n    );\n    this.kustoPoolDatabasePrincipalAssignments = new KustoPoolDatabasePrincipalAssignmentsImpl(\n      this\n    );\n  }\n\n  azureADOnlyAuthentications: AzureADOnlyAuthentications;\n  operations: Operations;\n  ipFirewallRules: IpFirewallRules;\n  keys: Keys;\n  privateEndpointConnections: PrivateEndpointConnections;\n  privateLinkResources: PrivateLinkResources;\n  privateLinkHubPrivateLinkResources: PrivateLinkHubPrivateLinkResources;\n  privateLinkHubs: PrivateLinkHubs;\n  privateEndpointConnectionsPrivateLinkHub: PrivateEndpointConnectionsPrivateLinkHub;\n  sqlPools: SqlPools;\n  sqlPoolMetadataSyncConfigs: SqlPoolMetadataSyncConfigs;\n  sqlPoolOperationResults: SqlPoolOperationResults;\n  sqlPoolGeoBackupPolicies: SqlPoolGeoBackupPolicies;\n  sqlPoolDataWarehouseUserActivities: SqlPoolDataWarehouseUserActivities;\n  sqlPoolRestorePoints: SqlPoolRestorePoints;\n  sqlPoolReplicationLinks: SqlPoolReplicationLinks;\n  sqlPoolMaintenanceWindows: SqlPoolMaintenanceWindows;\n  sqlPoolMaintenanceWindowOptions: SqlPoolMaintenanceWindowOptions;\n  sqlPoolTransparentDataEncryptions: SqlPoolTransparentDataEncryptions;\n  sqlPoolBlobAuditingPolicies: SqlPoolBlobAuditingPolicies;\n  sqlPoolOperations: SqlPoolOperations;\n  sqlPoolUsages: SqlPoolUsages;\n  sqlPoolSensitivityLabels: SqlPoolSensitivityLabels;\n  sqlPoolRecommendedSensitivityLabels: SqlPoolRecommendedSensitivityLabels;\n  sqlPoolSchemas: SqlPoolSchemas;\n  sqlPoolTables: SqlPoolTables;\n  sqlPoolTableColumns: SqlPoolTableColumns;\n  sqlPoolConnectionPolicies: SqlPoolConnectionPolicies;\n  sqlPoolVulnerabilityAssessments: SqlPoolVulnerabilityAssessments;\n  sqlPoolVulnerabilityAssessmentScans: SqlPoolVulnerabilityAssessmentScans;\n  sqlPoolSecurityAlertPolicies: SqlPoolSecurityAlertPolicies;\n  sqlPoolVulnerabilityAssessmentRuleBaselines: SqlPoolVulnerabilityAssessmentRuleBaselines;\n  extendedSqlPoolBlobAuditingPolicies: ExtendedSqlPoolBlobAuditingPolicies;\n  dataMaskingPolicies: DataMaskingPolicies;\n  dataMaskingRules: DataMaskingRules;\n  sqlPoolColumns: SqlPoolColumns;\n  sqlPoolWorkloadGroup: SqlPoolWorkloadGroup;\n  sqlPoolWorkloadClassifier: SqlPoolWorkloadClassifier;\n  workspaceManagedSqlServerBlobAuditingPolicies: WorkspaceManagedSqlServerBlobAuditingPolicies;\n  workspaceManagedSqlServerExtendedBlobAuditingPolicies: WorkspaceManagedSqlServerExtendedBlobAuditingPolicies;\n  workspaceManagedSqlServerSecurityAlertPolicy: WorkspaceManagedSqlServerSecurityAlertPolicy;\n  workspaceManagedSqlServerVulnerabilityAssessments: WorkspaceManagedSqlServerVulnerabilityAssessments;\n  workspaceManagedSqlServerEncryptionProtector: WorkspaceManagedSqlServerEncryptionProtector;\n  workspaceManagedSqlServerUsages: WorkspaceManagedSqlServerUsages;\n  workspaceManagedSqlServerRecoverableSqlPools: WorkspaceManagedSqlServerRecoverableSqlPools;\n  workspaces: Workspaces;\n  workspaceAadAdmins: WorkspaceAadAdmins;\n  workspaceSqlAadAdmins: WorkspaceSqlAadAdmins;\n  workspaceManagedIdentitySqlControlSettings: WorkspaceManagedIdentitySqlControlSettings;\n  restorableDroppedSqlPools: RestorableDroppedSqlPools;\n  bigDataPools: BigDataPools;\n  library: Library;\n  libraries: Libraries;\n  integrationRuntimes: IntegrationRuntimes;\n  integrationRuntimeNodeIpAddressOperations: IntegrationRuntimeNodeIpAddressOperations;\n  integrationRuntimeObjectMetadata: IntegrationRuntimeObjectMetadata;\n  integrationRuntimeNodes: IntegrationRuntimeNodes;\n  integrationRuntimeCredentials: IntegrationRuntimeCredentials;\n  integrationRuntimeConnectionInfos: IntegrationRuntimeConnectionInfos;\n  integrationRuntimeAuthKeysOperations: IntegrationRuntimeAuthKeysOperations;\n  integrationRuntimeMonitoringDataOperations: IntegrationRuntimeMonitoringDataOperations;\n  integrationRuntimeStatusOperations: IntegrationRuntimeStatusOperations;\n  sparkConfiguration: SparkConfiguration;\n  sparkConfigurations: SparkConfigurations;\n  kustoOperations: KustoOperations;\n  kustoPools: KustoPools;\n  kustoPoolChildResource: KustoPoolChildResource;\n  kustoPoolAttachedDatabaseConfigurations: KustoPoolAttachedDatabaseConfigurations;\n  kustoPoolDatabases: KustoPoolDatabases;\n  kustoPoolDataConnections: KustoPoolDataConnections;\n  kustoPoolPrincipalAssignments: KustoPoolPrincipalAssignments;\n  kustoPoolDatabasePrincipalAssignments: KustoPoolDatabasePrincipalAssignments;\n}\n"],"names":["KnownAzureADOnlyAuthenticationName","KnownStateValue","KnownProvisioningState","KnownOperationStatus","KnownCreateMode","KnownStorageAccountType","KnownGeoBackupPolicyName","KnownDataWarehouseUserActivityName","KnownReplicationState","KnownDayOfWeek","KnownTransparentDataEncryptionName","KnownManagementOperationState","KnownColumnDataType","KnownConnectionPolicyName","KnownVulnerabilityAssessmentName","KnownVulnerabilityAssessmentScanTriggerType","KnownVulnerabilityAssessmentScanState","KnownSecurityAlertPolicyName","KnownBlobAuditingPolicyName","KnownSecurityAlertPolicyNameAutoGenerated","KnownEncryptionProtectorName","KnownServerKeyType","KnownWorkspacePublicNetworkAccess","KnownManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentityDesiredState","KnownManagedIdentitySqlControlSettingsModelPropertiesGrantSqlControlToManagedIdentityActualState","KnownConfigurationType","KnownNodeSize","KnownNodeSizeFamily","KnownIntegrationRuntimeAutoUpdate","KnownIntegrationRuntimeType","KnownSsisObjectMetadataType","KnownSelfHostedIntegrationRuntimeNodeStatus","KnownIntegrationRuntimeUpdateResult","KnownIntegrationRuntimeState","KnownIntegrationRuntimeAuthKeyName","KnownReason","KnownSkuName","KnownSkuSize","KnownState","KnownResourceProvisioningState","KnownLanguageExtensionName","KnownCreatedByType","KnownAzureScaleType","KnownDefaultPrincipalsModificationKind","KnownKind","KnownDataConnectionKind","KnownClusterPrincipalRole","KnownPrincipalType","KnownDatabasePrincipalRole","KnownDataFlowComputeType","KnownIntegrationRuntimeSsisCatalogPricingTier","KnownIntegrationRuntimeLicenseType","KnownIntegrationRuntimeEntityReferenceType","KnownIntegrationRuntimeEdition","KnownManagedIntegrationRuntimeNodeStatus","KnownIntegrationRuntimeInternalChannelEncryptionMode","KnownPrincipalsModificationKind","KnownEventHubDataFormat","KnownCompression","KnownIotHubDataFormat","KnownEventGridDataFormat","KnownBlobStorageEventType","AzureADOnlyAuthenticationMapper","CheckNameAvailabilityRequestMapper","IpFirewallRuleInfoMapper","ReplaceAllIpFirewallRulesRequestMapper","KeyMapper","PrivateEndpointConnectionMapper","PrivateLinkHubPatchInfoMapper","PrivateLinkHubMapper","SqlPoolPatchInfoMapper","SqlPoolMapper","ResourceMoveDefinitionMapper","MetadataSyncConfigMapper","GeoBackupPolicyMapper","CreateSqlPoolRestorePointDefinitionMapper","MaintenanceWindowsMapper","TransparentDataEncryptionMapper","SqlPoolBlobAuditingPolicyMapper","SensitivityLabelUpdateListMapper","SensitivityLabelMapper","RecommendedSensitivityLabelUpdateListMapper","SqlPoolVulnerabilityAssessmentMapper","SqlPoolSecurityAlertPolicyMapper","SqlPoolVulnerabilityAssessmentRuleBaselineMapper","ExtendedSqlPoolBlobAuditingPolicyMapper","DataMaskingPolicyMapper","DataMaskingRuleMapper","WorkloadGroupMapper","WorkloadClassifierMapper","ServerBlobAuditingPolicyMapper","ExtendedServerBlobAuditingPolicyMapper","ServerSecurityAlertPolicyMapper","ServerVulnerabilityAssessmentMapper","EncryptionProtectorMapper","WorkspacePatchInfoMapper","WorkspaceMapper","WorkspaceAadAdminInfoMapper","ManagedIdentitySqlControlSettingsModelMapper","BigDataPoolPatchInfoMapper","BigDataPoolResourceInfoMapper","UpdateIntegrationRuntimeRequestMapper","IntegrationRuntimeResourceMapper","GetSsisObjectMetadataRequestMapper","UpdateIntegrationRuntimeNodeRequestMapper","IntegrationRuntimeRegenerateKeyParametersMapper","KustoPoolCheckNameRequestMapper","KustoPoolMapper","KustoPoolUpdateMapper","LanguageExtensionsListMapper","FollowerDatabaseDefinitionMapper","DatabaseCheckNameRequestMapper","AttachedDatabaseConfigurationMapper","DatabaseMapper","DataConnectionCheckNameRequestMapper","DataConnectionValidationMapper","DataConnectionMapper","ClusterPrincipalAssignmentCheckNameRequestMapper","ClusterPrincipalAssignmentMapper","DatabasePrincipalAssignmentCheckNameRequestMapper","DatabasePrincipalAssignmentMapper","__asyncValues","__asyncDelegator","LroEngine","coreClient.createSerializer","Mappers.AzureADOnlyAuthentication","Mappers.ErrorResponse","Parameters.apiVersion","Parameters.$host","Parameters.subscriptionId","Parameters.resourceGroupName","Parameters.workspaceName","Parameters.azureADOnlyAuthenticationName","Parameters.accept","Parameters.azureADOnlyAuthenticationInfo","Parameters.contentType","Mappers.AzureADOnlyAuthenticationListResult","Parameters.nextLink","listOperationSpec","serializer","Mappers.CheckNameAvailabilityResponse","Parameters.request","Parameters.operationId","Mappers.OperationResource","getOperationSpec","Mappers.IpFirewallRuleInfoListResult","Mappers.IpFirewallRuleInfo","Parameters.ipFirewallRuleInfo","Parameters.ruleName","Mappers.ReplaceAllFirewallRulesOperationResponse","Parameters.request1","listByWorkspaceOperationSpec","createOrUpdateOperationSpec","deleteOperationSpec","listByWorkspaceNextOperationSpec","Mappers.KeyInfoListResult","Mappers.Key","Parameters.keyName","Parameters.keyProperties","createOperationSpec","listNextOperationSpec","Mappers.PrivateEndpointConnection","Parameters.privateEndpointConnectionName","Parameters.request2","Mappers.PrivateEndpointConnectionList","Mappers.PrivateLinkResourceListResult","Mappers.PrivateLinkResource","Parameters.privateLinkResourceName","Parameters.privateLinkHubName","Mappers.PrivateLinkHubInfoListResult","Mappers.PrivateLinkHub","Parameters.privateLinkHubPatchInfo","Parameters.privateLinkHubInfo","Mappers.PrivateEndpointConnectionForPrivateLinkHubResourceCollectionResponse","Mappers.PrivateEndpointConnectionForPrivateLinkHub","updateOperationSpec","Mappers.SqlPool","Parameters.sqlPoolName","Parameters.sqlPoolInfo","Parameters.sqlPoolInfo1","Mappers.SqlPoolInfoListResult","Parameters.parameters","Mappers.MetadataSyncConfig","Parameters.metadataSyncConfiguration","getLocationHeaderResultOperationSpec","Mappers.GeoBackupPolicyListResult","Mappers.GeoBackupPolicy","Parameters.parameters1","Parameters.geoBackupPolicyName","Mappers.DataWarehouseUserActivities","Parameters.dataWarehouseUserActivityName","Mappers.RestorePointListResult","Mappers.RestorePoint","Parameters.parameters2","Parameters.restorePointName","Mappers.ReplicationLinkListResult","Mappers.ReplicationLink","Parameters.linkId","Mappers.MaintenanceWindows","Parameters.maintenanceWindowName","Parameters.parameters3","Mappers.MaintenanceWindowOptions","Parameters.maintenanceWindowOptionsName","Mappers.TransparentDataEncryption","Parameters.transparentDataEncryptionName","Parameters.parameters4","Mappers.TransparentDataEncryptionListResult","Mappers.SqlPoolBlobAuditingPolicy","Parameters.blobAuditingPolicyName","Parameters.parameters5","Mappers.SqlPoolBlobAuditingPolicyListResult","Mappers.SqlPoolBlobAuditingPolicySqlPoolOperationListResult","Mappers.SqlPoolUsageListResult","Mappers.SensitivityLabelListResult","Parameters.filter","Parameters.parameters6","Parameters.includeDisabledRecommendations","Parameters.skipToken","Mappers.SensitivityLabel","Parameters.parameters7","Parameters.schemaName","Parameters.tableName","Parameters.columnName","Parameters.sensitivityLabelSource","Parameters.sensitivityLabelSource1","Parameters.sensitivityLabelSource2","Parameters.parameters8","Mappers.SqlPoolSchemaListResult","Mappers.SqlPoolSchema","Mappers.SqlPoolTableListResult","Mappers.SqlPoolTable","Mappers.SqlPoolColumnListResult","Mappers.SqlPoolConnectionPolicy","Parameters.connectionPolicyName","Mappers.SqlPoolVulnerabilityAssessmentListResult","Mappers.SqlPoolVulnerabilityAssessment","Parameters.vulnerabilityAssessmentName","Parameters.parameters9","Mappers.VulnerabilityAssessmentScanRecordListResult","Parameters.scanId","Mappers.SqlPoolVulnerabilityAssessmentScansExport","Mappers.VulnerabilityAssessmentScanRecord","Mappers.ListSqlPoolSecurityAlertPolicies","Mappers.SqlPoolSecurityAlertPolicy","Parameters.securityAlertPolicyName","Parameters.parameters10","Mappers.SqlPoolVulnerabilityAssessmentRuleBaseline","Parameters.parameters11","Parameters.ruleId","Parameters.baselineName","listBySqlPoolOperationSpec","listBySqlPoolNextOperationSpec","Mappers.ExtendedSqlPoolBlobAuditingPolicy","Parameters.parameters12","Mappers.ExtendedSqlPoolBlobAuditingPolicyListResult","Mappers.DataMaskingPolicy","Parameters.parameters13","Parameters.dataMaskingPolicyName","Mappers.DataMaskingRule","Parameters.parameters14","Parameters.dataMaskingRuleName","Mappers.DataMaskingRuleListResult","Mappers.SqlPoolColumn","Mappers.WorkloadGroup","Parameters.workloadGroupName","Parameters.parameters15","Mappers.WorkloadGroupListResult","Mappers.WorkloadClassifier","Parameters.workloadClassifierName","Parameters.parameters16","Mappers.WorkloadClassifierListResult","Mappers.ServerBlobAuditingPolicy","Parameters.blobAuditingPolicyName1","Parameters.parameters17","Mappers.ServerBlobAuditingPolicyListResult","Mappers.ExtendedServerBlobAuditingPolicy","Parameters.parameters18","Mappers.ExtendedServerBlobAuditingPolicyListResult","Mappers.ServerSecurityAlertPolicy","Parameters.securityAlertPolicyName1","Parameters.parameters19","Mappers.ServerSecurityAlertPolicyListResult","Mappers.ServerVulnerabilityAssessment","Parameters.parameters20","Mappers.ServerVulnerabilityAssessmentListResult","Mappers.EncryptionProtector","Parameters.encryptionProtectorName","Parameters.parameters21","Mappers.EncryptionProtectorListResult","Mappers.ServerUsageListResult","Mappers.RecoverableSqlPoolListResult","Mappers.RecoverableSqlPool","listByResourceGroupOperationSpec","listByResourceGroupNextOperationSpec","Mappers.WorkspaceInfoListResult","Mappers.Workspace","Parameters.workspacePatchInfo","Parameters.workspaceInfo","Mappers.WorkspaceAadAdminInfo","Parameters.aadAdminInfo","Mappers.ManagedIdentitySqlControlSettingsModel","Parameters.managedIdentitySqlControlSettings","Mappers.RestorableDroppedSqlPool","Parameters.restorableDroppedSqlPoolId","Mappers.RestorableDroppedSqlPoolListResult","Mappers.BigDataPoolResourceInfo","Parameters.apiVersion1","Parameters.bigDataPoolName","Parameters.bigDataPoolPatchInfo","Parameters.bigDataPoolInfo","Parameters.force","Mappers.BigDataPoolResourceInfoListResult","Mappers.LibraryResource","Parameters.libraryName","Mappers.LibraryListResponse","Mappers.IntegrationRuntimeResource","Parameters.updateIntegrationRuntimeRequest","Parameters.integrationRuntimeName","Parameters.ifNoneMatch","Parameters.integrationRuntime","Parameters.ifMatch","Mappers.IntegrationRuntimeListResponse","Mappers.IntegrationRuntimeStatusResponse","Mappers.IntegrationRuntimeOutboundNetworkDependenciesEndpointsResponse","Mappers.IntegrationRuntimeNodeIpAddress","Parameters.nodeName","Mappers.SsisObjectMetadataListResponse","Parameters.getMetadataRequest","Mappers.SsisObjectMetadataStatusResponse","Mappers.SelfHostedIntegrationRuntimeNode","Parameters.updateIntegrationRuntimeNodeRequest","Mappers.IntegrationRuntimeConnectionInfo","Mappers.IntegrationRuntimeAuthKeys","Parameters.regenerateKeyParameters","Mappers.IntegrationRuntimeMonitoringData","Mappers.SparkConfigurationResource","Parameters.sparkConfigurationName","Mappers.SparkConfigurationListResponse","Mappers.OperationListResult","checkNameAvailabilityOperationSpec","stopOperationSpec","startOperationSpec","Mappers.SkuDescriptionList","Mappers.CheckNameResult","Parameters.kustoPoolName","Parameters.location","Mappers.KustoPoolListResult","Mappers.KustoPool","Parameters.kustoPoolName1","Parameters.parameters22","Parameters.parameters23","Mappers.ListResourceSkusResult","Mappers.LanguageExtensionsList","Parameters.languageExtensionsToAdd","Parameters.languageExtensionsToRemove","Mappers.FollowerDatabaseListResult","Parameters.followerDatabaseToRemove","Parameters.resourceName","Mappers.AttachedDatabaseConfigurationListResult","Mappers.AttachedDatabaseConfiguration","Parameters.attachedDatabaseConfigurationName","Parameters.parameters24","listByKustoPoolOperationSpec","Mappers.DatabaseListResult","Mappers.Database","Parameters.databaseName","Parameters.parameters25","Parameters.dataConnectionName","Mappers.DataConnectionValidationListResult","Parameters.parameters26","Mappers.DataConnectionListResult","Mappers.DataConnection","Parameters.dataConnectionName1","Parameters.parameters27","Parameters.principalAssignmentName","Mappers.ClusterPrincipalAssignmentListResult","Mappers.ClusterPrincipalAssignment","Parameters.principalAssignmentName1","Parameters.parameters28","Parameters.principalAssignmentName2","Mappers.DatabasePrincipalAssignmentListResult","Mappers.DatabasePrincipalAssignment","Parameters.parameters29","coreClient.ServiceClient"],"mappings":"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"}