import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SqlPoolTableColumns } from "../operationsInterfaces";
import { SynapseManagementClient } from "../synapseManagementClient";
import { SqlPoolColumn, SqlPoolTableColumnsListByTableNameOptionalParams } from "../models";
/** Class containing SqlPoolTableColumns operations. */
export declare class SqlPoolTableColumnsImpl implements SqlPoolTableColumns {
    private readonly client;
    /**
     * Initialize a new instance of the class SqlPoolTableColumns class.
     * @param client Reference to the service client
     */
    constructor(client: SynapseManagementClient);
    /**
     * Gets columns in a given table in a SQL pool.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name
     * @param schemaName The name of the schema.
     * @param tableName The name of the table.
     * @param options The options parameters.
     */
    listByTableName(resourceGroupName: string, workspaceName: string, sqlPoolName: string, schemaName: string, tableName: string, options?: SqlPoolTableColumnsListByTableNameOptionalParams): PagedAsyncIterableIterator<SqlPoolColumn>;
    private listByTableNamePagingPage;
    private listByTableNamePagingAll;
    /**
     * Gets columns in a given table in a SQL pool.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name
     * @param schemaName The name of the schema.
     * @param tableName The name of the table.
     * @param options The options parameters.
     */
    private _listByTableName;
    /**
     * ListByTableNameNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name
     * @param schemaName The name of the schema.
     * @param tableName The name of the table.
     * @param nextLink The nextLink from the previous successful call to the ListByTableName method.
     * @param options The options parameters.
     */
    private _listByTableNameNext;
}
//# sourceMappingURL=sqlPoolTableColumns.d.ts.map