import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { PrivateEndpointConnectionsPrivateLinkHub } from "../operationsInterfaces";
import { SynapseManagementClient } from "../synapseManagementClient";
import { PrivateEndpointConnectionForPrivateLinkHub, PrivateEndpointConnectionsPrivateLinkHubListOptionalParams, PrivateEndpointConnectionsPrivateLinkHubGetOptionalParams, PrivateEndpointConnectionsPrivateLinkHubGetResponse } from "../models";
/** Class containing PrivateEndpointConnectionsPrivateLinkHub operations. */
export declare class PrivateEndpointConnectionsPrivateLinkHubImpl implements PrivateEndpointConnectionsPrivateLinkHub {
    private readonly client;
    /**
     * Initialize a new instance of the class PrivateEndpointConnectionsPrivateLinkHub class.
     * @param client Reference to the service client
     */
    constructor(client: SynapseManagementClient);
    /**
     * Get all PrivateEndpointConnections in the PrivateLinkHub
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateLinkHubName Name of the privateLinkHub
     * @param options The options parameters.
     */
    list(resourceGroupName: string, privateLinkHubName: string, options?: PrivateEndpointConnectionsPrivateLinkHubListOptionalParams): PagedAsyncIterableIterator<PrivateEndpointConnectionForPrivateLinkHub>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Get all PrivateEndpointConnections in the PrivateLinkHub
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateLinkHubName Name of the privateLinkHub
     * @param options The options parameters.
     */
    private _list;
    /**
     * Get all PrivateEndpointConnection in the PrivateLinkHub by name
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateLinkHubName Name of the privateLinkHub
     * @param privateEndpointConnectionName Name of the privateEndpointConnection
     * @param options The options parameters.
     */
    get(resourceGroupName: string, privateLinkHubName: string, privateEndpointConnectionName: string, options?: PrivateEndpointConnectionsPrivateLinkHubGetOptionalParams): Promise<PrivateEndpointConnectionsPrivateLinkHubGetResponse>;
    /**
     * ListNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param privateLinkHubName Name of the privateLinkHub
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=privateEndpointConnectionsPrivateLinkHub.d.ts.map