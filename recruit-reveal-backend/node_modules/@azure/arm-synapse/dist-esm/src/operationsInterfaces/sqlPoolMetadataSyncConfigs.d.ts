import { SqlPoolMetadataSyncConfigsGetOptionalParams, SqlPoolMetadataSyncConfigsGetResponse, MetadataSyncConfig, SqlPoolMetadataSyncConfigsCreateOptionalParams, SqlPoolMetadataSyncConfigsCreateResponse } from "../models";
/** Interface representing a SqlPoolMetadataSyncConfigs. */
export interface SqlPoolMetadataSyncConfigs {
    /**
     * Get the metadata sync configuration for a SQL pool
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name
     * @param options The options parameters.
     */
    get(resourceGroupName: string, workspaceName: string, sqlPoolName: string, options?: SqlPoolMetadataSyncConfigsGetOptionalParams): Promise<SqlPoolMetadataSyncConfigsGetResponse>;
    /**
     * Set the metadata sync configuration for a SQL pool
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name
     * @param metadataSyncConfiguration Metadata sync configuration
     * @param options The options parameters.
     */
    create(resourceGroupName: string, workspaceName: string, sqlPoolName: string, metadataSyncConfiguration: MetadataSyncConfig, options?: SqlPoolMetadataSyncConfigsCreateOptionalParams): Promise<SqlPoolMetadataSyncConfigsCreateResponse>;
}
//# sourceMappingURL=sqlPoolMetadataSyncConfigs.d.ts.map