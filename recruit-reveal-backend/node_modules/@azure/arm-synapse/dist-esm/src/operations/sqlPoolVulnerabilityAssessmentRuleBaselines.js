/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
/** Class containing SqlPoolVulnerabilityAssessmentRuleBaselines operations. */
export class SqlPoolVulnerabilityAssessmentRuleBaselinesImpl {
    /**
     * Initialize a new instance of the class SqlPoolVulnerabilityAssessmentRuleBaselines class.
     * @param client Reference to the service client
     */
    constructor(client) {
        this.client = client;
    }
    /**
     * Creates or updates a Sql pool's vulnerability assessment rule baseline.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name
     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
     * @param ruleId The vulnerability assessment rule ID.
     * @param baselineName The name of the vulnerability assessment rule baseline (default implies a
     *                     baseline on a Sql pool level rule and master for workspace level rule).
     * @param parameters The requested rule baseline resource.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName, workspaceName, sqlPoolName, vulnerabilityAssessmentName, ruleId, baselineName, parameters, options) {
        return this.client.sendOperationRequest({
            resourceGroupName,
            workspaceName,
            sqlPoolName,
            vulnerabilityAssessmentName,
            ruleId,
            baselineName,
            parameters,
            options
        }, createOrUpdateOperationSpec);
    }
    /**
     * Removes the database's vulnerability assessment rule baseline.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name
     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
     * @param ruleId The vulnerability assessment rule ID.
     * @param baselineName The name of the vulnerability assessment rule baseline (default implies a
     *                     baseline on a Sql pool level rule and master for workspace level rule).
     * @param options The options parameters.
     */
    delete(resourceGroupName, workspaceName, sqlPoolName, vulnerabilityAssessmentName, ruleId, baselineName, options) {
        return this.client.sendOperationRequest({
            resourceGroupName,
            workspaceName,
            sqlPoolName,
            vulnerabilityAssessmentName,
            ruleId,
            baselineName,
            options
        }, deleteOperationSpec);
    }
    /**
     * Gets a SqlPool's vulnerability assessment rule baseline.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name
     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
     * @param ruleId The vulnerability assessment rule ID.
     * @param baselineName The name of the vulnerability assessment rule baseline (default implies a
     *                     baseline on a Sql pool level rule and master for server level rule).
     * @param options The options parameters.
     */
    get(resourceGroupName, workspaceName, sqlPoolName, vulnerabilityAssessmentName, ruleId, baselineName, options) {
        return this.client.sendOperationRequest({
            resourceGroupName,
            workspaceName,
            sqlPoolName,
            vulnerabilityAssessmentName,
            ruleId,
            baselineName,
            options
        }, getOperationSpec);
    }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);
const createOrUpdateOperationSpec = {
    path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/rules/{ruleId}/baselines/{baselineName}",
    httpMethod: "PUT",
    responses: {
        200: {
            bodyMapper: Mappers.SqlPoolVulnerabilityAssessmentRuleBaseline
        },
        default: {}
    },
    requestBody: Parameters.parameters11,
    queryParameters: [Parameters.apiVersion],
    urlParameters: [
        Parameters.$host,
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.workspaceName,
        Parameters.sqlPoolName,
        Parameters.vulnerabilityAssessmentName,
        Parameters.ruleId,
        Parameters.baselineName
    ],
    headerParameters: [Parameters.accept, Parameters.contentType],
    mediaType: "json",
    serializer
};
const deleteOperationSpec = {
    path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/rules/{ruleId}/baselines/{baselineName}",
    httpMethod: "DELETE",
    responses: { 200: {}, 204: {}, default: {} },
    queryParameters: [Parameters.apiVersion],
    urlParameters: [
        Parameters.$host,
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.workspaceName,
        Parameters.sqlPoolName,
        Parameters.vulnerabilityAssessmentName,
        Parameters.ruleId,
        Parameters.baselineName
    ],
    serializer
};
const getOperationSpec = {
    path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Synapse/workspaces/{workspaceName}/sqlPools/{sqlPoolName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/rules/{ruleId}/baselines/{baselineName}",
    httpMethod: "GET",
    responses: {
        200: {
            bodyMapper: Mappers.SqlPoolVulnerabilityAssessmentRuleBaseline
        },
        default: {}
    },
    queryParameters: [Parameters.apiVersion],
    urlParameters: [
        Parameters.$host,
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.workspaceName,
        Parameters.sqlPoolName,
        Parameters.vulnerabilityAssessmentName,
        Parameters.ruleId,
        Parameters.baselineName
    ],
    headerParameters: [Parameters.accept],
    serializer
};
//# sourceMappingURL=sqlPoolVulnerabilityAssessmentRuleBaselines.js.map