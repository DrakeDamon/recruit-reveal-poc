import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { KustoPoolDatabases } from "../operationsInterfaces";
import { SynapseManagementClient } from "../synapseManagementClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { DatabaseUnion, KustoPoolDatabasesListByKustoPoolOptionalParams, KustoPoolDatabasesGetOptionalParams, KustoPoolDatabasesGetResponse, KustoPoolDatabasesCreateOrUpdateOptionalParams, KustoPoolDatabasesCreateOrUpdateResponse, KustoPoolDatabasesUpdateOptionalParams, KustoPoolDatabasesUpdateResponse, KustoPoolDatabasesDeleteOptionalParams } from "../models";
/** Class containing KustoPoolDatabases operations. */
export declare class KustoPoolDatabasesImpl implements KustoPoolDatabases {
    private readonly client;
    /**
     * Initialize a new instance of the class KustoPoolDatabases class.
     * @param client Reference to the service client
     */
    constructor(client: SynapseManagementClient);
    /**
     * Returns the list of databases of the given Kusto pool.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param kustoPoolName The name of the Kusto pool.
     * @param options The options parameters.
     */
    listByKustoPool(resourceGroupName: string, workspaceName: string, kustoPoolName: string, options?: KustoPoolDatabasesListByKustoPoolOptionalParams): PagedAsyncIterableIterator<DatabaseUnion>;
    private listByKustoPoolPagingPage;
    private listByKustoPoolPagingAll;
    /**
     * Returns the list of databases of the given Kusto pool.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param kustoPoolName The name of the Kusto pool.
     * @param options The options parameters.
     */
    private _listByKustoPool;
    /**
     * Returns a database.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param kustoPoolName The name of the Kusto pool.
     * @param databaseName The name of the database in the Kusto pool.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, workspaceName: string, kustoPoolName: string, databaseName: string, options?: KustoPoolDatabasesGetOptionalParams): Promise<KustoPoolDatabasesGetResponse>;
    /**
     * Creates or updates a database.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param kustoPoolName The name of the Kusto pool.
     * @param databaseName The name of the database in the Kusto pool.
     * @param parameters The database parameters supplied to the CreateOrUpdate operation.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, workspaceName: string, kustoPoolName: string, databaseName: string, parameters: DatabaseUnion, options?: KustoPoolDatabasesCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<KustoPoolDatabasesCreateOrUpdateResponse>, KustoPoolDatabasesCreateOrUpdateResponse>>;
    /**
     * Creates or updates a database.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param kustoPoolName The name of the Kusto pool.
     * @param databaseName The name of the database in the Kusto pool.
     * @param parameters The database parameters supplied to the CreateOrUpdate operation.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, workspaceName: string, kustoPoolName: string, databaseName: string, parameters: DatabaseUnion, options?: KustoPoolDatabasesCreateOrUpdateOptionalParams): Promise<KustoPoolDatabasesCreateOrUpdateResponse>;
    /**
     * Updates a database.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param kustoPoolName The name of the Kusto pool.
     * @param databaseName The name of the database in the Kusto pool.
     * @param parameters The database parameters supplied to the Update operation.
     * @param options The options parameters.
     */
    beginUpdate(resourceGroupName: string, workspaceName: string, kustoPoolName: string, databaseName: string, parameters: DatabaseUnion, options?: KustoPoolDatabasesUpdateOptionalParams): Promise<PollerLike<PollOperationState<KustoPoolDatabasesUpdateResponse>, KustoPoolDatabasesUpdateResponse>>;
    /**
     * Updates a database.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param kustoPoolName The name of the Kusto pool.
     * @param databaseName The name of the database in the Kusto pool.
     * @param parameters The database parameters supplied to the Update operation.
     * @param options The options parameters.
     */
    beginUpdateAndWait(resourceGroupName: string, workspaceName: string, kustoPoolName: string, databaseName: string, parameters: DatabaseUnion, options?: KustoPoolDatabasesUpdateOptionalParams): Promise<KustoPoolDatabasesUpdateResponse>;
    /**
     * Deletes the database with the given name.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param kustoPoolName The name of the Kusto pool.
     * @param databaseName The name of the database in the Kusto pool.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, workspaceName: string, kustoPoolName: string, databaseName: string, options?: KustoPoolDatabasesDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes the database with the given name.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param kustoPoolName The name of the Kusto pool.
     * @param databaseName The name of the database in the Kusto pool.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, workspaceName: string, kustoPoolName: string, databaseName: string, options?: KustoPoolDatabasesDeleteOptionalParams): Promise<void>;
}
//# sourceMappingURL=kustoPoolDatabases.d.ts.map