import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SqlPoolVulnerabilityAssessments } from "../operationsInterfaces";
import { SynapseManagementClient } from "../synapseManagementClient";
import { SqlPoolVulnerabilityAssessment, SqlPoolVulnerabilityAssessmentsListOptionalParams, VulnerabilityAssessmentName, SqlPoolVulnerabilityAssessmentsGetOptionalParams, SqlPoolVulnerabilityAssessmentsGetResponse, SqlPoolVulnerabilityAssessmentsCreateOrUpdateOptionalParams, SqlPoolVulnerabilityAssessmentsCreateOrUpdateResponse, SqlPoolVulnerabilityAssessmentsDeleteOptionalParams } from "../models";
/** Class containing SqlPoolVulnerabilityAssessments operations. */
export declare class SqlPoolVulnerabilityAssessmentsImpl implements SqlPoolVulnerabilityAssessments {
    private readonly client;
    /**
     * Initialize a new instance of the class SqlPoolVulnerabilityAssessments class.
     * @param client Reference to the service client
     */
    constructor(client: SynapseManagementClient);
    /**
     * Lists the vulnerability assessment policies associated with a SQL pool.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name
     * @param options The options parameters.
     */
    list(resourceGroupName: string, workspaceName: string, sqlPoolName: string, options?: SqlPoolVulnerabilityAssessmentsListOptionalParams): PagedAsyncIterableIterator<SqlPoolVulnerabilityAssessment>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Lists the vulnerability assessment policies associated with a SQL pool.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name
     * @param options The options parameters.
     */
    private _list;
    /**
     * Gets the Sql pool's vulnerability assessment.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name
     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, workspaceName: string, sqlPoolName: string, vulnerabilityAssessmentName: VulnerabilityAssessmentName, options?: SqlPoolVulnerabilityAssessmentsGetOptionalParams): Promise<SqlPoolVulnerabilityAssessmentsGetResponse>;
    /**
     * Creates or updates the Sql pool vulnerability assessment.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name
     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
     * @param parameters The requested resource.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, workspaceName: string, sqlPoolName: string, vulnerabilityAssessmentName: VulnerabilityAssessmentName, parameters: SqlPoolVulnerabilityAssessment, options?: SqlPoolVulnerabilityAssessmentsCreateOrUpdateOptionalParams): Promise<SqlPoolVulnerabilityAssessmentsCreateOrUpdateResponse>;
    /**
     * Removes the database's vulnerability assessment.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name
     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, workspaceName: string, sqlPoolName: string, vulnerabilityAssessmentName: VulnerabilityAssessmentName, options?: SqlPoolVulnerabilityAssessmentsDeleteOptionalParams): Promise<void>;
    /**
     * ListNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=sqlPoolVulnerabilityAssessments.d.ts.map