import { WorkspaceAadAdmins } from "../operationsInterfaces";
import { SynapseManagementClient } from "../synapseManagementClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { WorkspaceAadAdminsGetOptionalParams, WorkspaceAadAdminsGetResponse, WorkspaceAadAdminInfo, WorkspaceAadAdminsCreateOrUpdateOptionalParams, WorkspaceAadAdminsCreateOrUpdateResponse, WorkspaceAadAdminsDeleteOptionalParams } from "../models";
/** Class containing WorkspaceAadAdmins operations. */
export declare class WorkspaceAadAdminsImpl implements WorkspaceAadAdmins {
    private readonly client;
    /**
     * Initialize a new instance of the class WorkspaceAadAdmins class.
     * @param client Reference to the service client
     */
    constructor(client: SynapseManagementClient);
    /**
     * Gets a workspace active directory admin
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, workspaceName: string, options?: WorkspaceAadAdminsGetOptionalParams): Promise<WorkspaceAadAdminsGetResponse>;
    /**
     * Creates or updates a workspace active directory admin
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param aadAdminInfo Workspace active directory administrator properties
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, workspaceName: string, aadAdminInfo: WorkspaceAadAdminInfo, options?: WorkspaceAadAdminsCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<WorkspaceAadAdminsCreateOrUpdateResponse>, WorkspaceAadAdminsCreateOrUpdateResponse>>;
    /**
     * Creates or updates a workspace active directory admin
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param aadAdminInfo Workspace active directory administrator properties
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, workspaceName: string, aadAdminInfo: WorkspaceAadAdminInfo, options?: WorkspaceAadAdminsCreateOrUpdateOptionalParams): Promise<WorkspaceAadAdminsCreateOrUpdateResponse>;
    /**
     * Deletes a workspace active directory admin
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, workspaceName: string, options?: WorkspaceAadAdminsDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes a workspace active directory admin
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, workspaceName: string, options?: WorkspaceAadAdminsDeleteOptionalParams): Promise<void>;
}
//# sourceMappingURL=workspaceAadAdmins.d.ts.map