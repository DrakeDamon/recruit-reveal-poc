import { SqlPoolColumns } from "../operationsInterfaces";
import { SynapseManagementClient } from "../synapseManagementClient";
import { SqlPoolColumnsGetOptionalParams, SqlPoolColumnsGetResponse } from "../models";
/** Class containing SqlPoolColumns operations. */
export declare class SqlPoolColumnsImpl implements SqlPoolColumns {
    private readonly client;
    /**
     * Initialize a new instance of the class SqlPoolColumns class.
     * @param client Reference to the service client
     */
    constructor(client: SynapseManagementClient);
    /**
     * Get Sql pool column
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name
     * @param schemaName The name of the schema.
     * @param tableName The name of the table.
     * @param columnName The name of the column.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, workspaceName: string, sqlPoolName: string, schemaName: string, tableName: string, columnName: string, options?: SqlPoolColumnsGetOptionalParams): Promise<SqlPoolColumnsGetResponse>;
}
//# sourceMappingURL=sqlPoolColumns.d.ts.map