import { SqlPoolMaintenanceWindowOptions } from "../operationsInterfaces";
import { SynapseManagementClient } from "../synapseManagementClient";
import { SqlPoolMaintenanceWindowOptionsGetOptionalParams, SqlPoolMaintenanceWindowOptionsGetResponse } from "../models";
/** Class containing SqlPoolMaintenanceWindowOptions operations. */
export declare class SqlPoolMaintenanceWindowOptionsImpl implements SqlPoolMaintenanceWindowOptions {
    private readonly client;
    /**
     * Initialize a new instance of the class SqlPoolMaintenanceWindowOptions class.
     * @param client Reference to the service client
     */
    constructor(client: SynapseManagementClient);
    /**
     * Get list of SQL pool's available maintenance windows.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name
     * @param maintenanceWindowOptionsName Maintenance window options name.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, workspaceName: string, sqlPoolName: string, maintenanceWindowOptionsName: string, options?: SqlPoolMaintenanceWindowOptionsGetOptionalParams): Promise<SqlPoolMaintenanceWindowOptionsGetResponse>;
}
//# sourceMappingURL=sqlPoolMaintenanceWindowOptions.d.ts.map