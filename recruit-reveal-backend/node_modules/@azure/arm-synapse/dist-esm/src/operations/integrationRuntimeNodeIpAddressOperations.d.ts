import { IntegrationRuntimeNodeIpAddressOperations } from "../operationsInterfaces";
import { SynapseManagementClient } from "../synapseManagementClient";
import { IntegrationRuntimeNodeIpAddressGetOptionalParams, IntegrationRuntimeNodeIpAddressGetResponse } from "../models";
/** Class containing IntegrationRuntimeNodeIpAddressOperations operations. */
export declare class IntegrationRuntimeNodeIpAddressOperationsImpl implements IntegrationRuntimeNodeIpAddressOperations {
    private readonly client;
    /**
     * Initialize a new instance of the class IntegrationRuntimeNodeIpAddressOperations class.
     * @param client Reference to the service client
     */
    constructor(client: SynapseManagementClient);
    /**
     * Get the IP address of an integration runtime node
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param integrationRuntimeName Integration runtime name
     * @param nodeName Integration runtime node name
     * @param options The options parameters.
     */
    get(resourceGroupName: string, workspaceName: string, integrationRuntimeName: string, nodeName: string, options?: IntegrationRuntimeNodeIpAddressGetOptionalParams): Promise<IntegrationRuntimeNodeIpAddressGetResponse>;
}
//# sourceMappingURL=integrationRuntimeNodeIpAddressOperations.d.ts.map