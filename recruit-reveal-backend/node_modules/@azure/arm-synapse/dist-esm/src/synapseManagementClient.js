/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import * as coreClient from "@azure/core-client";
import { AzureADOnlyAuthenticationsImpl, OperationsImpl, IpFirewallRulesImpl, KeysImpl, PrivateEndpointConnectionsImpl, PrivateLinkResourcesImpl, PrivateLinkHubPrivateLinkResourcesImpl, PrivateLinkHubsImpl, PrivateEndpointConnectionsPrivateLinkHubImpl, SqlPoolsImpl, SqlPoolMetadataSyncConfigsImpl, SqlPoolOperationResultsImpl, SqlPoolGeoBackupPoliciesImpl, SqlPoolDataWarehouseUserActivitiesImpl, SqlPoolRestorePointsImpl, SqlPoolReplicationLinksImpl, SqlPoolMaintenanceWindowsImpl, SqlPoolMaintenanceWindowOptionsImpl, SqlPoolTransparentDataEncryptionsImpl, SqlPoolBlobAuditingPoliciesImpl, SqlPoolOperationsImpl, SqlPoolUsagesImpl, SqlPoolSensitivityLabelsImpl, SqlPoolRecommendedSensitivityLabelsImpl, SqlPoolSchemasImpl, SqlPoolTablesImpl, SqlPoolTableColumnsImpl, SqlPoolConnectionPoliciesImpl, SqlPoolVulnerabilityAssessmentsImpl, SqlPoolVulnerabilityAssessmentScansImpl, SqlPoolSecurityAlertPoliciesImpl, SqlPoolVulnerabilityAssessmentRuleBaselinesImpl, ExtendedSqlPoolBlobAuditingPoliciesImpl, DataMaskingPoliciesImpl, DataMaskingRulesImpl, SqlPoolColumnsImpl, SqlPoolWorkloadGroupImpl, SqlPoolWorkloadClassifierImpl, WorkspaceManagedSqlServerBlobAuditingPoliciesImpl, WorkspaceManagedSqlServerExtendedBlobAuditingPoliciesImpl, WorkspaceManagedSqlServerSecurityAlertPolicyImpl, WorkspaceManagedSqlServerVulnerabilityAssessmentsImpl, WorkspaceManagedSqlServerEncryptionProtectorImpl, WorkspaceManagedSqlServerUsagesImpl, WorkspaceManagedSqlServerRecoverableSqlPoolsImpl, WorkspacesImpl, WorkspaceAadAdminsImpl, WorkspaceSqlAadAdminsImpl, WorkspaceManagedIdentitySqlControlSettingsImpl, RestorableDroppedSqlPoolsImpl, BigDataPoolsImpl, LibraryImpl, LibrariesImpl, IntegrationRuntimesImpl, IntegrationRuntimeNodeIpAddressOperationsImpl, IntegrationRuntimeObjectMetadataImpl, IntegrationRuntimeNodesImpl, IntegrationRuntimeCredentialsImpl, IntegrationRuntimeConnectionInfosImpl, IntegrationRuntimeAuthKeysOperationsImpl, IntegrationRuntimeMonitoringDataOperationsImpl, IntegrationRuntimeStatusOperationsImpl, SparkConfigurationImpl, SparkConfigurationsImpl, KustoOperationsImpl, KustoPoolsImpl, KustoPoolChildResourceImpl, KustoPoolAttachedDatabaseConfigurationsImpl, KustoPoolDatabasesImpl, KustoPoolDataConnectionsImpl, KustoPoolPrincipalAssignmentsImpl, KustoPoolDatabasePrincipalAssignmentsImpl } from "./operations";
export class SynapseManagementClient extends coreClient.ServiceClient {
    /**
     * Initializes a new instance of the SynapseManagementClient class.
     * @param credentials Subscription credentials which uniquely identify client subscription.
     * @param subscriptionId The ID of the target subscription.
     * @param options The parameter options
     */
    constructor(credentials, subscriptionId, options) {
        if (credentials === undefined) {
            throw new Error("'credentials' cannot be null");
        }
        if (subscriptionId === undefined) {
            throw new Error("'subscriptionId' cannot be null");
        }
        // Initializing default values for options
        if (!options) {
            options = {};
        }
        const defaults = {
            requestContentType: "application/json; charset=utf-8",
            credential: credentials
        };
        const packageDetails = `azsdk-js-arm-synapse/8.0.0`;
        const userAgentPrefix = options.userAgentOptions && options.userAgentOptions.userAgentPrefix
            ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`
            : `${packageDetails}`;
        if (!options.credentialScopes) {
            options.credentialScopes = ["https://management.azure.com/.default"];
        }
        const optionsWithDefaults = Object.assign(Object.assign(Object.assign({}, defaults), options), { userAgentOptions: {
                userAgentPrefix
            }, baseUri: options.endpoint || "https://management.azure.com" });
        super(optionsWithDefaults);
        // Parameter assignments
        this.subscriptionId = subscriptionId;
        // Assigning values to Constant parameters
        this.$host = options.$host || "https://management.azure.com";
        this.azureADOnlyAuthentications = new AzureADOnlyAuthenticationsImpl(this);
        this.operations = new OperationsImpl(this);
        this.ipFirewallRules = new IpFirewallRulesImpl(this);
        this.keys = new KeysImpl(this);
        this.privateEndpointConnections = new PrivateEndpointConnectionsImpl(this);
        this.privateLinkResources = new PrivateLinkResourcesImpl(this);
        this.privateLinkHubPrivateLinkResources = new PrivateLinkHubPrivateLinkResourcesImpl(this);
        this.privateLinkHubs = new PrivateLinkHubsImpl(this);
        this.privateEndpointConnectionsPrivateLinkHub = new PrivateEndpointConnectionsPrivateLinkHubImpl(this);
        this.sqlPools = new SqlPoolsImpl(this);
        this.sqlPoolMetadataSyncConfigs = new SqlPoolMetadataSyncConfigsImpl(this);
        this.sqlPoolOperationResults = new SqlPoolOperationResultsImpl(this);
        this.sqlPoolGeoBackupPolicies = new SqlPoolGeoBackupPoliciesImpl(this);
        this.sqlPoolDataWarehouseUserActivities = new SqlPoolDataWarehouseUserActivitiesImpl(this);
        this.sqlPoolRestorePoints = new SqlPoolRestorePointsImpl(this);
        this.sqlPoolReplicationLinks = new SqlPoolReplicationLinksImpl(this);
        this.sqlPoolMaintenanceWindows = new SqlPoolMaintenanceWindowsImpl(this);
        this.sqlPoolMaintenanceWindowOptions = new SqlPoolMaintenanceWindowOptionsImpl(this);
        this.sqlPoolTransparentDataEncryptions = new SqlPoolTransparentDataEncryptionsImpl(this);
        this.sqlPoolBlobAuditingPolicies = new SqlPoolBlobAuditingPoliciesImpl(this);
        this.sqlPoolOperations = new SqlPoolOperationsImpl(this);
        this.sqlPoolUsages = new SqlPoolUsagesImpl(this);
        this.sqlPoolSensitivityLabels = new SqlPoolSensitivityLabelsImpl(this);
        this.sqlPoolRecommendedSensitivityLabels = new SqlPoolRecommendedSensitivityLabelsImpl(this);
        this.sqlPoolSchemas = new SqlPoolSchemasImpl(this);
        this.sqlPoolTables = new SqlPoolTablesImpl(this);
        this.sqlPoolTableColumns = new SqlPoolTableColumnsImpl(this);
        this.sqlPoolConnectionPolicies = new SqlPoolConnectionPoliciesImpl(this);
        this.sqlPoolVulnerabilityAssessments = new SqlPoolVulnerabilityAssessmentsImpl(this);
        this.sqlPoolVulnerabilityAssessmentScans = new SqlPoolVulnerabilityAssessmentScansImpl(this);
        this.sqlPoolSecurityAlertPolicies = new SqlPoolSecurityAlertPoliciesImpl(this);
        this.sqlPoolVulnerabilityAssessmentRuleBaselines = new SqlPoolVulnerabilityAssessmentRuleBaselinesImpl(this);
        this.extendedSqlPoolBlobAuditingPolicies = new ExtendedSqlPoolBlobAuditingPoliciesImpl(this);
        this.dataMaskingPolicies = new DataMaskingPoliciesImpl(this);
        this.dataMaskingRules = new DataMaskingRulesImpl(this);
        this.sqlPoolColumns = new SqlPoolColumnsImpl(this);
        this.sqlPoolWorkloadGroup = new SqlPoolWorkloadGroupImpl(this);
        this.sqlPoolWorkloadClassifier = new SqlPoolWorkloadClassifierImpl(this);
        this.workspaceManagedSqlServerBlobAuditingPolicies = new WorkspaceManagedSqlServerBlobAuditingPoliciesImpl(this);
        this.workspaceManagedSqlServerExtendedBlobAuditingPolicies = new WorkspaceManagedSqlServerExtendedBlobAuditingPoliciesImpl(this);
        this.workspaceManagedSqlServerSecurityAlertPolicy = new WorkspaceManagedSqlServerSecurityAlertPolicyImpl(this);
        this.workspaceManagedSqlServerVulnerabilityAssessments = new WorkspaceManagedSqlServerVulnerabilityAssessmentsImpl(this);
        this.workspaceManagedSqlServerEncryptionProtector = new WorkspaceManagedSqlServerEncryptionProtectorImpl(this);
        this.workspaceManagedSqlServerUsages = new WorkspaceManagedSqlServerUsagesImpl(this);
        this.workspaceManagedSqlServerRecoverableSqlPools = new WorkspaceManagedSqlServerRecoverableSqlPoolsImpl(this);
        this.workspaces = new WorkspacesImpl(this);
        this.workspaceAadAdmins = new WorkspaceAadAdminsImpl(this);
        this.workspaceSqlAadAdmins = new WorkspaceSqlAadAdminsImpl(this);
        this.workspaceManagedIdentitySqlControlSettings = new WorkspaceManagedIdentitySqlControlSettingsImpl(this);
        this.restorableDroppedSqlPools = new RestorableDroppedSqlPoolsImpl(this);
        this.bigDataPools = new BigDataPoolsImpl(this);
        this.library = new LibraryImpl(this);
        this.libraries = new LibrariesImpl(this);
        this.integrationRuntimes = new IntegrationRuntimesImpl(this);
        this.integrationRuntimeNodeIpAddressOperations = new IntegrationRuntimeNodeIpAddressOperationsImpl(this);
        this.integrationRuntimeObjectMetadata = new IntegrationRuntimeObjectMetadataImpl(this);
        this.integrationRuntimeNodes = new IntegrationRuntimeNodesImpl(this);
        this.integrationRuntimeCredentials = new IntegrationRuntimeCredentialsImpl(this);
        this.integrationRuntimeConnectionInfos = new IntegrationRuntimeConnectionInfosImpl(this);
        this.integrationRuntimeAuthKeysOperations = new IntegrationRuntimeAuthKeysOperationsImpl(this);
        this.integrationRuntimeMonitoringDataOperations = new IntegrationRuntimeMonitoringDataOperationsImpl(this);
        this.integrationRuntimeStatusOperations = new IntegrationRuntimeStatusOperationsImpl(this);
        this.sparkConfiguration = new SparkConfigurationImpl(this);
        this.sparkConfigurations = new SparkConfigurationsImpl(this);
        this.kustoOperations = new KustoOperationsImpl(this);
        this.kustoPools = new KustoPoolsImpl(this);
        this.kustoPoolChildResource = new KustoPoolChildResourceImpl(this);
        this.kustoPoolAttachedDatabaseConfigurations = new KustoPoolAttachedDatabaseConfigurationsImpl(this);
        this.kustoPoolDatabases = new KustoPoolDatabasesImpl(this);
        this.kustoPoolDataConnections = new KustoPoolDataConnectionsImpl(this);
        this.kustoPoolPrincipalAssignments = new KustoPoolPrincipalAssignmentsImpl(this);
        this.kustoPoolDatabasePrincipalAssignments = new KustoPoolDatabasePrincipalAssignmentsImpl(this);
    }
}
//# sourceMappingURL=synapseManagementClient.js.map