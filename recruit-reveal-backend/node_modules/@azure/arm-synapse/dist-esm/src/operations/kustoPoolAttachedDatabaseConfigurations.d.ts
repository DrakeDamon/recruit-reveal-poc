import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { KustoPoolAttachedDatabaseConfigurations } from "../operationsInterfaces";
import { SynapseManagementClient } from "../synapseManagementClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { AttachedDatabaseConfiguration, KustoPoolAttachedDatabaseConfigurationsListByKustoPoolOptionalParams, KustoPoolAttachedDatabaseConfigurationsGetOptionalParams, KustoPoolAttachedDatabaseConfigurationsGetResponse, KustoPoolAttachedDatabaseConfigurationsCreateOrUpdateOptionalParams, KustoPoolAttachedDatabaseConfigurationsCreateOrUpdateResponse, KustoPoolAttachedDatabaseConfigurationsDeleteOptionalParams } from "../models";
/** Class containing KustoPoolAttachedDatabaseConfigurations operations. */
export declare class KustoPoolAttachedDatabaseConfigurationsImpl implements KustoPoolAttachedDatabaseConfigurations {
    private readonly client;
    /**
     * Initialize a new instance of the class KustoPoolAttachedDatabaseConfigurations class.
     * @param client Reference to the service client
     */
    constructor(client: SynapseManagementClient);
    /**
     * Returns the list of attached database configurations of the given Kusto Pool.
     * @param workspaceName The name of the workspace.
     * @param kustoPoolName The name of the Kusto pool.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    listByKustoPool(workspaceName: string, kustoPoolName: string, resourceGroupName: string, options?: KustoPoolAttachedDatabaseConfigurationsListByKustoPoolOptionalParams): PagedAsyncIterableIterator<AttachedDatabaseConfiguration>;
    private listByKustoPoolPagingPage;
    private listByKustoPoolPagingAll;
    /**
     * Returns the list of attached database configurations of the given Kusto Pool.
     * @param workspaceName The name of the workspace.
     * @param kustoPoolName The name of the Kusto pool.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    private _listByKustoPool;
    /**
     * Returns an attached database configuration.
     * @param workspaceName The name of the workspace.
     * @param kustoPoolName The name of the Kusto pool.
     * @param attachedDatabaseConfigurationName The name of the attached database configuration.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    get(workspaceName: string, kustoPoolName: string, attachedDatabaseConfigurationName: string, resourceGroupName: string, options?: KustoPoolAttachedDatabaseConfigurationsGetOptionalParams): Promise<KustoPoolAttachedDatabaseConfigurationsGetResponse>;
    /**
     * Creates or updates an attached database configuration.
     * @param workspaceName The name of the workspace.
     * @param kustoPoolName The name of the Kusto pool.
     * @param attachedDatabaseConfigurationName The name of the attached database configuration.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param parameters The database parameters supplied to the CreateOrUpdate operation.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(workspaceName: string, kustoPoolName: string, attachedDatabaseConfigurationName: string, resourceGroupName: string, parameters: AttachedDatabaseConfiguration, options?: KustoPoolAttachedDatabaseConfigurationsCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<KustoPoolAttachedDatabaseConfigurationsCreateOrUpdateResponse>, KustoPoolAttachedDatabaseConfigurationsCreateOrUpdateResponse>>;
    /**
     * Creates or updates an attached database configuration.
     * @param workspaceName The name of the workspace.
     * @param kustoPoolName The name of the Kusto pool.
     * @param attachedDatabaseConfigurationName The name of the attached database configuration.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param parameters The database parameters supplied to the CreateOrUpdate operation.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(workspaceName: string, kustoPoolName: string, attachedDatabaseConfigurationName: string, resourceGroupName: string, parameters: AttachedDatabaseConfiguration, options?: KustoPoolAttachedDatabaseConfigurationsCreateOrUpdateOptionalParams): Promise<KustoPoolAttachedDatabaseConfigurationsCreateOrUpdateResponse>;
    /**
     * Deletes the attached database configuration with the given name.
     * @param workspaceName The name of the workspace.
     * @param kustoPoolName The name of the Kusto pool.
     * @param attachedDatabaseConfigurationName The name of the attached database configuration.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    beginDelete(workspaceName: string, kustoPoolName: string, attachedDatabaseConfigurationName: string, resourceGroupName: string, options?: KustoPoolAttachedDatabaseConfigurationsDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes the attached database configuration with the given name.
     * @param workspaceName The name of the workspace.
     * @param kustoPoolName The name of the Kusto pool.
     * @param attachedDatabaseConfigurationName The name of the attached database configuration.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param options The options parameters.
     */
    beginDeleteAndWait(workspaceName: string, kustoPoolName: string, attachedDatabaseConfigurationName: string, resourceGroupName: string, options?: KustoPoolAttachedDatabaseConfigurationsDeleteOptionalParams): Promise<void>;
}
//# sourceMappingURL=kustoPoolAttachedDatabaseConfigurations.d.ts.map