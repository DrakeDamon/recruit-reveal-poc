import { IntegrationRuntimeObjectMetadata } from "../operationsInterfaces";
import { SynapseManagementClient } from "../synapseManagementClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { IntegrationRuntimeObjectMetadataListOptionalParams, IntegrationRuntimeObjectMetadataListResponse, IntegrationRuntimeObjectMetadataRefreshOptionalParams, IntegrationRuntimeObjectMetadataRefreshResponse } from "../models";
/** Class containing IntegrationRuntimeObjectMetadata operations. */
export declare class IntegrationRuntimeObjectMetadataImpl implements IntegrationRuntimeObjectMetadata {
    private readonly client;
    /**
     * Initialize a new instance of the class IntegrationRuntimeObjectMetadata class.
     * @param client Reference to the service client
     */
    constructor(client: SynapseManagementClient);
    /**
     * Get object metadata from an integration runtime
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param integrationRuntimeName Integration runtime name
     * @param options The options parameters.
     */
    list(resourceGroupName: string, workspaceName: string, integrationRuntimeName: string, options?: IntegrationRuntimeObjectMetadataListOptionalParams): Promise<IntegrationRuntimeObjectMetadataListResponse>;
    /**
     * Refresh the object metadata in an integration runtime
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param integrationRuntimeName Integration runtime name
     * @param options The options parameters.
     */
    beginRefresh(resourceGroupName: string, workspaceName: string, integrationRuntimeName: string, options?: IntegrationRuntimeObjectMetadataRefreshOptionalParams): Promise<PollerLike<PollOperationState<IntegrationRuntimeObjectMetadataRefreshResponse>, IntegrationRuntimeObjectMetadataRefreshResponse>>;
    /**
     * Refresh the object metadata in an integration runtime
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param integrationRuntimeName Integration runtime name
     * @param options The options parameters.
     */
    beginRefreshAndWait(resourceGroupName: string, workspaceName: string, integrationRuntimeName: string, options?: IntegrationRuntimeObjectMetadataRefreshOptionalParams): Promise<IntegrationRuntimeObjectMetadataRefreshResponse>;
}
//# sourceMappingURL=integrationRuntimeObjectMetadata.d.ts.map