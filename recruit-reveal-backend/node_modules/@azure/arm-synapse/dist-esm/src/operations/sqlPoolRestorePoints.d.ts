import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SqlPoolRestorePoints } from "../operationsInterfaces";
import { SynapseManagementClient } from "../synapseManagementClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { RestorePoint, SqlPoolRestorePointsListOptionalParams, CreateSqlPoolRestorePointDefinition, SqlPoolRestorePointsCreateOptionalParams, SqlPoolRestorePointsCreateResponse, SqlPoolRestorePointsGetOptionalParams, SqlPoolRestorePointsGetResponse, SqlPoolRestorePointsDeleteOptionalParams } from "../models";
/** Class containing SqlPoolRestorePoints operations. */
export declare class SqlPoolRestorePointsImpl implements SqlPoolRestorePoints {
    private readonly client;
    /**
     * Initialize a new instance of the class SqlPoolRestorePoints class.
     * @param client Reference to the service client
     */
    constructor(client: SynapseManagementClient);
    /**
     * Get SQL pool backup information
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name
     * @param options The options parameters.
     */
    list(resourceGroupName: string, workspaceName: string, sqlPoolName: string, options?: SqlPoolRestorePointsListOptionalParams): PagedAsyncIterableIterator<RestorePoint>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Get SQL pool backup information
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name
     * @param options The options parameters.
     */
    private _list;
    /**
     * Creates a restore point for a data warehouse.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name
     * @param parameters The definition for creating the restore point of this Sql pool.
     * @param options The options parameters.
     */
    beginCreate(resourceGroupName: string, workspaceName: string, sqlPoolName: string, parameters: CreateSqlPoolRestorePointDefinition, options?: SqlPoolRestorePointsCreateOptionalParams): Promise<PollerLike<PollOperationState<SqlPoolRestorePointsCreateResponse>, SqlPoolRestorePointsCreateResponse>>;
    /**
     * Creates a restore point for a data warehouse.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name
     * @param parameters The definition for creating the restore point of this Sql pool.
     * @param options The options parameters.
     */
    beginCreateAndWait(resourceGroupName: string, workspaceName: string, sqlPoolName: string, parameters: CreateSqlPoolRestorePointDefinition, options?: SqlPoolRestorePointsCreateOptionalParams): Promise<SqlPoolRestorePointsCreateResponse>;
    /**
     * Gets a restore point.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name
     * @param restorePointName The name of the restore point.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, workspaceName: string, sqlPoolName: string, restorePointName: string, options?: SqlPoolRestorePointsGetOptionalParams): Promise<SqlPoolRestorePointsGetResponse>;
    /**
     * Deletes a restore point.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name
     * @param restorePointName The name of the restore point.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, workspaceName: string, sqlPoolName: string, restorePointName: string, options?: SqlPoolRestorePointsDeleteOptionalParams): Promise<void>;
    /**
     * ListNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=sqlPoolRestorePoints.d.ts.map