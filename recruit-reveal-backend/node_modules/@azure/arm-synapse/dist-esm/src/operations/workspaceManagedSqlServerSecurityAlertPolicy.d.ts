import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { WorkspaceManagedSqlServerSecurityAlertPolicy } from "../operationsInterfaces";
import { SynapseManagementClient } from "../synapseManagementClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { ServerSecurityAlertPolicy, WorkspaceManagedSqlServerSecurityAlertPolicyListOptionalParams, SecurityAlertPolicyNameAutoGenerated, WorkspaceManagedSqlServerSecurityAlertPolicyGetOptionalParams, WorkspaceManagedSqlServerSecurityAlertPolicyGetResponse, WorkspaceManagedSqlServerSecurityAlertPolicyCreateOrUpdateOptionalParams, WorkspaceManagedSqlServerSecurityAlertPolicyCreateOrUpdateResponse } from "../models";
/** Class containing WorkspaceManagedSqlServerSecurityAlertPolicy operations. */
export declare class WorkspaceManagedSqlServerSecurityAlertPolicyImpl implements WorkspaceManagedSqlServerSecurityAlertPolicy {
    private readonly client;
    /**
     * Initialize a new instance of the class WorkspaceManagedSqlServerSecurityAlertPolicy class.
     * @param client Reference to the service client
     */
    constructor(client: SynapseManagementClient);
    /**
     * Get workspace managed sql server's threat detection policies.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, workspaceName: string, options?: WorkspaceManagedSqlServerSecurityAlertPolicyListOptionalParams): PagedAsyncIterableIterator<ServerSecurityAlertPolicy>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Get a workspace managed sql server's security alert policy.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param securityAlertPolicyName The name of the security alert policy.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, workspaceName: string, securityAlertPolicyName: SecurityAlertPolicyNameAutoGenerated, options?: WorkspaceManagedSqlServerSecurityAlertPolicyGetOptionalParams): Promise<WorkspaceManagedSqlServerSecurityAlertPolicyGetResponse>;
    /**
     * Create or Update a workspace managed sql server's threat detection policy.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param securityAlertPolicyName The name of the security alert policy.
     * @param parameters The workspace managed sql server security alert policy.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, workspaceName: string, securityAlertPolicyName: SecurityAlertPolicyNameAutoGenerated, parameters: ServerSecurityAlertPolicy, options?: WorkspaceManagedSqlServerSecurityAlertPolicyCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<WorkspaceManagedSqlServerSecurityAlertPolicyCreateOrUpdateResponse>, WorkspaceManagedSqlServerSecurityAlertPolicyCreateOrUpdateResponse>>;
    /**
     * Create or Update a workspace managed sql server's threat detection policy.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param securityAlertPolicyName The name of the security alert policy.
     * @param parameters The workspace managed sql server security alert policy.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, workspaceName: string, securityAlertPolicyName: SecurityAlertPolicyNameAutoGenerated, parameters: ServerSecurityAlertPolicy, options?: WorkspaceManagedSqlServerSecurityAlertPolicyCreateOrUpdateOptionalParams): Promise<WorkspaceManagedSqlServerSecurityAlertPolicyCreateOrUpdateResponse>;
    /**
     * Get workspace managed sql server's threat detection policies.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param options The options parameters.
     */
    private _list;
    /**
     * ListNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=workspaceManagedSqlServerSecurityAlertPolicy.d.ts.map