import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { ExtendedSqlPoolBlobAuditingPolicies } from "../operationsInterfaces";
import { SynapseManagementClient } from "../synapseManagementClient";
import { ExtendedSqlPoolBlobAuditingPolicy, ExtendedSqlPoolBlobAuditingPoliciesListBySqlPoolOptionalParams, ExtendedSqlPoolBlobAuditingPoliciesGetOptionalParams, ExtendedSqlPoolBlobAuditingPoliciesGetResponse, ExtendedSqlPoolBlobAuditingPoliciesCreateOrUpdateOptionalParams, ExtendedSqlPoolBlobAuditingPoliciesCreateOrUpdateResponse } from "../models";
/** Class containing ExtendedSqlPoolBlobAuditingPolicies operations. */
export declare class ExtendedSqlPoolBlobAuditingPoliciesImpl implements ExtendedSqlPoolBlobAuditingPolicies {
    private readonly client;
    /**
     * Initialize a new instance of the class ExtendedSqlPoolBlobAuditingPolicies class.
     * @param client Reference to the service client
     */
    constructor(client: SynapseManagementClient);
    /**
     * Lists extended auditing settings of a Sql pool.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name
     * @param options The options parameters.
     */
    listBySqlPool(resourceGroupName: string, workspaceName: string, sqlPoolName: string, options?: ExtendedSqlPoolBlobAuditingPoliciesListBySqlPoolOptionalParams): PagedAsyncIterableIterator<ExtendedSqlPoolBlobAuditingPolicy>;
    private listBySqlPoolPagingPage;
    private listBySqlPoolPagingAll;
    /**
     * Gets an extended Sql pool's blob auditing policy.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name
     * @param options The options parameters.
     */
    get(resourceGroupName: string, workspaceName: string, sqlPoolName: string, options?: ExtendedSqlPoolBlobAuditingPoliciesGetOptionalParams): Promise<ExtendedSqlPoolBlobAuditingPoliciesGetResponse>;
    /**
     * Creates or updates an extended Sql pool's blob auditing policy.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name
     * @param parameters The extended Sql pool blob auditing policy.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, workspaceName: string, sqlPoolName: string, parameters: ExtendedSqlPoolBlobAuditingPolicy, options?: ExtendedSqlPoolBlobAuditingPoliciesCreateOrUpdateOptionalParams): Promise<ExtendedSqlPoolBlobAuditingPoliciesCreateOrUpdateResponse>;
    /**
     * Lists extended auditing settings of a Sql pool.
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name
     * @param options The options parameters.
     */
    private _listBySqlPool;
    /**
     * ListBySqlPoolNext
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param workspaceName The name of the workspace.
     * @param sqlPoolName SQL pool name
     * @param nextLink The nextLink from the previous successful call to the ListBySqlPool method.
     * @param options The options parameters.
     */
    private _listBySqlPoolNext;
}
//# sourceMappingURL=extendedSqlPoolBlobAuditingPolicies.d.ts.map